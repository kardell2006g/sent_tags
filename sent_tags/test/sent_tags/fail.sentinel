terraform_version = "1.1.9"

planned_values = {
	"outputs": {
		"rds_hostname": {
			"name":      "rds_hostname",
			"sensitive": true,
			"value":     undefined,
		},
		"rds_port": {
			"name":      "rds_port",
			"sensitive": true,
			"value":     undefined,
		},
		"rds_username": {
			"name":      "rds_username",
			"sensitive": true,
			"value":     "REDACTED_SENSITIVE",
		},
	},
	"resources": {
		"aws_db_instance.education": {
			"address":        "aws_db_instance.education",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "",
			"name":           "education",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_db_instance",
			"values": {
				"allocated_storage":               5,
				"allow_major_version_upgrade":     null,
				"auto_minor_version_upgrade":      true,
				"copy_tags_to_snapshot":           false,
				"db_subnet_group_name":            "education",
				"delete_automated_backups":        true,
				"deletion_protection":             null,
				"domain":                          null,
				"domain_iam_role_name":            null,
				"enabled_cloudwatch_logs_exports": null,
				"engine":                              "postgres",
				"engine_version":                      "13.3",
				"final_snapshot_identifier":           null,
				"iam_database_authentication_enabled": null,
				"identifier":                          "education",
				"instance_class":                      "db.t3.micro",
				"iops":                                null,
				"max_allocated_storage":               null,
				"monitoring_interval":                 0,
				"parameter_group_name":                "education",
				"password":                            "REDACTED_SENSITIVE",
				"performance_insights_enabled":        false,
				"publicly_accessible":                 true,
				"replicate_source_db":                 null,
				"restore_to_point_in_time":            [],
				"s3_import":                           [],
				"security_group_names":                null,
				"skip_final_snapshot":                 true,
				"storage_encrypted":                   null,
				"tags":                                null,
				"timeouts":                            null,
				"username":                            "edu",
			},
		},
		"aws_db_parameter_group.education": {
			"address":        "aws_db_parameter_group.education",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "",
			"name":           "education",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_db_parameter_group",
			"values": {
				"description": "Managed by Terraform",
				"family":      "postgres13",
				"name":        "education",
				"parameter": [
					{
						"apply_method": "immediate",
						"name":         "log_connections",
						"value":        "1",
					},
				],
				"tags": null,
			},
		},
		"aws_db_subnet_group.education": {
			"address":        "aws_db_subnet_group.education",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "",
			"name":           "education",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_db_subnet_group",
			"values": {
				"description": "Managed by Terraform",
				"name":        "education",
				"tags": {
					"Name": "Education",
				},
			},
		},
		"aws_security_group.rds": {
			"address":        "aws_security_group.rds",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "",
			"name":           "rds",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_security_group",
			"values": {
				"description": "Managed by Terraform",
				"egress": [
					{
						"cidr_blocks": [
							"0.0.0.0/0",
						],
						"description":      "",
						"from_port":        5432,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          5432,
					},
				],
				"ingress": [
					{
						"cidr_blocks": [
							"0.0.0.0/0",
						],
						"description":      "",
						"from_port":        5432,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          5432,
					},
				],
				"name": "education_rds",
				"revoke_rules_on_delete": false,
				"tags": {
					"Name": "education_rds",
				},
				"timeouts": null,
			},
		},
		"module.vpc.aws_internet_gateway.this[0]": {
			"address":        "module.vpc.aws_internet_gateway.this[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "this",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_internet_gateway",
			"values": {
				"tags": {
					"Name": "education",
				},
			},
		},
		"module.vpc.aws_route.public_internet_gateway[0]": {
			"address":        "module.vpc.aws_route.public_internet_gateway[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "public_internet_gateway",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_route",
			"values": {
				"destination_cidr_block":      "0.0.0.0/0",
				"destination_ipv6_cidr_block": null,
				"timeouts": {
					"create": "5m",
					"delete": null,
				},
				"transit_gateway_id":        null,
				"vpc_endpoint_id":           null,
				"vpc_peering_connection_id": null,
			},
		},
		"module.vpc.aws_route_table.public[0]": {
			"address":        "module.vpc.aws_route_table.public[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "public",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_route_table",
			"values": {
				"tags": {
					"Name": "education-public",
				},
			},
		},
		"module.vpc.aws_route_table_association.public[0]": {
			"address":        "module.vpc.aws_route_table_association.public[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "public",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_route_table_association",
			"values": {
				"gateway_id": null,
			},
		},
		"module.vpc.aws_route_table_association.public[1]": {
			"address":        "module.vpc.aws_route_table_association.public[1]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          1,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "public",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_route_table_association",
			"values": {
				"gateway_id": null,
			},
		},
		"module.vpc.aws_route_table_association.public[2]": {
			"address":        "module.vpc.aws_route_table_association.public[2]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          2,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "public",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_route_table_association",
			"values": {
				"gateway_id": null,
			},
		},
		"module.vpc.aws_subnet.public[0]": {
			"address":        "module.vpc.aws_subnet.public[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "public",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_subnet",
			"values": {
				"assign_ipv6_address_on_creation": false,
				"availability_zone":               "us-east-2a",
				"cidr_block":                      "10.122.4.0/24",
				"customer_owned_ipv4_pool":        null,
				"ipv6_cidr_block":                 null,
				"map_customer_owned_ip_on_launch": null,
				"map_public_ip_on_launch":         true,
				"outpost_arn":                     null,
				"tags": {
					"Name": "education-public-us-east-2a",
				},
				"timeouts": null,
			},
		},
		"module.vpc.aws_subnet.public[1]": {
			"address":        "module.vpc.aws_subnet.public[1]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          1,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "public",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_subnet",
			"values": {
				"assign_ipv6_address_on_creation": false,
				"availability_zone":               "us-east-2b",
				"cidr_block":                      "10.122.5.0/24",
				"customer_owned_ipv4_pool":        null,
				"ipv6_cidr_block":                 null,
				"map_customer_owned_ip_on_launch": null,
				"map_public_ip_on_launch":         true,
				"outpost_arn":                     null,
				"tags": {
					"Name": "education-public-us-east-2b",
				},
				"timeouts": null,
			},
		},
		"module.vpc.aws_subnet.public[2]": {
			"address":        "module.vpc.aws_subnet.public[2]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          2,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "public",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_subnet",
			"values": {
				"assign_ipv6_address_on_creation": false,
				"availability_zone":               "us-east-2c",
				"cidr_block":                      "10.122.6.0/24",
				"customer_owned_ipv4_pool":        null,
				"ipv6_cidr_block":                 null,
				"map_customer_owned_ip_on_launch": null,
				"map_public_ip_on_launch":         true,
				"outpost_arn":                     null,
				"tags": {
					"Name": "education-public-us-east-2c",
				},
				"timeouts": null,
			},
		},
		"module.vpc.aws_vpc.this[0]": {
			"address":        "module.vpc.aws_vpc.this[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "this",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_vpc",
			"values": {
				"assign_generated_ipv6_cidr_block": false,
				"cidr_block":                       "10.122.0.0/16",
				"enable_dns_hostnames":             true,
				"enable_dns_support":               true,
				"instance_tenancy":                 "default",
				"tags": {
					"Name": "education",
				},
			},
		},
	},
}

variables = {
	"db_password": {
		"name":  "db_password",
		"value": "REDACTED_SENSITIVE",
	},
	"region": {
		"name":  "region",
		"value": "us-east-2",
	},
}

resource_changes = {
	"aws_db_instance.education": {
		"address": "aws_db_instance.education",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"allocated_storage":               5,
				"allow_major_version_upgrade":     null,
				"auto_minor_version_upgrade":      true,
				"copy_tags_to_snapshot":           false,
				"db_subnet_group_name":            "education",
				"delete_automated_backups":        true,
				"deletion_protection":             null,
				"domain":                          null,
				"domain_iam_role_name":            null,
				"enabled_cloudwatch_logs_exports": null,
				"engine":                              "postgres",
				"engine_version":                      "13.3",
				"final_snapshot_identifier":           null,
				"iam_database_authentication_enabled": null,
				"identifier":                          "education",
				"instance_class":                      "db.t3.micro",
				"iops":                                null,
				"max_allocated_storage":               null,
				"monitoring_interval":                 0,
				"parameter_group_name":                "education",
				"password":                            "REDACTED_SENSITIVE",
				"performance_insights_enabled":        false,
				"publicly_accessible":                 true,
				"replicate_source_db":                 null,
				"restore_to_point_in_time":            [],
				"s3_import":                           [],
				"security_group_names":                null,
				"skip_final_snapshot":                 true,
				"storage_encrypted":                   null,
				"tags":                                null,
				"timeouts":                            null,
				"username":                            "edu",
			},
			"after_unknown": {
				"address":                               true,
				"apply_immediately":                     true,
				"arn":                                   true,
				"availability_zone":                     true,
				"backup_retention_period":               true,
				"backup_window":                         true,
				"ca_cert_identifier":                    true,
				"character_set_name":                    true,
				"endpoint":                              true,
				"hosted_zone_id":                        true,
				"id":                                    true,
				"identifier_prefix":                     true,
				"kms_key_id":                            true,
				"latest_restorable_time":                true,
				"license_model":                         true,
				"maintenance_window":                    true,
				"monitoring_role_arn":                   true,
				"multi_az":                              true,
				"name":                                  true,
				"option_group_name":                     true,
				"performance_insights_kms_key_id":       true,
				"performance_insights_retention_period": true,
				"port":                     true,
				"replicas":                 true,
				"resource_id":              true,
				"restore_to_point_in_time": [],
				"s3_import":                [],
				"snapshot_identifier":      true,
				"status":                   true,
				"storage_type":             true,
				"timezone":                 true,
				"vpc_security_group_ids":   true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "",
		"name":           "education",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_db_instance",
	},
	"aws_db_parameter_group.education": {
		"address": "aws_db_parameter_group.education",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"description": "Managed by Terraform",
				"family":      "postgres13",
				"name":        "education",
				"parameter": [
					{
						"apply_method": "immediate",
						"name":         "log_connections",
						"value":        "1",
					},
				],
				"tags": null,
			},
			"after_unknown": {
				"arn":         true,
				"id":          true,
				"name_prefix": true,
				"parameter": [
					{},
				],
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "",
		"name":           "education",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_db_parameter_group",
	},
	"aws_db_subnet_group.education": {
		"address": "aws_db_subnet_group.education",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"description": "Managed by Terraform",
				"name":        "education",
				"tags": {
					"Name": "Education",
				},
			},
			"after_unknown": {
				"arn":         true,
				"id":          true,
				"name_prefix": true,
				"subnet_ids":  true,
				"tags":        {},
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "",
		"name":           "education",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_db_subnet_group",
	},
	"aws_security_group.rds": {
		"address": "aws_security_group.rds",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"description": "Managed by Terraform",
				"egress": [
					{
						"cidr_blocks": [
							"0.0.0.0/0",
						],
						"description":      "",
						"from_port":        5432,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          5432,
					},
				],
				"ingress": [
					{
						"cidr_blocks": [
							"0.0.0.0/0",
						],
						"description":      "",
						"from_port":        5432,
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"protocol":         "tcp",
						"security_groups":  [],
						"self":             false,
						"to_port":          5432,
					},
				],
				"name": "education_rds",
				"revoke_rules_on_delete": false,
				"tags": {
					"Name": "education_rds",
				},
				"timeouts": null,
			},
			"after_unknown": {
				"arn": true,
				"egress": [
					{
						"cidr_blocks": [
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
				],
				"id": true,
				"ingress": [
					{
						"cidr_blocks": [
							false,
						],
						"ipv6_cidr_blocks": [],
						"prefix_list_ids":  [],
						"security_groups":  [],
					},
				],
				"name_prefix": true,
				"owner_id":    true,
				"tags":        {},
				"vpc_id":      true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "",
		"name":           "rds",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_security_group",
	},
	"module.vpc.aws_internet_gateway.this[0]": {
		"address": "module.vpc.aws_internet_gateway.this[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"tags": {
					"Name": "education",
				},
			},
			"after_unknown": {
				"arn":      true,
				"id":       true,
				"owner_id": true,
				"tags":     {},
				"vpc_id":   true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.vpc",
		"name":           "this",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_internet_gateway",
	},
	"module.vpc.aws_route.public_internet_gateway[0]": {
		"address": "module.vpc.aws_route.public_internet_gateway[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"destination_cidr_block":      "0.0.0.0/0",
				"destination_ipv6_cidr_block": null,
				"timeouts": {
					"create": "5m",
					"delete": null,
				},
				"transit_gateway_id":        null,
				"vpc_endpoint_id":           null,
				"vpc_peering_connection_id": null,
			},
			"after_unknown": {
				"destination_prefix_list_id": true,
				"egress_only_gateway_id":     true,
				"gateway_id":                 true,
				"id":                         true,
				"instance_id":                true,
				"instance_owner_id":          true,
				"local_gateway_id":           true,
				"nat_gateway_id":             true,
				"network_interface_id":       true,
				"origin":                     true,
				"route_table_id":             true,
				"state":                      true,
				"timeouts":                   {},
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.vpc",
		"name":           "public_internet_gateway",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_route",
	},
	"module.vpc.aws_route_table.public[0]": {
		"address": "module.vpc.aws_route_table.public[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"tags": {
					"Name": "education-public",
				},
			},
			"after_unknown": {
				"id":               true,
				"owner_id":         true,
				"propagating_vgws": true,
				"route":            true,
				"tags":             {},
				"vpc_id":           true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.vpc",
		"name":           "public",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_route_table",
	},
	"module.vpc.aws_route_table_association.public[0]": {
		"address": "module.vpc.aws_route_table_association.public[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"gateway_id": null,
			},
			"after_unknown": {
				"id":             true,
				"route_table_id": true,
				"subnet_id":      true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.vpc",
		"name":           "public",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_route_table_association",
	},
	"module.vpc.aws_route_table_association.public[1]": {
		"address": "module.vpc.aws_route_table_association.public[1]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"gateway_id": null,
			},
			"after_unknown": {
				"id":             true,
				"route_table_id": true,
				"subnet_id":      true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          1,
		"mode":           "managed",
		"module_address": "module.vpc",
		"name":           "public",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_route_table_association",
	},
	"module.vpc.aws_route_table_association.public[2]": {
		"address": "module.vpc.aws_route_table_association.public[2]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"gateway_id": null,
			},
			"after_unknown": {
				"id":             true,
				"route_table_id": true,
				"subnet_id":      true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          2,
		"mode":           "managed",
		"module_address": "module.vpc",
		"name":           "public",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_route_table_association",
	},
	"module.vpc.aws_subnet.public[0]": {
		"address": "module.vpc.aws_subnet.public[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"assign_ipv6_address_on_creation": false,
				"availability_zone":               "us-east-2a",
				"cidr_block":                      "10.122.4.0/24",
				"customer_owned_ipv4_pool":        null,
				"ipv6_cidr_block":                 null,
				"map_customer_owned_ip_on_launch": null,
				"map_public_ip_on_launch":         true,
				"outpost_arn":                     null,
				"tags": {
					"Name": "education-public-us-east-2a",
				},
				"timeouts": null,
			},
			"after_unknown": {
				"arn": true,
				"availability_zone_id": true,
				"id": true,
				"ipv6_cidr_block_association_id": true,
				"owner_id":                       true,
				"tags":                           {},
				"vpc_id":                         true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.vpc",
		"name":           "public",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_subnet",
	},
	"module.vpc.aws_subnet.public[1]": {
		"address": "module.vpc.aws_subnet.public[1]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"assign_ipv6_address_on_creation": false,
				"availability_zone":               "us-east-2b",
				"cidr_block":                      "10.122.5.0/24",
				"customer_owned_ipv4_pool":        null,
				"ipv6_cidr_block":                 null,
				"map_customer_owned_ip_on_launch": null,
				"map_public_ip_on_launch":         true,
				"outpost_arn":                     null,
				"tags": {
					"Name": "education-public-us-east-2b",
				},
				"timeouts": null,
			},
			"after_unknown": {
				"arn": true,
				"availability_zone_id": true,
				"id": true,
				"ipv6_cidr_block_association_id": true,
				"owner_id":                       true,
				"tags":                           {},
				"vpc_id":                         true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          1,
		"mode":           "managed",
		"module_address": "module.vpc",
		"name":           "public",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_subnet",
	},
	"module.vpc.aws_subnet.public[2]": {
		"address": "module.vpc.aws_subnet.public[2]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"assign_ipv6_address_on_creation": false,
				"availability_zone":               "us-east-2c",
				"cidr_block":                      "10.122.6.0/24",
				"customer_owned_ipv4_pool":        null,
				"ipv6_cidr_block":                 null,
				"map_customer_owned_ip_on_launch": null,
				"map_public_ip_on_launch":         true,
				"outpost_arn":                     null,
				"tags": {
					"Name": "education-public-us-east-2c",
				},
				"timeouts": null,
			},
			"after_unknown": {
				"arn": true,
				"availability_zone_id": true,
				"id": true,
				"ipv6_cidr_block_association_id": true,
				"owner_id":                       true,
				"tags":                           {},
				"vpc_id":                         true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          2,
		"mode":           "managed",
		"module_address": "module.vpc",
		"name":           "public",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_subnet",
	},
	"module.vpc.aws_vpc.this[0]": {
		"address": "module.vpc.aws_vpc.this[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"assign_generated_ipv6_cidr_block": false,
				"cidr_block":                       "10.122.0.0/16",
				"enable_dns_hostnames":             true,
				"enable_dns_support":               true,
				"instance_tenancy":                 "default",
				"tags": {
					"Name": "education",
				},
			},
			"after_unknown": {
				"arn": true,
				"default_network_acl_id":         true,
				"default_route_table_id":         true,
				"default_security_group_id":      true,
				"dhcp_options_id":                true,
				"enable_classiclink":             true,
				"enable_classiclink_dns_support": true,
				"id": true,
				"ipv6_association_id": true,
				"ipv6_cidr_block":     true,
				"main_route_table_id": true,
				"owner_id":            true,
				"tags":                {},
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.vpc",
		"name":           "this",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_vpc",
	},
}

output_changes = {
	"rds_hostname": {
		"change": {
			"actions": [
				"create",
			],
			"after":         undefined,
			"after_unknown": true,
			"before":        "REDACTED_SENSITIVE",
		},
		"name": "rds_hostname",
	},
	"rds_port": {
		"change": {
			"actions": [
				"create",
			],
			"after":         undefined,
			"after_unknown": true,
			"before":        "REDACTED_SENSITIVE",
		},
		"name": "rds_port",
	},
	"rds_username": {
		"change": {
			"actions": [
				"create",
			],
			"after":         "REDACTED_SENSITIVE",
			"after_unknown": false,
			"before":        "REDACTED_SENSITIVE",
		},
		"name": "rds_username",
	},
}

raw = {
	"configuration": {
		"provider_config": {
			"aws": {
				"expressions": {
					"region": {
						"references": [
							"var.region",
						],
					},
				},
				"name":               "aws",
				"version_constraint": ">= 3.20.0",
			},
			"module.vpc:aws": {
				"module_address":     "module.vpc",
				"name":               "aws",
				"version_constraint": ">= 2.70.0",
			},
		},
		"root_module": {
			"module_calls": {
				"vpc": {
					"expressions": {
						"azs": {
							"references": [
								"data.aws_availability_zones.available.names",
								"data.aws_availability_zones.available",
							],
						},
						"cidr": {
							"constant_value": "10.122.0.0/16",
						},
						"enable_dns_hostnames": {
							"constant_value": true,
						},
						"enable_dns_support": {
							"constant_value": true,
						},
						"name": {
							"constant_value": "education",
						},
						"public_subnets": {
							"constant_value": [
								"10.122.4.0/24",
								"10.122.5.0/24",
								"10.122.6.0/24",
							],
						},
					},
					"module": {
						"outputs": {
							"azs": {
								"description": "A list of availability zones specified as argument to this module",
								"expression": {
									"references": [
										"var.azs",
									],
								},
							},
							"cgw_arns": {
								"description": "List of ARNs of Customer Gateway",
								"expression": {
									"references": [
										"aws_customer_gateway.this",
									],
								},
							},
							"cgw_ids": {
								"description": "List of IDs of Customer Gateway",
								"expression": {
									"references": [
										"aws_customer_gateway.this",
									],
								},
							},
							"database_internet_gateway_route_id": {
								"description": "ID of the database internet gateway route.",
								"expression": {
									"references": [
										"aws_route.database_internet_gateway",
									],
								},
							},
							"database_ipv6_egress_route_id": {
								"description": "ID of the database IPv6 egress route.",
								"expression": {
									"references": [
										"aws_route.database_ipv6_egress",
									],
								},
							},
							"database_nat_gateway_route_ids": {
								"description": "List of IDs of the database nat gateway route.",
								"expression": {
									"references": [
										"aws_route.database_nat_gateway",
									],
								},
							},
							"database_network_acl_arn": {
								"description": "ARN of the database network ACL",
								"expression": {
									"references": [
										"aws_network_acl.database",
									],
								},
							},
							"database_network_acl_id": {
								"description": "ID of the database network ACL",
								"expression": {
									"references": [
										"aws_network_acl.database",
									],
								},
							},
							"database_route_table_association_ids": {
								"description": "List of IDs of the database route table association",
								"expression": {
									"references": [
										"aws_route_table_association.database",
									],
								},
							},
							"database_route_table_ids": {
								"description": "List of IDs of database route tables",
								"expression": {
									"references": [
										"aws_route_table.database",
										"aws_route_table.database",
										"aws_route_table.private",
									],
								},
							},
							"database_subnet_arns": {
								"description": "List of ARNs of database subnets",
								"expression": {
									"references": [
										"aws_subnet.database",
									],
								},
							},
							"database_subnet_group": {
								"description": "ID of database subnet group",
								"expression": {
									"references": [
										"aws_db_subnet_group.database",
									],
								},
							},
							"database_subnet_group_name": {
								"description": "Name of database subnet group",
								"expression": {
									"references": [
										"aws_db_subnet_group.database",
									],
								},
							},
							"database_subnets": {
								"description": "List of IDs of database subnets",
								"expression": {
									"references": [
										"aws_subnet.database",
									],
								},
							},
							"database_subnets_cidr_blocks": {
								"description": "List of cidr_blocks of database subnets",
								"expression": {
									"references": [
										"aws_subnet.database",
									],
								},
							},
							"database_subnets_ipv6_cidr_blocks": {
								"description": "List of IPv6 cidr_blocks of database subnets in an IPv6 enabled VPC",
								"expression": {
									"references": [
										"aws_subnet.database",
									],
								},
							},
							"default_network_acl_id": {
								"description": "The ID of the default network ACL",
								"expression": {
									"references": [
										"aws_vpc.this",
									],
								},
							},
							"default_route_table_id": {
								"description": "The ID of the default route table",
								"expression": {
									"references": [
										"aws_vpc.this",
									],
								},
							},
							"default_security_group_id": {
								"description": "The ID of the security group created by default on VPC creation",
								"expression": {
									"references": [
										"aws_vpc.this",
									],
								},
							},
							"default_vpc_arn": {
								"description": "The ARN of the Default VPC",
								"expression": {
									"references": [
										"aws_default_vpc.this",
									],
								},
							},
							"default_vpc_cidr_block": {
								"description": "The CIDR block of the Default VPC",
								"expression": {
									"references": [
										"aws_default_vpc.this",
									],
								},
							},
							"default_vpc_default_network_acl_id": {
								"description": "The ID of the default network ACL of the Default VPC",
								"expression": {
									"references": [
										"aws_default_vpc.this",
									],
								},
							},
							"default_vpc_default_route_table_id": {
								"description": "The ID of the default route table of the Default VPC",
								"expression": {
									"references": [
										"aws_default_vpc.this",
									],
								},
							},
							"default_vpc_default_security_group_id": {
								"description": "The ID of the security group created by default on Default VPC creation",
								"expression": {
									"references": [
										"aws_default_vpc.this",
									],
								},
							},
							"default_vpc_enable_dns_hostnames": {
								"description": "Whether or not the Default VPC has DNS hostname support",
								"expression": {
									"references": [
										"aws_default_vpc.this",
									],
								},
							},
							"default_vpc_enable_dns_support": {
								"description": "Whether or not the Default VPC has DNS support",
								"expression": {
									"references": [
										"aws_default_vpc.this",
									],
								},
							},
							"default_vpc_id": {
								"description": "The ID of the Default VPC",
								"expression": {
									"references": [
										"aws_default_vpc.this",
									],
								},
							},
							"default_vpc_instance_tenancy": {
								"description": "Tenancy of instances spin up within Default VPC",
								"expression": {
									"references": [
										"aws_default_vpc.this",
									],
								},
							},
							"default_vpc_main_route_table_id": {
								"description": "The ID of the main route table associated with the Default VPC",
								"expression": {
									"references": [
										"aws_default_vpc.this",
									],
								},
							},
							"egress_only_internet_gateway_id": {
								"description": "The ID of the egress only Internet Gateway",
								"expression": {
									"references": [
										"aws_egress_only_internet_gateway.this",
									],
								},
							},
							"elasticache_network_acl_arn": {
								"description": "ARN of the elasticache network ACL",
								"expression": {
									"references": [
										"aws_network_acl.elasticache",
									],
								},
							},
							"elasticache_network_acl_id": {
								"description": "ID of the elasticache network ACL",
								"expression": {
									"references": [
										"aws_network_acl.elasticache",
									],
								},
							},
							"elasticache_route_table_association_ids": {
								"description": "List of IDs of the elasticache route table association",
								"expression": {
									"references": [
										"aws_route_table_association.elasticache",
									],
								},
							},
							"elasticache_route_table_ids": {
								"description": "List of IDs of elasticache route tables",
								"expression": {
									"references": [
										"aws_route_table.elasticache",
										"aws_route_table.elasticache",
										"aws_route_table.private",
									],
								},
							},
							"elasticache_subnet_arns": {
								"description": "List of ARNs of elasticache subnets",
								"expression": {
									"references": [
										"aws_subnet.elasticache",
									],
								},
							},
							"elasticache_subnet_group": {
								"description": "ID of elasticache subnet group",
								"expression": {
									"references": [
										"aws_elasticache_subnet_group.elasticache",
									],
								},
							},
							"elasticache_subnet_group_name": {
								"description": "Name of elasticache subnet group",
								"expression": {
									"references": [
										"aws_elasticache_subnet_group.elasticache",
									],
								},
							},
							"elasticache_subnets": {
								"description": "List of IDs of elasticache subnets",
								"expression": {
									"references": [
										"aws_subnet.elasticache",
									],
								},
							},
							"elasticache_subnets_cidr_blocks": {
								"description": "List of cidr_blocks of elasticache subnets",
								"expression": {
									"references": [
										"aws_subnet.elasticache",
									],
								},
							},
							"elasticache_subnets_ipv6_cidr_blocks": {
								"description": "List of IPv6 cidr_blocks of elasticache subnets in an IPv6 enabled VPC",
								"expression": {
									"references": [
										"aws_subnet.elasticache",
									],
								},
							},
							"igw_arn": {
								"description": "The ARN of the Internet Gateway",
								"expression": {
									"references": [
										"aws_internet_gateway.this",
									],
								},
							},
							"igw_id": {
								"description": "The ID of the Internet Gateway",
								"expression": {
									"references": [
										"aws_internet_gateway.this",
									],
								},
							},
							"intra_network_acl_arn": {
								"description": "ARN of the intra network ACL",
								"expression": {
									"references": [
										"aws_network_acl.intra",
									],
								},
							},
							"intra_network_acl_id": {
								"description": "ID of the intra network ACL",
								"expression": {
									"references": [
										"aws_network_acl.intra",
									],
								},
							},
							"intra_route_table_association_ids": {
								"description": "List of IDs of the intra route table association",
								"expression": {
									"references": [
										"aws_route_table_association.intra",
									],
								},
							},
							"intra_route_table_ids": {
								"description": "List of IDs of intra route tables",
								"expression": {
									"references": [
										"aws_route_table.intra",
									],
								},
							},
							"intra_subnet_arns": {
								"description": "List of ARNs of intra subnets",
								"expression": {
									"references": [
										"aws_subnet.intra",
									],
								},
							},
							"intra_subnets": {
								"description": "List of IDs of intra subnets",
								"expression": {
									"references": [
										"aws_subnet.intra",
									],
								},
							},
							"intra_subnets_cidr_blocks": {
								"description": "List of cidr_blocks of intra subnets",
								"expression": {
									"references": [
										"aws_subnet.intra",
									],
								},
							},
							"intra_subnets_ipv6_cidr_blocks": {
								"description": "List of IPv6 cidr_blocks of intra subnets in an IPv6 enabled VPC",
								"expression": {
									"references": [
										"aws_subnet.intra",
									],
								},
							},
							"name": {
								"description": "The name of the VPC specified as argument to this module",
								"expression": {
									"references": [
										"var.name",
									],
								},
							},
							"nat_ids": {
								"description": "List of allocation ID of Elastic IPs created for AWS NAT Gateway",
								"expression": {
									"references": [
										"aws_eip.nat",
									],
								},
							},
							"nat_public_ips": {
								"description": "List of public Elastic IPs created for AWS NAT Gateway",
								"expression": {
									"references": [
										"var.reuse_nat_ips",
										"var.external_nat_ips",
										"aws_eip.nat",
									],
								},
							},
							"natgw_ids": {
								"description": "List of NAT Gateway IDs",
								"expression": {
									"references": [
										"aws_nat_gateway.this",
									],
								},
							},
							"private_ipv6_egress_route_ids": {
								"description": "List of IDs of the ipv6 egress route.",
								"expression": {
									"references": [
										"aws_route.private_ipv6_egress",
									],
								},
							},
							"private_nat_gateway_route_ids": {
								"description": "List of IDs of the private nat gateway route.",
								"expression": {
									"references": [
										"aws_route.private_nat_gateway",
									],
								},
							},
							"private_network_acl_arn": {
								"description": "ARN of the private network ACL",
								"expression": {
									"references": [
										"aws_network_acl.private",
									],
								},
							},
							"private_network_acl_id": {
								"description": "ID of the private network ACL",
								"expression": {
									"references": [
										"aws_network_acl.private",
									],
								},
							},
							"private_route_table_association_ids": {
								"description": "List of IDs of the private route table association",
								"expression": {
									"references": [
										"aws_route_table_association.private",
									],
								},
							},
							"private_route_table_ids": {
								"description": "List of IDs of private route tables",
								"expression": {
									"references": [
										"aws_route_table.private",
									],
								},
							},
							"private_subnet_arns": {
								"description": "List of ARNs of private subnets",
								"expression": {
									"references": [
										"aws_subnet.private",
									],
								},
							},
							"private_subnets": {
								"description": "List of IDs of private subnets",
								"expression": {
									"references": [
										"aws_subnet.private",
									],
								},
							},
							"private_subnets_cidr_blocks": {
								"description": "List of cidr_blocks of private subnets",
								"expression": {
									"references": [
										"aws_subnet.private",
									],
								},
							},
							"private_subnets_ipv6_cidr_blocks": {
								"description": "List of IPv6 cidr_blocks of private subnets in an IPv6 enabled VPC",
								"expression": {
									"references": [
										"aws_subnet.private",
									],
								},
							},
							"public_internet_gateway_ipv6_route_id": {
								"description": "ID of the IPv6 internet gateway route.",
								"expression": {
									"references": [
										"aws_route.public_internet_gateway_ipv6",
									],
								},
							},
							"public_internet_gateway_route_id": {
								"description": "ID of the internet gateway route.",
								"expression": {
									"references": [
										"aws_route.public_internet_gateway",
									],
								},
							},
							"public_network_acl_arn": {
								"description": "ARN of the public network ACL",
								"expression": {
									"references": [
										"aws_network_acl.public",
									],
								},
							},
							"public_network_acl_id": {
								"description": "ID of the public network ACL",
								"expression": {
									"references": [
										"aws_network_acl.public",
									],
								},
							},
							"public_route_table_association_ids": {
								"description": "List of IDs of the public route table association",
								"expression": {
									"references": [
										"aws_route_table_association.public",
									],
								},
							},
							"public_route_table_ids": {
								"description": "List of IDs of public route tables",
								"expression": {
									"references": [
										"aws_route_table.public",
									],
								},
							},
							"public_subnet_arns": {
								"description": "List of ARNs of public subnets",
								"expression": {
									"references": [
										"aws_subnet.public",
									],
								},
							},
							"public_subnets": {
								"description": "List of IDs of public subnets",
								"expression": {
									"references": [
										"aws_subnet.public",
									],
								},
							},
							"public_subnets_cidr_blocks": {
								"description": "List of cidr_blocks of public subnets",
								"expression": {
									"references": [
										"aws_subnet.public",
									],
								},
							},
							"public_subnets_ipv6_cidr_blocks": {
								"description": "List of IPv6 cidr_blocks of public subnets in an IPv6 enabled VPC",
								"expression": {
									"references": [
										"aws_subnet.public",
									],
								},
							},
							"redshift_network_acl_arn": {
								"description": "ARN of the redshift network ACL",
								"expression": {
									"references": [
										"aws_network_acl.redshift",
									],
								},
							},
							"redshift_network_acl_id": {
								"description": "ID of the redshift network ACL",
								"expression": {
									"references": [
										"aws_network_acl.redshift",
									],
								},
							},
							"redshift_public_route_table_association_ids": {
								"description": "List of IDs of the public redshidt route table association",
								"expression": {
									"references": [
										"aws_route_table_association.redshift_public",
									],
								},
							},
							"redshift_route_table_association_ids": {
								"description": "List of IDs of the redshift route table association",
								"expression": {
									"references": [
										"aws_route_table_association.redshift",
									],
								},
							},
							"redshift_route_table_ids": {
								"description": "List of IDs of redshift route tables",
								"expression": {
									"references": [
										"aws_route_table.redshift",
										"aws_route_table.redshift",
										"aws_route_table.private",
									],
								},
							},
							"redshift_subnet_arns": {
								"description": "List of ARNs of redshift subnets",
								"expression": {
									"references": [
										"aws_subnet.redshift",
									],
								},
							},
							"redshift_subnet_group": {
								"description": "ID of redshift subnet group",
								"expression": {
									"references": [
										"aws_redshift_subnet_group.redshift",
									],
								},
							},
							"redshift_subnets": {
								"description": "List of IDs of redshift subnets",
								"expression": {
									"references": [
										"aws_subnet.redshift",
									],
								},
							},
							"redshift_subnets_cidr_blocks": {
								"description": "List of cidr_blocks of redshift subnets",
								"expression": {
									"references": [
										"aws_subnet.redshift",
									],
								},
							},
							"redshift_subnets_ipv6_cidr_blocks": {
								"description": "List of IPv6 cidr_blocks of redshift subnets in an IPv6 enabled VPC",
								"expression": {
									"references": [
										"aws_subnet.redshift",
									],
								},
							},
							"this_customer_gateway": {
								"description": "Map of Customer Gateway attributes",
								"expression": {
									"references": [
										"aws_customer_gateway.this",
									],
								},
							},
							"vgw_arn": {
								"description": "The ARN of the VPN Gateway",
								"expression": {
									"references": [
										"aws_vpn_gateway.this",
									],
								},
							},
							"vgw_id": {
								"description": "The ID of the VPN Gateway",
								"expression": {
									"references": [
										"aws_vpn_gateway.this",
										"aws_vpn_gateway_attachment.this",
									],
								},
							},
							"vpc_arn": {
								"description": "The ARN of the VPC",
								"expression": {
									"references": [
										"aws_vpc.this",
									],
								},
							},
							"vpc_cidr_block": {
								"description": "The CIDR block of the VPC",
								"expression": {
									"references": [
										"aws_vpc.this",
									],
								},
							},
							"vpc_enable_dns_hostnames": {
								"description": "Whether or not the VPC has DNS hostname support",
								"expression": {
									"references": [
										"aws_vpc.this",
									],
								},
							},
							"vpc_enable_dns_support": {
								"description": "Whether or not the VPC has DNS support",
								"expression": {
									"references": [
										"aws_vpc.this",
									],
								},
							},
							"vpc_endpoint_access_analyzer_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for Access Analyzer.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.access_analyzer",
									],
								},
							},
							"vpc_endpoint_access_analyzer_id": {
								"description": "The ID of VPC endpoint for Access Analyzer",
								"expression": {
									"references": [
										"aws_vpc_endpoint.access_analyzer",
									],
								},
							},
							"vpc_endpoint_access_analyzer_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for Access Analyzer.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.access_analyzer",
									],
								},
							},
							"vpc_endpoint_acm_pca_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for ACM PCA.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.acm_pca",
									],
								},
							},
							"vpc_endpoint_acm_pca_id": {
								"description": "The ID of VPC endpoint for ACM PCA",
								"expression": {
									"references": [
										"aws_vpc_endpoint.acm_pca",
									],
								},
							},
							"vpc_endpoint_acm_pca_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for ACM PCA.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.acm_pca",
									],
								},
							},
							"vpc_endpoint_apigw_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for APIGW.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.apigw",
									],
								},
							},
							"vpc_endpoint_apigw_id": {
								"description": "The ID of VPC endpoint for APIGW",
								"expression": {
									"references": [
										"aws_vpc_endpoint.apigw",
									],
								},
							},
							"vpc_endpoint_apigw_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for APIGW.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.apigw",
									],
								},
							},
							"vpc_endpoint_appmesh_envoy_management_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for AppMesh.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.appmesh_envoy_management",
									],
								},
							},
							"vpc_endpoint_appmesh_envoy_management_id": {
								"description": "The ID of VPC endpoint for AppMesh",
								"expression": {
									"references": [
										"aws_vpc_endpoint.appmesh_envoy_management",
									],
								},
							},
							"vpc_endpoint_appmesh_envoy_management_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for AppMesh.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.appmesh_envoy_management",
									],
								},
							},
							"vpc_endpoint_appstream_api_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for AppStream API.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.appstream_api",
									],
								},
							},
							"vpc_endpoint_appstream_api_id": {
								"description": "The ID of VPC endpoint for AppStream API",
								"expression": {
									"references": [
										"aws_vpc_endpoint.appstream_api",
									],
								},
							},
							"vpc_endpoint_appstream_api_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for AppStream API.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.appstream_api",
									],
								},
							},
							"vpc_endpoint_appstream_streaming_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for AppStream Streaming.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.appstream_streaming",
									],
								},
							},
							"vpc_endpoint_appstream_streaming_id": {
								"description": "The ID of VPC endpoint for AppStream Streaming",
								"expression": {
									"references": [
										"aws_vpc_endpoint.appstream_streaming",
									],
								},
							},
							"vpc_endpoint_appstream_streaming_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for AppStream Streaming.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.appstream_streaming",
									],
								},
							},
							"vpc_endpoint_athena_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for Athena.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.athena",
									],
								},
							},
							"vpc_endpoint_athena_id": {
								"description": "The ID of VPC endpoint for Athena",
								"expression": {
									"references": [
										"aws_vpc_endpoint.athena",
									],
								},
							},
							"vpc_endpoint_athena_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for Athena.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.athena",
									],
								},
							},
							"vpc_endpoint_auto_scaling_plans_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for Auto Scaling Plans.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.auto_scaling_plans",
									],
								},
							},
							"vpc_endpoint_auto_scaling_plans_id": {
								"description": "The ID of VPC endpoint for Auto Scaling Plans",
								"expression": {
									"references": [
										"aws_vpc_endpoint.auto_scaling_plans",
									],
								},
							},
							"vpc_endpoint_auto_scaling_plans_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for Auto Scaling Plans.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.auto_scaling_plans",
									],
								},
							},
							"vpc_endpoint_cloud_directory_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for Cloud Directory.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.cloud_directory",
									],
								},
							},
							"vpc_endpoint_cloud_directory_id": {
								"description": "The ID of VPC endpoint for Cloud Directory",
								"expression": {
									"references": [
										"aws_vpc_endpoint.cloud_directory",
									],
								},
							},
							"vpc_endpoint_cloud_directory_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for Cloud Directory.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.cloud_directory",
									],
								},
							},
							"vpc_endpoint_cloudformation_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for Cloudformation.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.cloudformation",
									],
								},
							},
							"vpc_endpoint_cloudformation_id": {
								"description": "The ID of VPC endpoint for Cloudformation",
								"expression": {
									"references": [
										"aws_vpc_endpoint.cloudformation",
									],
								},
							},
							"vpc_endpoint_cloudformation_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for Cloudformation.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.cloudformation",
									],
								},
							},
							"vpc_endpoint_cloudtrail_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for CloudTrail.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.cloudtrail",
									],
								},
							},
							"vpc_endpoint_cloudtrail_id": {
								"description": "The ID of VPC endpoint for CloudTrail",
								"expression": {
									"references": [
										"aws_vpc_endpoint.cloudtrail",
									],
								},
							},
							"vpc_endpoint_cloudtrail_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for CloudTrail.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.cloudtrail",
									],
								},
							},
							"vpc_endpoint_codeartifact_api_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for Codeartifact API.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.codeartifact_api",
									],
								},
							},
							"vpc_endpoint_codeartifact_api_id": {
								"description": "The ID of VPC endpoint for Codeartifact API",
								"expression": {
									"references": [
										"aws_vpc_endpoint.codeartifact_api",
									],
								},
							},
							"vpc_endpoint_codeartifact_api_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for Codeartifact API.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.codeartifact_api",
									],
								},
							},
							"vpc_endpoint_codeartifact_repositories_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for Codeartifact repositories.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.codeartifact_repositories",
									],
								},
							},
							"vpc_endpoint_codeartifact_repositories_id": {
								"description": "The ID of VPC endpoint for Codeartifact repositories",
								"expression": {
									"references": [
										"aws_vpc_endpoint.codeartifact_repositories",
									],
								},
							},
							"vpc_endpoint_codeartifact_repositories_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for Codeartifact repositories.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.codeartifact_repositories",
									],
								},
							},
							"vpc_endpoint_codebuild_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for codebuild.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.codebuild",
									],
								},
							},
							"vpc_endpoint_codebuild_id": {
								"description": "The ID of VPC endpoint for codebuild",
								"expression": {
									"references": [
										"aws_vpc_endpoint.codebuild",
									],
								},
							},
							"vpc_endpoint_codebuild_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for codebuild.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.codebuild",
									],
								},
							},
							"vpc_endpoint_codecommit_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for codecommit.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.codecommit",
									],
								},
							},
							"vpc_endpoint_codecommit_id": {
								"description": "The ID of VPC endpoint for codecommit",
								"expression": {
									"references": [
										"aws_vpc_endpoint.codecommit",
									],
								},
							},
							"vpc_endpoint_codecommit_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for codecommit.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.codecommit",
									],
								},
							},
							"vpc_endpoint_codepipeline_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for CodePipeline.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.codepipeline",
									],
								},
							},
							"vpc_endpoint_codepipeline_id": {
								"description": "The ID of VPC endpoint for CodePipeline",
								"expression": {
									"references": [
										"aws_vpc_endpoint.codepipeline",
									],
								},
							},
							"vpc_endpoint_codepipeline_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for CodePipeline.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.codepipeline",
									],
								},
							},
							"vpc_endpoint_config_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for config.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.config",
									],
								},
							},
							"vpc_endpoint_config_id": {
								"description": "The ID of VPC endpoint for config",
								"expression": {
									"references": [
										"aws_vpc_endpoint.config",
									],
								},
							},
							"vpc_endpoint_config_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for config.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.config",
									],
								},
							},
							"vpc_endpoint_datasync_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for DataSync.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.datasync",
									],
								},
							},
							"vpc_endpoint_datasync_id": {
								"description": "The ID of VPC endpoint for DataSync",
								"expression": {
									"references": [
										"aws_vpc_endpoint.datasync",
									],
								},
							},
							"vpc_endpoint_datasync_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for DataSync.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.datasync",
									],
								},
							},
							"vpc_endpoint_dms_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for DMS.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.sns",
									],
								},
							},
							"vpc_endpoint_dms_id": {
								"description": "The ID of VPC endpoint for DMS",
								"expression": {
									"references": [
										"aws_vpc_endpoint.sns",
									],
								},
							},
							"vpc_endpoint_dms_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for DMS.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.sns",
									],
								},
							},
							"vpc_endpoint_dynamodb_id": {
								"description": "The ID of VPC endpoint for DynamoDB",
								"expression": {
									"references": [
										"aws_vpc_endpoint.dynamodb",
									],
								},
							},
							"vpc_endpoint_dynamodb_pl_id": {
								"description": "The prefix list for the DynamoDB VPC endpoint.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.dynamodb",
									],
								},
							},
							"vpc_endpoint_ebs_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for EBS.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.ebs",
									],
								},
							},
							"vpc_endpoint_ebs_id": {
								"description": "The ID of VPC endpoint for EBS",
								"expression": {
									"references": [
										"aws_vpc_endpoint.ebs",
									],
								},
							},
							"vpc_endpoint_ebs_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for EBS.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.ebs",
									],
								},
							},
							"vpc_endpoint_ec2_autoscaling_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for EC2 Autoscaling.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.ec2_autoscaling",
									],
								},
							},
							"vpc_endpoint_ec2_autoscaling_id": {
								"description": "The ID of VPC endpoint for EC2 Autoscaling",
								"expression": {
									"references": [
										"aws_vpc_endpoint.ec2_autoscaling",
									],
								},
							},
							"vpc_endpoint_ec2_autoscaling_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for EC2 Autoscaling",
								"expression": {
									"references": [
										"aws_vpc_endpoint.ec2_autoscaling",
									],
								},
							},
							"vpc_endpoint_ec2_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for EC2.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.ec2",
									],
								},
							},
							"vpc_endpoint_ec2_id": {
								"description": "The ID of VPC endpoint for EC2",
								"expression": {
									"references": [
										"aws_vpc_endpoint.ec2",
									],
								},
							},
							"vpc_endpoint_ec2_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for EC2",
								"expression": {
									"references": [
										"aws_vpc_endpoint.ec2",
									],
								},
							},
							"vpc_endpoint_ec2messages_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for EC2MESSAGES.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.ec2messages",
									],
								},
							},
							"vpc_endpoint_ec2messages_id": {
								"description": "The ID of VPC endpoint for EC2MESSAGES",
								"expression": {
									"references": [
										"aws_vpc_endpoint.ec2messages",
									],
								},
							},
							"vpc_endpoint_ec2messages_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for EC2MESSAGES",
								"expression": {
									"references": [
										"aws_vpc_endpoint.ec2messages",
									],
								},
							},
							"vpc_endpoint_ecr_api_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for ECR API.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.ecr_api",
									],
								},
							},
							"vpc_endpoint_ecr_api_id": {
								"description": "The ID of VPC endpoint for ECR API",
								"expression": {
									"references": [
										"aws_vpc_endpoint.ecr_api",
									],
								},
							},
							"vpc_endpoint_ecr_api_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for ECR API.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.ecr_api",
									],
								},
							},
							"vpc_endpoint_ecr_dkr_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for ECR DKR.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.ecr_dkr",
									],
								},
							},
							"vpc_endpoint_ecr_dkr_id": {
								"description": "The ID of VPC endpoint for ECR DKR",
								"expression": {
									"references": [
										"aws_vpc_endpoint.ecr_dkr",
									],
								},
							},
							"vpc_endpoint_ecr_dkr_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for ECR DKR.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.ecr_dkr",
									],
								},
							},
							"vpc_endpoint_ecs_agent_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for ECS Agent.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.ecs_agent",
									],
								},
							},
							"vpc_endpoint_ecs_agent_id": {
								"description": "The ID of VPC endpoint for ECS Agent",
								"expression": {
									"references": [
										"aws_vpc_endpoint.ecs_agent",
									],
								},
							},
							"vpc_endpoint_ecs_agent_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for ECS Agent.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.ecs_agent",
									],
								},
							},
							"vpc_endpoint_ecs_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for ECS.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.ecs",
									],
								},
							},
							"vpc_endpoint_ecs_id": {
								"description": "The ID of VPC endpoint for ECS",
								"expression": {
									"references": [
										"aws_vpc_endpoint.ecs",
									],
								},
							},
							"vpc_endpoint_ecs_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for ECS.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.ecs",
									],
								},
							},
							"vpc_endpoint_ecs_telemetry_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for ECS Telemetry.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.ecs_telemetry",
									],
								},
							},
							"vpc_endpoint_ecs_telemetry_id": {
								"description": "The ID of VPC endpoint for ECS Telemetry",
								"expression": {
									"references": [
										"aws_vpc_endpoint.ecs_telemetry",
									],
								},
							},
							"vpc_endpoint_ecs_telemetry_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for ECS Telemetry.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.ecs_telemetry",
									],
								},
							},
							"vpc_endpoint_efs_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for EFS.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.efs",
									],
								},
							},
							"vpc_endpoint_efs_id": {
								"description": "The ID of VPC endpoint for EFS",
								"expression": {
									"references": [
										"aws_vpc_endpoint.efs",
									],
								},
							},
							"vpc_endpoint_efs_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for EFS.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.efs",
									],
								},
							},
							"vpc_endpoint_elastic_inference_runtime_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for Elastic Inference Runtime.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.elastic_inference_runtime",
									],
								},
							},
							"vpc_endpoint_elastic_inference_runtime_id": {
								"description": "The ID of VPC endpoint for Elastic Inference Runtime",
								"expression": {
									"references": [
										"aws_vpc_endpoint.elastic_inference_runtime",
									],
								},
							},
							"vpc_endpoint_elastic_inference_runtime_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for Elastic Inference Runtime.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.elastic_inference_runtime",
									],
								},
							},
							"vpc_endpoint_elasticbeanstalk_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for Elastic Beanstalk.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.elasticbeanstalk",
									],
								},
							},
							"vpc_endpoint_elasticbeanstalk_health_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for Elastic Beanstalk Health.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.elasticbeanstalk_health",
									],
								},
							},
							"vpc_endpoint_elasticbeanstalk_health_id": {
								"description": "The ID of VPC endpoint for Elastic Beanstalk Health",
								"expression": {
									"references": [
										"aws_vpc_endpoint.elasticbeanstalk_health",
									],
								},
							},
							"vpc_endpoint_elasticbeanstalk_health_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for Elastic Beanstalk Health.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.elasticbeanstalk_health",
									],
								},
							},
							"vpc_endpoint_elasticbeanstalk_id": {
								"description": "The ID of VPC endpoint for Elastic Beanstalk",
								"expression": {
									"references": [
										"aws_vpc_endpoint.elasticbeanstalk",
									],
								},
							},
							"vpc_endpoint_elasticbeanstalk_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for Elastic Beanstalk.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.elasticbeanstalk",
									],
								},
							},
							"vpc_endpoint_elasticloadbalancing_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for Elastic Load Balancing.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.elasticloadbalancing",
									],
								},
							},
							"vpc_endpoint_elasticloadbalancing_id": {
								"description": "The ID of VPC endpoint for Elastic Load Balancing",
								"expression": {
									"references": [
										"aws_vpc_endpoint.elasticloadbalancing",
									],
								},
							},
							"vpc_endpoint_elasticloadbalancing_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for Elastic Load Balancing.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.elasticloadbalancing",
									],
								},
							},
							"vpc_endpoint_elasticmapreduce_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for EMR.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.emr",
									],
								},
							},
							"vpc_endpoint_elasticmapreduce_id": {
								"description": "The ID of VPC endpoint for EMR",
								"expression": {
									"references": [
										"aws_vpc_endpoint.emr",
									],
								},
							},
							"vpc_endpoint_elasticmapreduce_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for EMR.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.emr",
									],
								},
							},
							"vpc_endpoint_events_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for CloudWatch Events.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.events",
									],
								},
							},
							"vpc_endpoint_events_id": {
								"description": "The ID of VPC endpoint for CloudWatch Events",
								"expression": {
									"references": [
										"aws_vpc_endpoint.events",
									],
								},
							},
							"vpc_endpoint_events_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for CloudWatch Events.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.events",
									],
								},
							},
							"vpc_endpoint_git_codecommit_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for git_codecommit.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.git_codecommit",
									],
								},
							},
							"vpc_endpoint_git_codecommit_id": {
								"description": "The ID of VPC endpoint for git_codecommit",
								"expression": {
									"references": [
										"aws_vpc_endpoint.git_codecommit",
									],
								},
							},
							"vpc_endpoint_git_codecommit_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for git_codecommit.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.git_codecommit",
									],
								},
							},
							"vpc_endpoint_glue_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for Glue.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.glue",
									],
								},
							},
							"vpc_endpoint_glue_id": {
								"description": "The ID of VPC endpoint for Glue",
								"expression": {
									"references": [
										"aws_vpc_endpoint.glue",
									],
								},
							},
							"vpc_endpoint_glue_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for Glue.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.glue",
									],
								},
							},
							"vpc_endpoint_kinesis_firehose_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for Kinesis Firehose.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.kinesis_firehose",
									],
								},
							},
							"vpc_endpoint_kinesis_firehose_id": {
								"description": "The ID of VPC endpoint for Kinesis Firehose",
								"expression": {
									"references": [
										"aws_vpc_endpoint.kinesis_firehose",
									],
								},
							},
							"vpc_endpoint_kinesis_firehose_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for Kinesis Firehose.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.kinesis_firehose",
									],
								},
							},
							"vpc_endpoint_kinesis_streams_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for Kinesis Streams.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.kinesis_streams",
									],
								},
							},
							"vpc_endpoint_kinesis_streams_id": {
								"description": "The ID of VPC endpoint for Kinesis Streams",
								"expression": {
									"references": [
										"aws_vpc_endpoint.kinesis_streams",
									],
								},
							},
							"vpc_endpoint_kinesis_streams_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for Kinesis Streams.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.kinesis_streams",
									],
								},
							},
							"vpc_endpoint_kms_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for KMS.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.kms",
									],
								},
							},
							"vpc_endpoint_kms_id": {
								"description": "The ID of VPC endpoint for KMS",
								"expression": {
									"references": [
										"aws_vpc_endpoint.kms",
									],
								},
							},
							"vpc_endpoint_kms_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for KMS.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.kms",
									],
								},
							},
							"vpc_endpoint_lambda_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for Lambda.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.lambda",
									],
								},
							},
							"vpc_endpoint_lambda_id": {
								"description": "The ID of VPC endpoint for Lambda",
								"expression": {
									"references": [
										"aws_vpc_endpoint.lambda",
									],
								},
							},
							"vpc_endpoint_lambda_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for Lambda.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.lambda",
									],
								},
							},
							"vpc_endpoint_logs_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for CloudWatch Logs.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.logs",
									],
								},
							},
							"vpc_endpoint_logs_id": {
								"description": "The ID of VPC endpoint for CloudWatch Logs",
								"expression": {
									"references": [
										"aws_vpc_endpoint.logs",
									],
								},
							},
							"vpc_endpoint_logs_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for CloudWatch Logs.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.logs",
									],
								},
							},
							"vpc_endpoint_monitoring_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for CloudWatch Monitoring.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.monitoring",
									],
								},
							},
							"vpc_endpoint_monitoring_id": {
								"description": "The ID of VPC endpoint for CloudWatch Monitoring",
								"expression": {
									"references": [
										"aws_vpc_endpoint.monitoring",
									],
								},
							},
							"vpc_endpoint_monitoring_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for CloudWatch Monitoring.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.monitoring",
									],
								},
							},
							"vpc_endpoint_qldb_session_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for QLDB Session.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.qldb_session",
									],
								},
							},
							"vpc_endpoint_qldb_session_id": {
								"description": "The ID of VPC endpoint for QLDB Session",
								"expression": {
									"references": [
										"aws_vpc_endpoint.qldb_session",
									],
								},
							},
							"vpc_endpoint_qldb_session_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for QLDB Session.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.qldb_session",
									],
								},
							},
							"vpc_endpoint_rds_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for RDS.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.rds",
									],
								},
							},
							"vpc_endpoint_rds_id": {
								"description": "The ID of VPC endpoint for RDS",
								"expression": {
									"references": [
										"aws_vpc_endpoint.rds",
									],
								},
							},
							"vpc_endpoint_rds_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for RDS.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.rds",
									],
								},
							},
							"vpc_endpoint_rekognition_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for Rekognition.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.rekognition",
									],
								},
							},
							"vpc_endpoint_rekognition_id": {
								"description": "The ID of VPC endpoint for Rekognition",
								"expression": {
									"references": [
										"aws_vpc_endpoint.rekognition",
									],
								},
							},
							"vpc_endpoint_rekognition_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for Rekognition.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.rekognition",
									],
								},
							},
							"vpc_endpoint_s3_id": {
								"description": "The ID of VPC endpoint for S3",
								"expression": {
									"references": [
										"aws_vpc_endpoint.s3",
									],
								},
							},
							"vpc_endpoint_s3_pl_id": {
								"description": "The prefix list for the S3 VPC endpoint.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.s3",
									],
								},
							},
							"vpc_endpoint_sagemaker_api_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for SageMaker API.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.sagemaker_api",
									],
								},
							},
							"vpc_endpoint_sagemaker_api_id": {
								"description": "The ID of VPC endpoint for SageMaker API",
								"expression": {
									"references": [
										"aws_vpc_endpoint.sagemaker_api",
									],
								},
							},
							"vpc_endpoint_sagemaker_api_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for SageMaker API.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.sagemaker_api",
									],
								},
							},
							"vpc_endpoint_sagemaker_runtime_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for SageMaker Runtime.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.sagemaker_runtime",
									],
								},
							},
							"vpc_endpoint_sagemaker_runtime_id": {
								"description": "The ID of VPC endpoint for SageMaker Runtime",
								"expression": {
									"references": [
										"aws_vpc_endpoint.sagemaker_runtime",
									],
								},
							},
							"vpc_endpoint_sagemaker_runtime_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for SageMaker Runtime.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.sagemaker_runtime",
									],
								},
							},
							"vpc_endpoint_secretsmanager_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for secretsmanager.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.secretsmanager",
									],
								},
							},
							"vpc_endpoint_secretsmanager_id": {
								"description": "The ID of VPC endpoint for secretsmanager",
								"expression": {
									"references": [
										"aws_vpc_endpoint.secretsmanager",
									],
								},
							},
							"vpc_endpoint_secretsmanager_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for secretsmanager.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.secretsmanager",
									],
								},
							},
							"vpc_endpoint_servicecatalog_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for Service Catalog.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.servicecatalog",
									],
								},
							},
							"vpc_endpoint_servicecatalog_id": {
								"description": "The ID of VPC endpoint for Service Catalog",
								"expression": {
									"references": [
										"aws_vpc_endpoint.servicecatalog",
									],
								},
							},
							"vpc_endpoint_servicecatalog_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for Service Catalog.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.servicecatalog",
									],
								},
							},
							"vpc_endpoint_ses_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for SES.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.ses",
									],
								},
							},
							"vpc_endpoint_ses_id": {
								"description": "The ID of VPC endpoint for SES",
								"expression": {
									"references": [
										"aws_vpc_endpoint.ses",
									],
								},
							},
							"vpc_endpoint_ses_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for SES.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.ses",
									],
								},
							},
							"vpc_endpoint_sms_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for SMS.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.sms",
									],
								},
							},
							"vpc_endpoint_sms_id": {
								"description": "The ID of VPC endpoint for SMS",
								"expression": {
									"references": [
										"aws_vpc_endpoint.sms",
									],
								},
							},
							"vpc_endpoint_sms_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for SMS.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.sms",
									],
								},
							},
							"vpc_endpoint_sns_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for SNS.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.sns",
									],
								},
							},
							"vpc_endpoint_sns_id": {
								"description": "The ID of VPC endpoint for SNS",
								"expression": {
									"references": [
										"aws_vpc_endpoint.sns",
									],
								},
							},
							"vpc_endpoint_sns_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for SNS.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.sns",
									],
								},
							},
							"vpc_endpoint_sqs_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for SQS.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.sqs",
									],
								},
							},
							"vpc_endpoint_sqs_id": {
								"description": "The ID of VPC endpoint for SQS",
								"expression": {
									"references": [
										"aws_vpc_endpoint.sqs",
									],
								},
							},
							"vpc_endpoint_sqs_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for SQS.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.sqs",
									],
								},
							},
							"vpc_endpoint_ssm_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for SSM.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.ssm",
									],
								},
							},
							"vpc_endpoint_ssm_id": {
								"description": "The ID of VPC endpoint for SSM",
								"expression": {
									"references": [
										"aws_vpc_endpoint.ssm",
									],
								},
							},
							"vpc_endpoint_ssm_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for SSM.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.ssm",
									],
								},
							},
							"vpc_endpoint_ssmmessages_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for SSMMESSAGES.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.ssmmessages",
									],
								},
							},
							"vpc_endpoint_ssmmessages_id": {
								"description": "The ID of VPC endpoint for SSMMESSAGES",
								"expression": {
									"references": [
										"aws_vpc_endpoint.ssmmessages",
									],
								},
							},
							"vpc_endpoint_ssmmessages_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for SSMMESSAGES.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.ssmmessages",
									],
								},
							},
							"vpc_endpoint_states_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for Step Function.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.states",
									],
								},
							},
							"vpc_endpoint_states_id": {
								"description": "The ID of VPC endpoint for Step Function",
								"expression": {
									"references": [
										"aws_vpc_endpoint.states",
									],
								},
							},
							"vpc_endpoint_states_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for Step Function.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.states",
									],
								},
							},
							"vpc_endpoint_storagegateway_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for Storage Gateway.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.storagegateway",
									],
								},
							},
							"vpc_endpoint_storagegateway_id": {
								"description": "The ID of VPC endpoint for Storage Gateway",
								"expression": {
									"references": [
										"aws_vpc_endpoint.storagegateway",
									],
								},
							},
							"vpc_endpoint_storagegateway_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for Storage Gateway.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.storagegateway",
									],
								},
							},
							"vpc_endpoint_sts_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for STS.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.sts",
									],
								},
							},
							"vpc_endpoint_sts_id": {
								"description": "The ID of VPC endpoint for STS",
								"expression": {
									"references": [
										"aws_vpc_endpoint.sts",
									],
								},
							},
							"vpc_endpoint_sts_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for STS.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.sts",
									],
								},
							},
							"vpc_endpoint_textract_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for Textract.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.textract",
									],
								},
							},
							"vpc_endpoint_textract_id": {
								"description": "The ID of VPC endpoint for Textract",
								"expression": {
									"references": [
										"aws_vpc_endpoint.textract",
									],
								},
							},
							"vpc_endpoint_textract_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for Textract.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.textract",
									],
								},
							},
							"vpc_endpoint_transfer_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for Transfer.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.transfer",
									],
								},
							},
							"vpc_endpoint_transfer_id": {
								"description": "The ID of VPC endpoint for Transfer",
								"expression": {
									"references": [
										"aws_vpc_endpoint.transfer",
									],
								},
							},
							"vpc_endpoint_transfer_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for Transfer.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.transfer",
									],
								},
							},
							"vpc_endpoint_transferserver_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for transferserver.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.transferserver",
									],
								},
							},
							"vpc_endpoint_transferserver_id": {
								"description": "The ID of VPC endpoint for transferserver",
								"expression": {
									"references": [
										"aws_vpc_endpoint.transferserver",
									],
								},
							},
							"vpc_endpoint_transferserver_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for transferserver",
								"expression": {
									"references": [
										"aws_vpc_endpoint.transferserver",
									],
								},
							},
							"vpc_endpoint_workspaces_dns_entry": {
								"description": "The DNS entries for the VPC Endpoint for Workspaces.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.workspaces",
									],
								},
							},
							"vpc_endpoint_workspaces_id": {
								"description": "The ID of VPC endpoint for Workspaces",
								"expression": {
									"references": [
										"aws_vpc_endpoint.workspaces",
									],
								},
							},
							"vpc_endpoint_workspaces_network_interface_ids": {
								"description": "One or more network interfaces for the VPC Endpoint for Workspaces.",
								"expression": {
									"references": [
										"aws_vpc_endpoint.workspaces",
									],
								},
							},
							"vpc_flow_log_cloudwatch_iam_role_arn": {
								"description": "The ARN of the IAM role used when pushing logs to Cloudwatch log group",
								"expression": {
									"references": [
										"local.flow_log_iam_role_arn",
									],
								},
							},
							"vpc_flow_log_destination_arn": {
								"description": "The ARN of the destination for VPC Flow Logs",
								"expression": {
									"references": [
										"local.flow_log_destination_arn",
									],
								},
							},
							"vpc_flow_log_destination_type": {
								"description": "The type of the destination for VPC Flow Logs",
								"expression": {
									"references": [
										"var.flow_log_destination_type",
									],
								},
							},
							"vpc_flow_log_id": {
								"description": "The ID of the Flow Log resource",
								"expression": {
									"references": [
										"aws_flow_log.this",
									],
								},
							},
							"vpc_id": {
								"description": "The ID of the VPC",
								"expression": {
									"references": [
										"aws_vpc.this",
									],
								},
							},
							"vpc_instance_tenancy": {
								"description": "Tenancy of instances spin up within VPC",
								"expression": {
									"references": [
										"aws_vpc.this",
									],
								},
							},
							"vpc_ipv6_association_id": {
								"description": "The association ID for the IPv6 CIDR block",
								"expression": {
									"references": [
										"aws_vpc.this",
									],
								},
							},
							"vpc_ipv6_cidr_block": {
								"description": "The IPv6 CIDR block",
								"expression": {
									"references": [
										"aws_vpc.this",
									],
								},
							},
							"vpc_main_route_table_id": {
								"description": "The ID of the main route table associated with this VPC",
								"expression": {
									"references": [
										"aws_vpc.this",
									],
								},
							},
							"vpc_owner_id": {
								"description": "The ID of the AWS account that owns the VPC",
								"expression": {
									"references": [
										"aws_vpc.this",
									],
								},
							},
							"vpc_secondary_cidr_blocks": {
								"description": "List of secondary CIDR blocks of the VPC",
								"expression": {
									"references": [
										"aws_vpc_ipv4_cidr_block_association.this",
									],
								},
							},
						},
						"resources": [
							{
								"address": "aws_cloudwatch_log_group.flow_log",
								"count_expression": {
									"references": [
										"local.create_flow_log_cloudwatch_log_group",
									],
								},
								"expressions": {
									"kms_key_id": {
										"references": [
											"var.flow_log_cloudwatch_log_group_kms_key_id",
										],
									},
									"name": {
										"references": [
											"var.flow_log_cloudwatch_log_group_name_prefix",
											"local.vpc_id",
										],
									},
									"retention_in_days": {
										"references": [
											"var.flow_log_cloudwatch_log_group_retention_in_days",
										],
									},
									"tags": {
										"references": [
											"var.tags",
											"var.vpc_flow_log_tags",
										],
									},
								},
								"mode":                "managed",
								"name":                "flow_log",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_cloudwatch_log_group",
							},
							{
								"address": "aws_customer_gateway.this",
								"expressions": {
									"bgp_asn": {
										"references": [
											"each.value[\"bgp_asn\"]",
											"each.value",
										],
									},
									"ip_address": {
										"references": [
											"each.value[\"ip_address\"]",
											"each.value",
										],
									},
									"tags": {
										"references": [
											"var.name",
											"each.key",
											"var.tags",
											"var.customer_gateway_tags",
										],
									},
									"type": {
										"constant_value": "ipsec.1",
									},
								},
								"for_each_expression": {
									"references": [
										"var.customer_gateways",
									],
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_customer_gateway",
							},
							{
								"address": "aws_db_subnet_group.database",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.database_subnets",
										"var.create_database_subnet_group",
									],
								},
								"expressions": {
									"description": {
										"references": [
											"var.name",
										],
									},
									"name": {
										"references": [
											"var.name",
										],
									},
									"subnet_ids": {
										"references": [
											"aws_subnet.database",
										],
									},
									"tags": {
										"references": [
											"var.name",
											"var.tags",
											"var.database_subnet_group_tags",
										],
									},
								},
								"mode":                "managed",
								"name":                "database",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_db_subnet_group",
							},
							{
								"address": "aws_default_network_acl.this",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.manage_default_network_acl",
									],
								},
								"expressions": {
									"default_network_acl_id": {
										"references": [
											"aws_vpc.this",
										],
									},
									"subnet_ids": {
										"references": [
											"aws_subnet.public",
											"aws_subnet.private",
											"aws_subnet.intra",
											"aws_subnet.database",
											"aws_subnet.redshift",
											"aws_subnet.elasticache",
											"aws_network_acl.public",
											"aws_network_acl.private",
											"aws_network_acl.intra",
											"aws_network_acl.database",
											"aws_network_acl.redshift",
											"aws_network_acl.elasticache",
										],
									},
									"tags": {
										"references": [
											"var.default_network_acl_name",
											"var.tags",
											"var.default_network_acl_tags",
										],
									},
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_default_network_acl",
							},
							{
								"address": "aws_default_route_table.default",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.manage_default_route_table",
									],
								},
								"expressions": {
									"default_route_table_id": {
										"references": [
											"aws_vpc.this[0].default_route_table_id",
											"aws_vpc.this[0]",
											"aws_vpc.this",
										],
									},
									"propagating_vgws": {
										"references": [
											"var.default_route_table_propagating_vgws",
										],
									},
									"tags": {
										"references": [
											"var.name",
											"var.tags",
											"var.default_route_table_tags",
										],
									},
								},
								"mode":                "managed",
								"name":                "default",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_default_route_table",
							},
							{
								"address": "aws_default_security_group.this",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.manage_default_security_group",
									],
								},
								"expressions": {
									"tags": {
										"references": [
											"var.default_security_group_name",
											"var.tags",
											"var.default_security_group_tags",
										],
									},
									"vpc_id": {
										"references": [
											"aws_vpc.this[0].id",
											"aws_vpc.this[0]",
											"aws_vpc.this",
										],
									},
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "vpc:aws",
								"schema_version":      1,
								"type":                "aws_default_security_group",
							},
							{
								"address": "aws_default_vpc.this",
								"count_expression": {
									"references": [
										"var.manage_default_vpc",
									],
								},
								"expressions": {
									"enable_classiclink": {
										"references": [
											"var.default_vpc_enable_classiclink",
										],
									},
									"enable_dns_hostnames": {
										"references": [
											"var.default_vpc_enable_dns_hostnames",
										],
									},
									"enable_dns_support": {
										"references": [
											"var.default_vpc_enable_dns_support",
										],
									},
									"tags": {
										"references": [
											"var.default_vpc_name",
											"var.tags",
											"var.default_vpc_tags",
										],
									},
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "vpc:aws",
								"schema_version":      1,
								"type":                "aws_default_vpc",
							},
							{
								"address": "aws_egress_only_internet_gateway.this",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.create_egress_only_igw",
										"var.enable_ipv6",
										"local.max_subnet_length",
									],
								},
								"expressions": {
									"tags": {
										"references": [
											"var.name",
											"var.tags",
											"var.igw_tags",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_egress_only_internet_gateway",
							},
							{
								"address": "aws_eip.nat",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_nat_gateway",
										"var.reuse_nat_ips",
										"local.nat_gateway_count",
									],
								},
								"expressions": {
									"tags": {
										"references": [
											"var.name",
											"var.azs",
											"var.single_nat_gateway",
											"count.index",
											"var.tags",
											"var.nat_eip_tags",
										],
									},
									"vpc": {
										"constant_value": true,
									},
								},
								"mode":                "managed",
								"name":                "nat",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_eip",
							},
							{
								"address": "aws_elasticache_subnet_group.elasticache",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.elasticache_subnets",
										"var.create_elasticache_subnet_group",
									],
								},
								"expressions": {
									"description": {
										"references": [
											"var.name",
										],
									},
									"name": {
										"references": [
											"var.name",
										],
									},
									"subnet_ids": {
										"references": [
											"aws_subnet.elasticache",
										],
									},
								},
								"mode":                "managed",
								"name":                "elasticache",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_elasticache_subnet_group",
							},
							{
								"address": "aws_flow_log.this",
								"count_expression": {
									"references": [
										"local.enable_flow_log",
									],
								},
								"expressions": {
									"iam_role_arn": {
										"references": [
											"local.flow_log_iam_role_arn",
										],
									},
									"log_destination": {
										"references": [
											"local.flow_log_destination_arn",
										],
									},
									"log_destination_type": {
										"references": [
											"var.flow_log_destination_type",
										],
									},
									"log_format": {
										"references": [
											"var.flow_log_log_format",
										],
									},
									"max_aggregation_interval": {
										"references": [
											"var.flow_log_max_aggregation_interval",
										],
									},
									"tags": {
										"references": [
											"var.tags",
											"var.vpc_flow_log_tags",
										],
									},
									"traffic_type": {
										"references": [
											"var.flow_log_traffic_type",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_flow_log",
							},
							{
								"address": "aws_iam_policy.vpc_flow_log_cloudwatch",
								"count_expression": {
									"references": [
										"local.create_flow_log_cloudwatch_iam_role",
									],
								},
								"expressions": {
									"name_prefix": {
										"constant_value": "vpc-flow-log-to-cloudwatch-",
									},
									"policy": {
										"references": [
											"data.aws_iam_policy_document.vpc_flow_log_cloudwatch[0].json",
											"data.aws_iam_policy_document.vpc_flow_log_cloudwatch[0]",
											"data.aws_iam_policy_document.vpc_flow_log_cloudwatch",
										],
									},
								},
								"mode":                "managed",
								"name":                "vpc_flow_log_cloudwatch",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_iam_policy",
							},
							{
								"address": "aws_iam_role.vpc_flow_log_cloudwatch",
								"count_expression": {
									"references": [
										"local.create_flow_log_cloudwatch_iam_role",
									],
								},
								"expressions": {
									"assume_role_policy": {
										"references": [
											"data.aws_iam_policy_document.flow_log_cloudwatch_assume_role[0].json",
											"data.aws_iam_policy_document.flow_log_cloudwatch_assume_role[0]",
											"data.aws_iam_policy_document.flow_log_cloudwatch_assume_role",
										],
									},
									"name_prefix": {
										"constant_value": "vpc-flow-log-role-",
									},
									"permissions_boundary": {
										"references": [
											"var.vpc_flow_log_permissions_boundary",
										],
									},
									"tags": {
										"references": [
											"var.tags",
											"var.vpc_flow_log_tags",
										],
									},
								},
								"mode":                "managed",
								"name":                "vpc_flow_log_cloudwatch",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_iam_role",
							},
							{
								"address": "aws_iam_role_policy_attachment.vpc_flow_log_cloudwatch",
								"count_expression": {
									"references": [
										"local.create_flow_log_cloudwatch_iam_role",
									],
								},
								"expressions": {
									"policy_arn": {
										"references": [
											"aws_iam_policy.vpc_flow_log_cloudwatch[0].arn",
											"aws_iam_policy.vpc_flow_log_cloudwatch[0]",
											"aws_iam_policy.vpc_flow_log_cloudwatch",
										],
									},
									"role": {
										"references": [
											"aws_iam_role.vpc_flow_log_cloudwatch[0].name",
											"aws_iam_role.vpc_flow_log_cloudwatch[0]",
											"aws_iam_role.vpc_flow_log_cloudwatch",
										],
									},
								},
								"mode":                "managed",
								"name":                "vpc_flow_log_cloudwatch",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_iam_role_policy_attachment",
							},
							{
								"address": "aws_internet_gateway.this",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.create_igw",
										"var.public_subnets",
									],
								},
								"expressions": {
									"tags": {
										"references": [
											"var.name",
											"var.tags",
											"var.igw_tags",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_internet_gateway",
							},
							{
								"address": "aws_nat_gateway.this",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_nat_gateway",
										"local.nat_gateway_count",
									],
								},
								"depends_on": [
									"aws_internet_gateway.this",
								],
								"expressions": {
									"allocation_id": {
										"references": [
											"local.nat_gateway_ips",
											"var.single_nat_gateway",
											"count.index",
										],
									},
									"subnet_id": {
										"references": [
											"aws_subnet.public",
											"var.single_nat_gateway",
											"count.index",
										],
									},
									"tags": {
										"references": [
											"var.name",
											"var.azs",
											"var.single_nat_gateway",
											"count.index",
											"var.tags",
											"var.nat_gateway_tags",
										],
									},
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_nat_gateway",
							},
							{
								"address": "aws_network_acl.database",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.database_dedicated_network_acl",
										"var.database_subnets",
									],
								},
								"expressions": {
									"subnet_ids": {
										"references": [
											"aws_subnet.database",
										],
									},
									"tags": {
										"references": [
											"var.database_subnet_suffix",
											"var.name",
											"var.tags",
											"var.database_acl_tags",
										],
									},
									"vpc_id": {
										"references": [
											"aws_vpc.this",
										],
									},
								},
								"mode":                "managed",
								"name":                "database",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_network_acl",
							},
							{
								"address": "aws_network_acl.elasticache",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.elasticache_dedicated_network_acl",
										"var.elasticache_subnets",
									],
								},
								"expressions": {
									"subnet_ids": {
										"references": [
											"aws_subnet.elasticache",
										],
									},
									"tags": {
										"references": [
											"var.elasticache_subnet_suffix",
											"var.name",
											"var.tags",
											"var.elasticache_acl_tags",
										],
									},
									"vpc_id": {
										"references": [
											"aws_vpc.this",
										],
									},
								},
								"mode":                "managed",
								"name":                "elasticache",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_network_acl",
							},
							{
								"address": "aws_network_acl.intra",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.intra_dedicated_network_acl",
										"var.intra_subnets",
									],
								},
								"expressions": {
									"subnet_ids": {
										"references": [
											"aws_subnet.intra",
										],
									},
									"tags": {
										"references": [
											"var.intra_subnet_suffix",
											"var.name",
											"var.tags",
											"var.intra_acl_tags",
										],
									},
									"vpc_id": {
										"references": [
											"aws_vpc.this",
										],
									},
								},
								"mode":                "managed",
								"name":                "intra",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_network_acl",
							},
							{
								"address": "aws_network_acl.private",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.private_dedicated_network_acl",
										"var.private_subnets",
									],
								},
								"expressions": {
									"subnet_ids": {
										"references": [
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"var.private_subnet_suffix",
											"var.name",
											"var.tags",
											"var.private_acl_tags",
										],
									},
									"vpc_id": {
										"references": [
											"aws_vpc.this",
										],
									},
								},
								"mode":                "managed",
								"name":                "private",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_network_acl",
							},
							{
								"address": "aws_network_acl.public",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.public_dedicated_network_acl",
										"var.public_subnets",
									],
								},
								"expressions": {
									"subnet_ids": {
										"references": [
											"aws_subnet.public",
										],
									},
									"tags": {
										"references": [
											"var.public_subnet_suffix",
											"var.name",
											"var.tags",
											"var.public_acl_tags",
										],
									},
									"vpc_id": {
										"references": [
											"aws_vpc.this",
										],
									},
								},
								"mode":                "managed",
								"name":                "public",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_network_acl",
							},
							{
								"address": "aws_network_acl.redshift",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.redshift_dedicated_network_acl",
										"var.redshift_subnets",
									],
								},
								"expressions": {
									"subnet_ids": {
										"references": [
											"aws_subnet.redshift",
										],
									},
									"tags": {
										"references": [
											"var.redshift_subnet_suffix",
											"var.name",
											"var.tags",
											"var.redshift_acl_tags",
										],
									},
									"vpc_id": {
										"references": [
											"aws_vpc.this",
										],
									},
								},
								"mode":                "managed",
								"name":                "redshift",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_network_acl",
							},
							{
								"address": "aws_network_acl_rule.database_inbound",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.database_dedicated_network_acl",
										"var.database_subnets",
										"var.database_inbound_acl_rules",
									],
								},
								"expressions": {
									"cidr_block": {
										"references": [
											"var.database_inbound_acl_rules",
											"count.index",
										],
									},
									"egress": {
										"constant_value": false,
									},
									"from_port": {
										"references": [
											"var.database_inbound_acl_rules",
											"count.index",
										],
									},
									"icmp_code": {
										"references": [
											"var.database_inbound_acl_rules",
											"count.index",
										],
									},
									"icmp_type": {
										"references": [
											"var.database_inbound_acl_rules",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.database_inbound_acl_rules",
											"count.index",
										],
									},
									"network_acl_id": {
										"references": [
											"aws_network_acl.database[0].id",
											"aws_network_acl.database[0]",
											"aws_network_acl.database",
										],
									},
									"protocol": {
										"references": [
											"var.database_inbound_acl_rules",
											"count.index",
										],
									},
									"rule_action": {
										"references": [
											"var.database_inbound_acl_rules",
											"count.index",
										],
									},
									"rule_number": {
										"references": [
											"var.database_inbound_acl_rules",
											"count.index",
										],
									},
									"to_port": {
										"references": [
											"var.database_inbound_acl_rules",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "database_inbound",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_network_acl_rule",
							},
							{
								"address": "aws_network_acl_rule.database_outbound",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.database_dedicated_network_acl",
										"var.database_subnets",
										"var.database_outbound_acl_rules",
									],
								},
								"expressions": {
									"cidr_block": {
										"references": [
											"var.database_outbound_acl_rules",
											"count.index",
										],
									},
									"egress": {
										"constant_value": true,
									},
									"from_port": {
										"references": [
											"var.database_outbound_acl_rules",
											"count.index",
										],
									},
									"icmp_code": {
										"references": [
											"var.database_outbound_acl_rules",
											"count.index",
										],
									},
									"icmp_type": {
										"references": [
											"var.database_outbound_acl_rules",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.database_outbound_acl_rules",
											"count.index",
										],
									},
									"network_acl_id": {
										"references": [
											"aws_network_acl.database[0].id",
											"aws_network_acl.database[0]",
											"aws_network_acl.database",
										],
									},
									"protocol": {
										"references": [
											"var.database_outbound_acl_rules",
											"count.index",
										],
									},
									"rule_action": {
										"references": [
											"var.database_outbound_acl_rules",
											"count.index",
										],
									},
									"rule_number": {
										"references": [
											"var.database_outbound_acl_rules",
											"count.index",
										],
									},
									"to_port": {
										"references": [
											"var.database_outbound_acl_rules",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "database_outbound",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_network_acl_rule",
							},
							{
								"address": "aws_network_acl_rule.elasticache_inbound",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.elasticache_dedicated_network_acl",
										"var.elasticache_subnets",
										"var.elasticache_inbound_acl_rules",
									],
								},
								"expressions": {
									"cidr_block": {
										"references": [
											"var.elasticache_inbound_acl_rules",
											"count.index",
										],
									},
									"egress": {
										"constant_value": false,
									},
									"from_port": {
										"references": [
											"var.elasticache_inbound_acl_rules",
											"count.index",
										],
									},
									"icmp_code": {
										"references": [
											"var.elasticache_inbound_acl_rules",
											"count.index",
										],
									},
									"icmp_type": {
										"references": [
											"var.elasticache_inbound_acl_rules",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.elasticache_inbound_acl_rules",
											"count.index",
										],
									},
									"network_acl_id": {
										"references": [
											"aws_network_acl.elasticache[0].id",
											"aws_network_acl.elasticache[0]",
											"aws_network_acl.elasticache",
										],
									},
									"protocol": {
										"references": [
											"var.elasticache_inbound_acl_rules",
											"count.index",
										],
									},
									"rule_action": {
										"references": [
											"var.elasticache_inbound_acl_rules",
											"count.index",
										],
									},
									"rule_number": {
										"references": [
											"var.elasticache_inbound_acl_rules",
											"count.index",
										],
									},
									"to_port": {
										"references": [
											"var.elasticache_inbound_acl_rules",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "elasticache_inbound",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_network_acl_rule",
							},
							{
								"address": "aws_network_acl_rule.elasticache_outbound",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.elasticache_dedicated_network_acl",
										"var.elasticache_subnets",
										"var.elasticache_outbound_acl_rules",
									],
								},
								"expressions": {
									"cidr_block": {
										"references": [
											"var.elasticache_outbound_acl_rules",
											"count.index",
										],
									},
									"egress": {
										"constant_value": true,
									},
									"from_port": {
										"references": [
											"var.elasticache_outbound_acl_rules",
											"count.index",
										],
									},
									"icmp_code": {
										"references": [
											"var.elasticache_outbound_acl_rules",
											"count.index",
										],
									},
									"icmp_type": {
										"references": [
											"var.elasticache_outbound_acl_rules",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.elasticache_outbound_acl_rules",
											"count.index",
										],
									},
									"network_acl_id": {
										"references": [
											"aws_network_acl.elasticache[0].id",
											"aws_network_acl.elasticache[0]",
											"aws_network_acl.elasticache",
										],
									},
									"protocol": {
										"references": [
											"var.elasticache_outbound_acl_rules",
											"count.index",
										],
									},
									"rule_action": {
										"references": [
											"var.elasticache_outbound_acl_rules",
											"count.index",
										],
									},
									"rule_number": {
										"references": [
											"var.elasticache_outbound_acl_rules",
											"count.index",
										],
									},
									"to_port": {
										"references": [
											"var.elasticache_outbound_acl_rules",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "elasticache_outbound",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_network_acl_rule",
							},
							{
								"address": "aws_network_acl_rule.intra_inbound",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.intra_dedicated_network_acl",
										"var.intra_subnets",
										"var.intra_inbound_acl_rules",
									],
								},
								"expressions": {
									"cidr_block": {
										"references": [
											"var.intra_inbound_acl_rules",
											"count.index",
										],
									},
									"egress": {
										"constant_value": false,
									},
									"from_port": {
										"references": [
											"var.intra_inbound_acl_rules",
											"count.index",
										],
									},
									"icmp_code": {
										"references": [
											"var.intra_inbound_acl_rules",
											"count.index",
										],
									},
									"icmp_type": {
										"references": [
											"var.intra_inbound_acl_rules",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.intra_inbound_acl_rules",
											"count.index",
										],
									},
									"network_acl_id": {
										"references": [
											"aws_network_acl.intra[0].id",
											"aws_network_acl.intra[0]",
											"aws_network_acl.intra",
										],
									},
									"protocol": {
										"references": [
											"var.intra_inbound_acl_rules",
											"count.index",
										],
									},
									"rule_action": {
										"references": [
											"var.intra_inbound_acl_rules",
											"count.index",
										],
									},
									"rule_number": {
										"references": [
											"var.intra_inbound_acl_rules",
											"count.index",
										],
									},
									"to_port": {
										"references": [
											"var.intra_inbound_acl_rules",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "intra_inbound",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_network_acl_rule",
							},
							{
								"address": "aws_network_acl_rule.intra_outbound",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.intra_dedicated_network_acl",
										"var.intra_subnets",
										"var.intra_outbound_acl_rules",
									],
								},
								"expressions": {
									"cidr_block": {
										"references": [
											"var.intra_outbound_acl_rules",
											"count.index",
										],
									},
									"egress": {
										"constant_value": true,
									},
									"from_port": {
										"references": [
											"var.intra_outbound_acl_rules",
											"count.index",
										],
									},
									"icmp_code": {
										"references": [
											"var.intra_outbound_acl_rules",
											"count.index",
										],
									},
									"icmp_type": {
										"references": [
											"var.intra_outbound_acl_rules",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.intra_outbound_acl_rules",
											"count.index",
										],
									},
									"network_acl_id": {
										"references": [
											"aws_network_acl.intra[0].id",
											"aws_network_acl.intra[0]",
											"aws_network_acl.intra",
										],
									},
									"protocol": {
										"references": [
											"var.intra_outbound_acl_rules",
											"count.index",
										],
									},
									"rule_action": {
										"references": [
											"var.intra_outbound_acl_rules",
											"count.index",
										],
									},
									"rule_number": {
										"references": [
											"var.intra_outbound_acl_rules",
											"count.index",
										],
									},
									"to_port": {
										"references": [
											"var.intra_outbound_acl_rules",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "intra_outbound",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_network_acl_rule",
							},
							{
								"address": "aws_network_acl_rule.private_inbound",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.private_dedicated_network_acl",
										"var.private_subnets",
										"var.private_inbound_acl_rules",
									],
								},
								"expressions": {
									"cidr_block": {
										"references": [
											"var.private_inbound_acl_rules",
											"count.index",
										],
									},
									"egress": {
										"constant_value": false,
									},
									"from_port": {
										"references": [
											"var.private_inbound_acl_rules",
											"count.index",
										],
									},
									"icmp_code": {
										"references": [
											"var.private_inbound_acl_rules",
											"count.index",
										],
									},
									"icmp_type": {
										"references": [
											"var.private_inbound_acl_rules",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.private_inbound_acl_rules",
											"count.index",
										],
									},
									"network_acl_id": {
										"references": [
											"aws_network_acl.private[0].id",
											"aws_network_acl.private[0]",
											"aws_network_acl.private",
										],
									},
									"protocol": {
										"references": [
											"var.private_inbound_acl_rules",
											"count.index",
										],
									},
									"rule_action": {
										"references": [
											"var.private_inbound_acl_rules",
											"count.index",
										],
									},
									"rule_number": {
										"references": [
											"var.private_inbound_acl_rules",
											"count.index",
										],
									},
									"to_port": {
										"references": [
											"var.private_inbound_acl_rules",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "private_inbound",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_network_acl_rule",
							},
							{
								"address": "aws_network_acl_rule.private_outbound",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.private_dedicated_network_acl",
										"var.private_subnets",
										"var.private_outbound_acl_rules",
									],
								},
								"expressions": {
									"cidr_block": {
										"references": [
											"var.private_outbound_acl_rules",
											"count.index",
										],
									},
									"egress": {
										"constant_value": true,
									},
									"from_port": {
										"references": [
											"var.private_outbound_acl_rules",
											"count.index",
										],
									},
									"icmp_code": {
										"references": [
											"var.private_outbound_acl_rules",
											"count.index",
										],
									},
									"icmp_type": {
										"references": [
											"var.private_outbound_acl_rules",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.private_outbound_acl_rules",
											"count.index",
										],
									},
									"network_acl_id": {
										"references": [
											"aws_network_acl.private[0].id",
											"aws_network_acl.private[0]",
											"aws_network_acl.private",
										],
									},
									"protocol": {
										"references": [
											"var.private_outbound_acl_rules",
											"count.index",
										],
									},
									"rule_action": {
										"references": [
											"var.private_outbound_acl_rules",
											"count.index",
										],
									},
									"rule_number": {
										"references": [
											"var.private_outbound_acl_rules",
											"count.index",
										],
									},
									"to_port": {
										"references": [
											"var.private_outbound_acl_rules",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "private_outbound",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_network_acl_rule",
							},
							{
								"address": "aws_network_acl_rule.public_inbound",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.public_dedicated_network_acl",
										"var.public_subnets",
										"var.public_inbound_acl_rules",
									],
								},
								"expressions": {
									"cidr_block": {
										"references": [
											"var.public_inbound_acl_rules",
											"count.index",
										],
									},
									"egress": {
										"constant_value": false,
									},
									"from_port": {
										"references": [
											"var.public_inbound_acl_rules",
											"count.index",
										],
									},
									"icmp_code": {
										"references": [
											"var.public_inbound_acl_rules",
											"count.index",
										],
									},
									"icmp_type": {
										"references": [
											"var.public_inbound_acl_rules",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.public_inbound_acl_rules",
											"count.index",
										],
									},
									"network_acl_id": {
										"references": [
											"aws_network_acl.public[0].id",
											"aws_network_acl.public[0]",
											"aws_network_acl.public",
										],
									},
									"protocol": {
										"references": [
											"var.public_inbound_acl_rules",
											"count.index",
										],
									},
									"rule_action": {
										"references": [
											"var.public_inbound_acl_rules",
											"count.index",
										],
									},
									"rule_number": {
										"references": [
											"var.public_inbound_acl_rules",
											"count.index",
										],
									},
									"to_port": {
										"references": [
											"var.public_inbound_acl_rules",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "public_inbound",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_network_acl_rule",
							},
							{
								"address": "aws_network_acl_rule.public_outbound",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.public_dedicated_network_acl",
										"var.public_subnets",
										"var.public_outbound_acl_rules",
									],
								},
								"expressions": {
									"cidr_block": {
										"references": [
											"var.public_outbound_acl_rules",
											"count.index",
										],
									},
									"egress": {
										"constant_value": true,
									},
									"from_port": {
										"references": [
											"var.public_outbound_acl_rules",
											"count.index",
										],
									},
									"icmp_code": {
										"references": [
											"var.public_outbound_acl_rules",
											"count.index",
										],
									},
									"icmp_type": {
										"references": [
											"var.public_outbound_acl_rules",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.public_outbound_acl_rules",
											"count.index",
										],
									},
									"network_acl_id": {
										"references": [
											"aws_network_acl.public[0].id",
											"aws_network_acl.public[0]",
											"aws_network_acl.public",
										],
									},
									"protocol": {
										"references": [
											"var.public_outbound_acl_rules",
											"count.index",
										],
									},
									"rule_action": {
										"references": [
											"var.public_outbound_acl_rules",
											"count.index",
										],
									},
									"rule_number": {
										"references": [
											"var.public_outbound_acl_rules",
											"count.index",
										],
									},
									"to_port": {
										"references": [
											"var.public_outbound_acl_rules",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "public_outbound",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_network_acl_rule",
							},
							{
								"address": "aws_network_acl_rule.redshift_inbound",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.redshift_dedicated_network_acl",
										"var.redshift_subnets",
										"var.redshift_inbound_acl_rules",
									],
								},
								"expressions": {
									"cidr_block": {
										"references": [
											"var.redshift_inbound_acl_rules",
											"count.index",
										],
									},
									"egress": {
										"constant_value": false,
									},
									"from_port": {
										"references": [
											"var.redshift_inbound_acl_rules",
											"count.index",
										],
									},
									"icmp_code": {
										"references": [
											"var.redshift_inbound_acl_rules",
											"count.index",
										],
									},
									"icmp_type": {
										"references": [
											"var.redshift_inbound_acl_rules",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.redshift_inbound_acl_rules",
											"count.index",
										],
									},
									"network_acl_id": {
										"references": [
											"aws_network_acl.redshift[0].id",
											"aws_network_acl.redshift[0]",
											"aws_network_acl.redshift",
										],
									},
									"protocol": {
										"references": [
											"var.redshift_inbound_acl_rules",
											"count.index",
										],
									},
									"rule_action": {
										"references": [
											"var.redshift_inbound_acl_rules",
											"count.index",
										],
									},
									"rule_number": {
										"references": [
											"var.redshift_inbound_acl_rules",
											"count.index",
										],
									},
									"to_port": {
										"references": [
											"var.redshift_inbound_acl_rules",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "redshift_inbound",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_network_acl_rule",
							},
							{
								"address": "aws_network_acl_rule.redshift_outbound",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.redshift_dedicated_network_acl",
										"var.redshift_subnets",
										"var.redshift_outbound_acl_rules",
									],
								},
								"expressions": {
									"cidr_block": {
										"references": [
											"var.redshift_outbound_acl_rules",
											"count.index",
										],
									},
									"egress": {
										"constant_value": true,
									},
									"from_port": {
										"references": [
											"var.redshift_outbound_acl_rules",
											"count.index",
										],
									},
									"icmp_code": {
										"references": [
											"var.redshift_outbound_acl_rules",
											"count.index",
										],
									},
									"icmp_type": {
										"references": [
											"var.redshift_outbound_acl_rules",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.redshift_outbound_acl_rules",
											"count.index",
										],
									},
									"network_acl_id": {
										"references": [
											"aws_network_acl.redshift[0].id",
											"aws_network_acl.redshift[0]",
											"aws_network_acl.redshift",
										],
									},
									"protocol": {
										"references": [
											"var.redshift_outbound_acl_rules",
											"count.index",
										],
									},
									"rule_action": {
										"references": [
											"var.redshift_outbound_acl_rules",
											"count.index",
										],
									},
									"rule_number": {
										"references": [
											"var.redshift_outbound_acl_rules",
											"count.index",
										],
									},
									"to_port": {
										"references": [
											"var.redshift_outbound_acl_rules",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "redshift_outbound",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_network_acl_rule",
							},
							{
								"address": "aws_redshift_subnet_group.redshift",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.redshift_subnets",
										"var.create_redshift_subnet_group",
									],
								},
								"expressions": {
									"description": {
										"references": [
											"var.name",
										],
									},
									"name": {
										"references": [
											"var.name",
										],
									},
									"subnet_ids": {
										"references": [
											"aws_subnet.redshift",
										],
									},
									"tags": {
										"references": [
											"var.name",
											"var.tags",
											"var.redshift_subnet_group_tags",
										],
									},
								},
								"mode":                "managed",
								"name":                "redshift",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_redshift_subnet_group",
							},
							{
								"address": "aws_route.database_internet_gateway",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.create_igw",
										"var.create_database_subnet_route_table",
										"var.database_subnets",
										"var.create_database_internet_gateway_route",
										"var.create_database_nat_gateway_route",
									],
								},
								"expressions": {
									"destination_cidr_block": {
										"constant_value": "0.0.0.0/0",
									},
									"gateway_id": {
										"references": [
											"aws_internet_gateway.this[0].id",
											"aws_internet_gateway.this[0]",
											"aws_internet_gateway.this",
										],
									},
									"route_table_id": {
										"references": [
											"aws_route_table.database[0].id",
											"aws_route_table.database[0]",
											"aws_route_table.database",
										],
									},
									"timeouts": {},
								},
								"mode":                "managed",
								"name":                "database_internet_gateway",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_route",
							},
							{
								"address": "aws_route.database_ipv6_egress",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.create_egress_only_igw",
										"var.enable_ipv6",
										"var.create_database_subnet_route_table",
										"var.database_subnets",
										"var.create_database_internet_gateway_route",
									],
								},
								"expressions": {
									"destination_ipv6_cidr_block": {
										"constant_value": "::/0",
									},
									"egress_only_gateway_id": {
										"references": [
											"aws_egress_only_internet_gateway.this[0].id",
											"aws_egress_only_internet_gateway.this[0]",
											"aws_egress_only_internet_gateway.this",
										],
									},
									"route_table_id": {
										"references": [
											"aws_route_table.database[0].id",
											"aws_route_table.database[0]",
											"aws_route_table.database",
										],
									},
									"timeouts": {},
								},
								"mode":                "managed",
								"name":                "database_ipv6_egress",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_route",
							},
							{
								"address": "aws_route.database_nat_gateway",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.create_database_subnet_route_table",
										"var.database_subnets",
										"var.create_database_internet_gateway_route",
										"var.create_database_nat_gateway_route",
										"var.enable_nat_gateway",
										"var.single_nat_gateway",
										"var.database_subnets",
									],
								},
								"expressions": {
									"destination_cidr_block": {
										"constant_value": "0.0.0.0/0",
									},
									"nat_gateway_id": {
										"references": [
											"aws_nat_gateway.this",
											"count.index",
										],
									},
									"route_table_id": {
										"references": [
											"aws_route_table.database",
											"count.index",
										],
									},
									"timeouts": {},
								},
								"mode":                "managed",
								"name":                "database_nat_gateway",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_route",
							},
							{
								"address": "aws_route.private_ipv6_egress",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.create_egress_only_igw",
										"var.enable_ipv6",
										"var.private_subnets",
									],
								},
								"expressions": {
									"destination_ipv6_cidr_block": {
										"constant_value": "::/0",
									},
									"egress_only_gateway_id": {
										"references": [
											"aws_egress_only_internet_gateway.this",
										],
									},
									"route_table_id": {
										"references": [
											"aws_route_table.private",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "private_ipv6_egress",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_route",
							},
							{
								"address": "aws_route.private_nat_gateway",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_nat_gateway",
										"local.nat_gateway_count",
									],
								},
								"expressions": {
									"destination_cidr_block": {
										"constant_value": "0.0.0.0/0",
									},
									"nat_gateway_id": {
										"references": [
											"aws_nat_gateway.this",
											"count.index",
										],
									},
									"route_table_id": {
										"references": [
											"aws_route_table.private",
											"count.index",
										],
									},
									"timeouts": {},
								},
								"mode":                "managed",
								"name":                "private_nat_gateway",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_route",
							},
							{
								"address": "aws_route.public_internet_gateway",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.create_igw",
										"var.public_subnets",
									],
								},
								"expressions": {
									"destination_cidr_block": {
										"constant_value": "0.0.0.0/0",
									},
									"gateway_id": {
										"references": [
											"aws_internet_gateway.this[0].id",
											"aws_internet_gateway.this[0]",
											"aws_internet_gateway.this",
										],
									},
									"route_table_id": {
										"references": [
											"aws_route_table.public[0].id",
											"aws_route_table.public[0]",
											"aws_route_table.public",
										],
									},
									"timeouts": {},
								},
								"mode":                "managed",
								"name":                "public_internet_gateway",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_route",
							},
							{
								"address": "aws_route.public_internet_gateway_ipv6",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.create_igw",
										"var.enable_ipv6",
										"var.public_subnets",
									],
								},
								"expressions": {
									"destination_ipv6_cidr_block": {
										"constant_value": "::/0",
									},
									"gateway_id": {
										"references": [
											"aws_internet_gateway.this[0].id",
											"aws_internet_gateway.this[0]",
											"aws_internet_gateway.this",
										],
									},
									"route_table_id": {
										"references": [
											"aws_route_table.public[0].id",
											"aws_route_table.public[0]",
											"aws_route_table.public",
										],
									},
								},
								"mode":                "managed",
								"name":                "public_internet_gateway_ipv6",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_route",
							},
							{
								"address": "aws_route_table.database",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.create_database_subnet_route_table",
										"var.database_subnets",
										"var.single_nat_gateway",
										"var.create_database_internet_gateway_route",
										"var.database_subnets",
									],
								},
								"expressions": {
									"tags": {
										"references": [
											"var.single_nat_gateway",
											"var.create_database_internet_gateway_route",
											"var.name",
											"var.database_subnet_suffix",
											"var.database_subnet_suffix",
											"var.name",
											"var.azs",
											"count.index",
											"var.tags",
											"var.database_route_table_tags",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "database",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_route_table",
							},
							{
								"address": "aws_route_table.elasticache",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.create_elasticache_subnet_route_table",
										"var.elasticache_subnets",
									],
								},
								"expressions": {
									"tags": {
										"references": [
											"var.name",
											"var.elasticache_subnet_suffix",
											"var.tags",
											"var.elasticache_route_table_tags",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "elasticache",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_route_table",
							},
							{
								"address": "aws_route_table.intra",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.intra_subnets",
									],
								},
								"expressions": {
									"tags": {
										"references": [
											"var.name",
											"var.intra_subnet_suffix",
											"var.tags",
											"var.intra_route_table_tags",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "intra",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_route_table",
							},
							{
								"address": "aws_route_table.private",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"local.max_subnet_length",
										"local.nat_gateway_count",
									],
								},
								"expressions": {
									"tags": {
										"references": [
											"var.single_nat_gateway",
											"var.name",
											"var.private_subnet_suffix",
											"var.private_subnet_suffix",
											"var.name",
											"var.azs",
											"count.index",
											"var.tags",
											"var.private_route_table_tags",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "private",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_route_table",
							},
							{
								"address": "aws_route_table.public",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.public_subnets",
									],
								},
								"expressions": {
									"tags": {
										"references": [
											"var.public_subnet_suffix",
											"var.name",
											"var.tags",
											"var.public_route_table_tags",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "public",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_route_table",
							},
							{
								"address": "aws_route_table.redshift",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.create_redshift_subnet_route_table",
										"var.redshift_subnets",
									],
								},
								"expressions": {
									"tags": {
										"references": [
											"var.name",
											"var.redshift_subnet_suffix",
											"var.tags",
											"var.redshift_route_table_tags",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "redshift",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_route_table",
							},
							{
								"address": "aws_route_table_association.database",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.database_subnets",
										"var.database_subnets",
									],
								},
								"expressions": {
									"route_table_id": {
										"references": [
											"aws_route_table.database",
											"aws_route_table.private",
											"var.create_database_subnet_route_table",
											"var.single_nat_gateway",
											"var.create_database_internet_gateway_route",
											"count.index",
											"count.index",
										],
									},
									"subnet_id": {
										"references": [
											"aws_subnet.database",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "database",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_route_table_association",
							},
							{
								"address": "aws_route_table_association.elasticache",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.elasticache_subnets",
										"var.elasticache_subnets",
									],
								},
								"expressions": {
									"route_table_id": {
										"references": [
											"aws_route_table.elasticache",
											"aws_route_table.private",
											"var.single_nat_gateway",
											"var.create_elasticache_subnet_route_table",
											"count.index",
										],
									},
									"subnet_id": {
										"references": [
											"aws_subnet.elasticache",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "elasticache",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_route_table_association",
							},
							{
								"address": "aws_route_table_association.intra",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.intra_subnets",
										"var.intra_subnets",
									],
								},
								"expressions": {
									"route_table_id": {
										"references": [
											"aws_route_table.intra",
										],
									},
									"subnet_id": {
										"references": [
											"aws_subnet.intra",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "intra",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_route_table_association",
							},
							{
								"address": "aws_route_table_association.private",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.private_subnets",
										"var.private_subnets",
									],
								},
								"expressions": {
									"route_table_id": {
										"references": [
											"aws_route_table.private",
											"var.single_nat_gateway",
											"count.index",
										],
									},
									"subnet_id": {
										"references": [
											"aws_subnet.private",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "private",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_route_table_association",
							},
							{
								"address": "aws_route_table_association.public",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.public_subnets",
										"var.public_subnets",
									],
								},
								"expressions": {
									"route_table_id": {
										"references": [
											"aws_route_table.public[0].id",
											"aws_route_table.public[0]",
											"aws_route_table.public",
										],
									},
									"subnet_id": {
										"references": [
											"aws_subnet.public",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "public",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_route_table_association",
							},
							{
								"address": "aws_route_table_association.redshift",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.redshift_subnets",
										"var.enable_public_redshift",
										"var.redshift_subnets",
									],
								},
								"expressions": {
									"route_table_id": {
										"references": [
											"aws_route_table.redshift",
											"aws_route_table.private",
											"var.single_nat_gateway",
											"var.create_redshift_subnet_route_table",
											"count.index",
										],
									},
									"subnet_id": {
										"references": [
											"aws_subnet.redshift",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "redshift",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_route_table_association",
							},
							{
								"address": "aws_route_table_association.redshift_public",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.redshift_subnets",
										"var.enable_public_redshift",
										"var.redshift_subnets",
									],
								},
								"expressions": {
									"route_table_id": {
										"references": [
											"aws_route_table.redshift",
											"aws_route_table.public",
											"var.single_nat_gateway",
											"var.create_redshift_subnet_route_table",
											"count.index",
										],
									},
									"subnet_id": {
										"references": [
											"aws_subnet.redshift",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "redshift_public",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_route_table_association",
							},
							{
								"address": "aws_subnet.database",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.database_subnets",
										"var.database_subnets",
									],
								},
								"expressions": {
									"assign_ipv6_address_on_creation": {
										"references": [
											"var.database_subnet_assign_ipv6_address_on_creation",
											"var.assign_ipv6_address_on_creation",
											"var.database_subnet_assign_ipv6_address_on_creation",
										],
									},
									"availability_zone": {
										"references": [
											"var.azs",
											"count.index",
											"var.azs",
											"count.index",
										],
									},
									"availability_zone_id": {
										"references": [
											"var.azs",
											"count.index",
											"var.azs",
											"count.index",
										],
									},
									"cidr_block": {
										"references": [
											"var.database_subnets",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.enable_ipv6",
											"var.database_subnet_ipv6_prefixes",
											"aws_vpc.this[0].ipv6_cidr_block",
											"aws_vpc.this[0]",
											"aws_vpc.this",
											"var.database_subnet_ipv6_prefixes",
											"count.index",
										],
									},
									"tags": {
										"references": [
											"var.database_subnet_suffix",
											"var.name",
											"var.azs",
											"count.index",
											"var.tags",
											"var.database_subnet_tags",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "database",
								"provider_config_key": "vpc:aws",
								"schema_version":      1,
								"type":                "aws_subnet",
							},
							{
								"address": "aws_subnet.elasticache",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.elasticache_subnets",
										"var.elasticache_subnets",
									],
								},
								"expressions": {
									"assign_ipv6_address_on_creation": {
										"references": [
											"var.elasticache_subnet_assign_ipv6_address_on_creation",
											"var.assign_ipv6_address_on_creation",
											"var.elasticache_subnet_assign_ipv6_address_on_creation",
										],
									},
									"availability_zone": {
										"references": [
											"var.azs",
											"count.index",
											"var.azs",
											"count.index",
										],
									},
									"availability_zone_id": {
										"references": [
											"var.azs",
											"count.index",
											"var.azs",
											"count.index",
										],
									},
									"cidr_block": {
										"references": [
											"var.elasticache_subnets",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.enable_ipv6",
											"var.elasticache_subnet_ipv6_prefixes",
											"aws_vpc.this[0].ipv6_cidr_block",
											"aws_vpc.this[0]",
											"aws_vpc.this",
											"var.elasticache_subnet_ipv6_prefixes",
											"count.index",
										],
									},
									"tags": {
										"references": [
											"var.elasticache_subnet_suffix",
											"var.name",
											"var.azs",
											"count.index",
											"var.tags",
											"var.elasticache_subnet_tags",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "elasticache",
								"provider_config_key": "vpc:aws",
								"schema_version":      1,
								"type":                "aws_subnet",
							},
							{
								"address": "aws_subnet.intra",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.intra_subnets",
										"var.intra_subnets",
									],
								},
								"expressions": {
									"assign_ipv6_address_on_creation": {
										"references": [
											"var.intra_subnet_assign_ipv6_address_on_creation",
											"var.assign_ipv6_address_on_creation",
											"var.intra_subnet_assign_ipv6_address_on_creation",
										],
									},
									"availability_zone": {
										"references": [
											"var.azs",
											"count.index",
											"var.azs",
											"count.index",
										],
									},
									"availability_zone_id": {
										"references": [
											"var.azs",
											"count.index",
											"var.azs",
											"count.index",
										],
									},
									"cidr_block": {
										"references": [
											"var.intra_subnets",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.enable_ipv6",
											"var.intra_subnet_ipv6_prefixes",
											"aws_vpc.this[0].ipv6_cidr_block",
											"aws_vpc.this[0]",
											"aws_vpc.this",
											"var.intra_subnet_ipv6_prefixes",
											"count.index",
										],
									},
									"tags": {
										"references": [
											"var.intra_subnet_suffix",
											"var.name",
											"var.azs",
											"count.index",
											"var.tags",
											"var.intra_subnet_tags",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "intra",
								"provider_config_key": "vpc:aws",
								"schema_version":      1,
								"type":                "aws_subnet",
							},
							{
								"address": "aws_subnet.private",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.private_subnets",
										"var.private_subnets",
									],
								},
								"expressions": {
									"assign_ipv6_address_on_creation": {
										"references": [
											"var.private_subnet_assign_ipv6_address_on_creation",
											"var.assign_ipv6_address_on_creation",
											"var.private_subnet_assign_ipv6_address_on_creation",
										],
									},
									"availability_zone": {
										"references": [
											"var.azs",
											"count.index",
											"var.azs",
											"count.index",
										],
									},
									"availability_zone_id": {
										"references": [
											"var.azs",
											"count.index",
											"var.azs",
											"count.index",
										],
									},
									"cidr_block": {
										"references": [
											"var.private_subnets",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.enable_ipv6",
											"var.private_subnet_ipv6_prefixes",
											"aws_vpc.this[0].ipv6_cidr_block",
											"aws_vpc.this[0]",
											"aws_vpc.this",
											"var.private_subnet_ipv6_prefixes",
											"count.index",
										],
									},
									"tags": {
										"references": [
											"var.private_subnet_suffix",
											"var.name",
											"var.azs",
											"count.index",
											"var.tags",
											"var.private_subnet_tags",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "private",
								"provider_config_key": "vpc:aws",
								"schema_version":      1,
								"type":                "aws_subnet",
							},
							{
								"address": "aws_subnet.public",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.public_subnets",
										"var.one_nat_gateway_per_az",
										"var.public_subnets",
										"var.azs",
										"var.public_subnets",
									],
								},
								"expressions": {
									"assign_ipv6_address_on_creation": {
										"references": [
											"var.public_subnet_assign_ipv6_address_on_creation",
											"var.assign_ipv6_address_on_creation",
											"var.public_subnet_assign_ipv6_address_on_creation",
										],
									},
									"availability_zone": {
										"references": [
											"var.azs",
											"count.index",
											"var.azs",
											"count.index",
										],
									},
									"availability_zone_id": {
										"references": [
											"var.azs",
											"count.index",
											"var.azs",
											"count.index",
										],
									},
									"cidr_block": {
										"references": [
											"var.public_subnets",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.enable_ipv6",
											"var.public_subnet_ipv6_prefixes",
											"aws_vpc.this[0].ipv6_cidr_block",
											"aws_vpc.this[0]",
											"aws_vpc.this",
											"var.public_subnet_ipv6_prefixes",
											"count.index",
										],
									},
									"map_public_ip_on_launch": {
										"references": [
											"var.map_public_ip_on_launch",
										],
									},
									"tags": {
										"references": [
											"var.public_subnet_suffix",
											"var.name",
											"var.azs",
											"count.index",
											"var.tags",
											"var.public_subnet_tags",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "public",
								"provider_config_key": "vpc:aws",
								"schema_version":      1,
								"type":                "aws_subnet",
							},
							{
								"address": "aws_subnet.redshift",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.redshift_subnets",
										"var.redshift_subnets",
									],
								},
								"expressions": {
									"assign_ipv6_address_on_creation": {
										"references": [
											"var.redshift_subnet_assign_ipv6_address_on_creation",
											"var.assign_ipv6_address_on_creation",
											"var.redshift_subnet_assign_ipv6_address_on_creation",
										],
									},
									"availability_zone": {
										"references": [
											"var.azs",
											"count.index",
											"var.azs",
											"count.index",
										],
									},
									"availability_zone_id": {
										"references": [
											"var.azs",
											"count.index",
											"var.azs",
											"count.index",
										],
									},
									"cidr_block": {
										"references": [
											"var.redshift_subnets",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.enable_ipv6",
											"var.redshift_subnet_ipv6_prefixes",
											"aws_vpc.this[0].ipv6_cidr_block",
											"aws_vpc.this[0]",
											"aws_vpc.this",
											"var.redshift_subnet_ipv6_prefixes",
											"count.index",
										],
									},
									"tags": {
										"references": [
											"var.redshift_subnet_suffix",
											"var.name",
											"var.azs",
											"count.index",
											"var.tags",
											"var.redshift_subnet_tags",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "redshift",
								"provider_config_key": "vpc:aws",
								"schema_version":      1,
								"type":                "aws_subnet",
							},
							{
								"address": "aws_vpc.this",
								"count_expression": {
									"references": [
										"var.create_vpc",
									],
								},
								"expressions": {
									"assign_generated_ipv6_cidr_block": {
										"references": [
											"var.enable_ipv6",
										],
									},
									"cidr_block": {
										"references": [
											"var.cidr",
										],
									},
									"enable_classiclink": {
										"references": [
											"var.enable_classiclink",
										],
									},
									"enable_classiclink_dns_support": {
										"references": [
											"var.enable_classiclink_dns_support",
										],
									},
									"enable_dns_hostnames": {
										"references": [
											"var.enable_dns_hostnames",
										],
									},
									"enable_dns_support": {
										"references": [
											"var.enable_dns_support",
										],
									},
									"instance_tenancy": {
										"references": [
											"var.instance_tenancy",
										],
									},
									"tags": {
										"references": [
											"var.name",
											"var.tags",
											"var.vpc_tags",
										],
									},
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "vpc:aws",
								"schema_version":      1,
								"type":                "aws_vpc",
							},
							{
								"address": "aws_vpc_dhcp_options.this",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_dhcp_options",
									],
								},
								"expressions": {
									"domain_name": {
										"references": [
											"var.dhcp_options_domain_name",
										],
									},
									"domain_name_servers": {
										"references": [
											"var.dhcp_options_domain_name_servers",
										],
									},
									"netbios_name_servers": {
										"references": [
											"var.dhcp_options_netbios_name_servers",
										],
									},
									"netbios_node_type": {
										"references": [
											"var.dhcp_options_netbios_node_type",
										],
									},
									"ntp_servers": {
										"references": [
											"var.dhcp_options_ntp_servers",
										],
									},
									"tags": {
										"references": [
											"var.name",
											"var.tags",
											"var.dhcp_options_tags",
										],
									},
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_dhcp_options",
							},
							{
								"address": "aws_vpc_dhcp_options_association.this",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_dhcp_options",
									],
								},
								"expressions": {
									"dhcp_options_id": {
										"references": [
											"aws_vpc_dhcp_options.this[0].id",
											"aws_vpc_dhcp_options.this[0]",
											"aws_vpc_dhcp_options.this",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_dhcp_options_association",
							},
							{
								"address": "aws_vpc_endpoint.access_analyzer",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_access_analyzer_endpoint",
									],
								},
								"expressions": {
									"policy": {
										"references": [
											"var.access_analyzer_endpoint_policy",
										],
									},
									"private_dns_enabled": {
										"references": [
											"var.access_analyzer_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.access_analyzer_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.access_analyzer[0].service_name",
											"data.aws_vpc_endpoint_service.access_analyzer[0]",
											"data.aws_vpc_endpoint_service.access_analyzer",
										],
									},
									"subnet_ids": {
										"references": [
											"var.access_analyzer_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "access_analyzer",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.acm_pca",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_acm_pca_endpoint",
									],
								},
								"expressions": {
									"policy": {
										"references": [
											"var.acm_pca_endpoint_policy",
										],
									},
									"private_dns_enabled": {
										"references": [
											"var.acm_pca_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.acm_pca_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.acm_pca[0].service_name",
											"data.aws_vpc_endpoint_service.acm_pca[0]",
											"data.aws_vpc_endpoint_service.acm_pca",
										],
									},
									"subnet_ids": {
										"references": [
											"var.acm_pca_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "acm_pca",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.apigw",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_apigw_endpoint",
									],
								},
								"expressions": {
									"policy": {
										"references": [
											"var.apigw_endpoint_policy",
										],
									},
									"private_dns_enabled": {
										"references": [
											"var.apigw_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.apigw_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.apigw[0].service_name",
											"data.aws_vpc_endpoint_service.apigw[0]",
											"data.aws_vpc_endpoint_service.apigw",
										],
									},
									"subnet_ids": {
										"references": [
											"var.apigw_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "apigw",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.appmesh_envoy_management",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_appmesh_envoy_management_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.appmesh_envoy_management_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.appmesh_envoy_management_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.appmesh_envoy_management[0].service_name",
											"data.aws_vpc_endpoint_service.appmesh_envoy_management[0]",
											"data.aws_vpc_endpoint_service.appmesh_envoy_management",
										],
									},
									"subnet_ids": {
										"references": [
											"var.appmesh_envoy_management_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "appmesh_envoy_management",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.appstream_api",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_appstream_api_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.appstream_api_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.appstream_api_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.appstream_api[0].service_name",
											"data.aws_vpc_endpoint_service.appstream_api[0]",
											"data.aws_vpc_endpoint_service.appstream_api",
										],
									},
									"subnet_ids": {
										"references": [
											"var.appstream_api_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "appstream_api",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.appstream_streaming",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_appstream_streaming_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.appstream_streaming_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.appstream_streaming_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.appstream_streaming[0].service_name",
											"data.aws_vpc_endpoint_service.appstream_streaming[0]",
											"data.aws_vpc_endpoint_service.appstream_streaming",
										],
									},
									"subnet_ids": {
										"references": [
											"var.appstream_streaming_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "appstream_streaming",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.athena",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_athena_endpoint",
									],
								},
								"expressions": {
									"policy": {
										"references": [
											"var.athena_endpoint_policy",
										],
									},
									"private_dns_enabled": {
										"references": [
											"var.athena_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.athena_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.athena[0].service_name",
											"data.aws_vpc_endpoint_service.athena[0]",
											"data.aws_vpc_endpoint_service.athena",
										],
									},
									"subnet_ids": {
										"references": [
											"var.athena_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "athena",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.auto_scaling_plans",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_auto_scaling_plans_endpoint",
									],
								},
								"expressions": {
									"policy": {
										"references": [
											"var.auto_scaling_plans_endpoint_policy",
										],
									},
									"private_dns_enabled": {
										"references": [
											"var.auto_scaling_plans_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.auto_scaling_plans_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.auto_scaling_plans[0].service_name",
											"data.aws_vpc_endpoint_service.auto_scaling_plans[0]",
											"data.aws_vpc_endpoint_service.auto_scaling_plans",
										],
									},
									"subnet_ids": {
										"references": [
											"var.auto_scaling_plans_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "auto_scaling_plans",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.cloud_directory",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_cloud_directory_endpoint",
									],
								},
								"expressions": {
									"policy": {
										"references": [
											"var.cloud_directory_endpoint_policy",
										],
									},
									"private_dns_enabled": {
										"references": [
											"var.cloud_directory_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.cloud_directory_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.cloud_directory[0].service_name",
											"data.aws_vpc_endpoint_service.cloud_directory[0]",
											"data.aws_vpc_endpoint_service.cloud_directory",
										],
									},
									"subnet_ids": {
										"references": [
											"var.cloud_directory_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "cloud_directory",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.cloudformation",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_cloudformation_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.cloudformation_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.cloudformation_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.cloudformation[0].service_name",
											"data.aws_vpc_endpoint_service.cloudformation[0]",
											"data.aws_vpc_endpoint_service.cloudformation",
										],
									},
									"subnet_ids": {
										"references": [
											"var.cloudformation_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "cloudformation",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.cloudtrail",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_cloudtrail_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.cloudtrail_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.cloudtrail_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.cloudtrail[0].service_name",
											"data.aws_vpc_endpoint_service.cloudtrail[0]",
											"data.aws_vpc_endpoint_service.cloudtrail",
										],
									},
									"subnet_ids": {
										"references": [
											"var.cloudtrail_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "cloudtrail",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.codeartifact_api",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_codeartifact_api_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.codeartifact_api_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.codeartifact_api_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.codeartifact_api[0].service_name",
											"data.aws_vpc_endpoint_service.codeartifact_api[0]",
											"data.aws_vpc_endpoint_service.codeartifact_api",
										],
									},
									"subnet_ids": {
										"references": [
											"var.codeartifact_api_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "codeartifact_api",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.codeartifact_repositories",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_codeartifact_repositories_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.codeartifact_repositories_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.codeartifact_repositories_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.codeartifact_repositories[0].service_name",
											"data.aws_vpc_endpoint_service.codeartifact_repositories[0]",
											"data.aws_vpc_endpoint_service.codeartifact_repositories",
										],
									},
									"subnet_ids": {
										"references": [
											"var.codeartifact_repositories_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "codeartifact_repositories",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.codebuild",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_codebuild_endpoint",
									],
								},
								"expressions": {
									"policy": {
										"references": [
											"var.codebuild_endpoint_policy",
										],
									},
									"private_dns_enabled": {
										"references": [
											"var.codebuild_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.codebuild_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.codebuild[0].service_name",
											"data.aws_vpc_endpoint_service.codebuild[0]",
											"data.aws_vpc_endpoint_service.codebuild",
										],
									},
									"subnet_ids": {
										"references": [
											"var.codebuild_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "codebuild",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.codecommit",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_codecommit_endpoint",
									],
								},
								"expressions": {
									"policy": {
										"references": [
											"var.codecommit_endpoint_policy",
										],
									},
									"private_dns_enabled": {
										"references": [
											"var.codecommit_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.codecommit_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.codecommit[0].service_name",
											"data.aws_vpc_endpoint_service.codecommit[0]",
											"data.aws_vpc_endpoint_service.codecommit",
										],
									},
									"subnet_ids": {
										"references": [
											"var.codecommit_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "codecommit",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.codedeploy",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_codedeploy_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.codedeploy_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.codedeploy_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.codedeploy[0].service_name",
											"data.aws_vpc_endpoint_service.codedeploy[0]",
											"data.aws_vpc_endpoint_service.codedeploy",
										],
									},
									"subnet_ids": {
										"references": [
											"var.codedeploy_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "codedeploy",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.codedeploy_commands_secure",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_codedeploy_commands_secure_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.codedeploy_commands_secure_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.codedeploy_commands_secure_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.codedeploy_commands_secure[0].service_name",
											"data.aws_vpc_endpoint_service.codedeploy_commands_secure[0]",
											"data.aws_vpc_endpoint_service.codedeploy_commands_secure",
										],
									},
									"subnet_ids": {
										"references": [
											"var.codedeploy_commands_secure_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "codedeploy_commands_secure",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.codepipeline",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_codepipeline_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.codepipeline_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.codepipeline_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.codepipeline[0].service_name",
											"data.aws_vpc_endpoint_service.codepipeline[0]",
											"data.aws_vpc_endpoint_service.codepipeline",
										],
									},
									"subnet_ids": {
										"references": [
											"var.codepipeline_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "codepipeline",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.config",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_config_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.config_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.config_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.config[0].service_name",
											"data.aws_vpc_endpoint_service.config[0]",
											"data.aws_vpc_endpoint_service.config",
										],
									},
									"subnet_ids": {
										"references": [
											"var.config_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "config",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.datasync",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_datasync_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.datasync_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.datasync_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.datasync[0].service_name",
											"data.aws_vpc_endpoint_service.datasync[0]",
											"data.aws_vpc_endpoint_service.datasync",
										],
									},
									"subnet_ids": {
										"references": [
											"var.datasync_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "datasync",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.dms",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_dms_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.dms_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.dms_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.dms[0].service_name",
											"data.aws_vpc_endpoint_service.dms[0]",
											"data.aws_vpc_endpoint_service.dms",
										],
									},
									"subnet_ids": {
										"references": [
											"var.dms_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "dms",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.dynamodb",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_dynamodb_endpoint",
									],
								},
								"expressions": {
									"policy": {
										"references": [
											"var.dynamodb_endpoint_policy",
										],
									},
									"private_dns_enabled": {
										"references": [
											"var.dynamodb_endpoint_type",
											"var.dynamodb_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.dynamodb_endpoint_type",
											"var.dynamodb_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.dynamodb[0].service_name",
											"data.aws_vpc_endpoint_service.dynamodb[0]",
											"data.aws_vpc_endpoint_service.dynamodb",
										],
									},
									"subnet_ids": {
										"references": [
											"var.dynamodb_endpoint_type",
											"var.dynamodb_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"references": [
											"var.dynamodb_endpoint_type",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "dynamodb",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.ebs",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_ebs_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.ebs_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.ebs_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.ebs[0].service_name",
											"data.aws_vpc_endpoint_service.ebs[0]",
											"data.aws_vpc_endpoint_service.ebs",
										],
									},
									"subnet_ids": {
										"references": [
											"var.ebs_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "ebs",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.ec2",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_ec2_endpoint",
									],
								},
								"expressions": {
									"policy": {
										"references": [
											"var.ec2_endpoint_policy",
										],
									},
									"private_dns_enabled": {
										"references": [
											"var.ec2_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.ec2_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.ec2[0].service_name",
											"data.aws_vpc_endpoint_service.ec2[0]",
											"data.aws_vpc_endpoint_service.ec2",
										],
									},
									"subnet_ids": {
										"references": [
											"var.ec2_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "ec2",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.ec2_autoscaling",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_ec2_autoscaling_endpoint",
									],
								},
								"expressions": {
									"policy": {
										"references": [
											"var.ec2_autoscaling_endpoint_policy",
										],
									},
									"private_dns_enabled": {
										"references": [
											"var.ec2_autoscaling_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.ec2_autoscaling_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.ec2_autoscaling[0].service_name",
											"data.aws_vpc_endpoint_service.ec2_autoscaling[0]",
											"data.aws_vpc_endpoint_service.ec2_autoscaling",
										],
									},
									"subnet_ids": {
										"references": [
											"var.ec2_autoscaling_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "ec2_autoscaling",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.ec2messages",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_ec2messages_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.ec2messages_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.ec2messages_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.ec2messages[0].service_name",
											"data.aws_vpc_endpoint_service.ec2messages[0]",
											"data.aws_vpc_endpoint_service.ec2messages",
										],
									},
									"subnet_ids": {
										"references": [
											"var.ec2messages_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "ec2messages",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.ecr_api",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_ecr_api_endpoint",
									],
								},
								"expressions": {
									"policy": {
										"references": [
											"var.ecr_api_endpoint_policy",
										],
									},
									"private_dns_enabled": {
										"references": [
											"var.ecr_api_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.ecr_api_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.ecr_api[0].service_name",
											"data.aws_vpc_endpoint_service.ecr_api[0]",
											"data.aws_vpc_endpoint_service.ecr_api",
										],
									},
									"subnet_ids": {
										"references": [
											"var.ecr_api_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "ecr_api",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.ecr_dkr",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_ecr_dkr_endpoint",
									],
								},
								"expressions": {
									"policy": {
										"references": [
											"var.ecr_dkr_endpoint_policy",
										],
									},
									"private_dns_enabled": {
										"references": [
											"var.ecr_dkr_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.ecr_dkr_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.ecr_dkr[0].service_name",
											"data.aws_vpc_endpoint_service.ecr_dkr[0]",
											"data.aws_vpc_endpoint_service.ecr_dkr",
										],
									},
									"subnet_ids": {
										"references": [
											"var.ecr_dkr_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "ecr_dkr",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.ecs",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_ecs_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.ecs_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.ecs_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.ecs[0].service_name",
											"data.aws_vpc_endpoint_service.ecs[0]",
											"data.aws_vpc_endpoint_service.ecs",
										],
									},
									"subnet_ids": {
										"references": [
											"var.ecs_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "ecs",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.ecs_agent",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_ecs_agent_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.ecs_agent_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.ecs_agent_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.ecs_agent[0].service_name",
											"data.aws_vpc_endpoint_service.ecs_agent[0]",
											"data.aws_vpc_endpoint_service.ecs_agent",
										],
									},
									"subnet_ids": {
										"references": [
											"var.ecs_agent_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "ecs_agent",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.ecs_telemetry",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_ecs_telemetry_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.ecs_telemetry_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.ecs_telemetry_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.ecs_telemetry[0].service_name",
											"data.aws_vpc_endpoint_service.ecs_telemetry[0]",
											"data.aws_vpc_endpoint_service.ecs_telemetry",
										],
									},
									"subnet_ids": {
										"references": [
											"var.ecs_telemetry_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "ecs_telemetry",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.efs",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_efs_endpoint",
									],
								},
								"expressions": {
									"policy": {
										"references": [
											"var.efs_endpoint_policy",
										],
									},
									"private_dns_enabled": {
										"references": [
											"var.efs_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.efs_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.efs[0].service_name",
											"data.aws_vpc_endpoint_service.efs[0]",
											"data.aws_vpc_endpoint_service.efs",
										],
									},
									"subnet_ids": {
										"references": [
											"var.efs_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "efs",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.elastic_inference_runtime",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_elastic_inference_runtime_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.elastic_inference_runtime_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.elastic_inference_runtime_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.elastic_inference_runtime[0].service_name",
											"data.aws_vpc_endpoint_service.elastic_inference_runtime[0]",
											"data.aws_vpc_endpoint_service.elastic_inference_runtime",
										],
									},
									"subnet_ids": {
										"references": [
											"var.elastic_inference_runtime_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "elastic_inference_runtime",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.elasticbeanstalk",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_elasticbeanstalk_endpoint",
									],
								},
								"expressions": {
									"policy": {
										"references": [
											"var.elasticbeanstalk_endpoint_policy",
										],
									},
									"private_dns_enabled": {
										"references": [
											"var.elasticbeanstalk_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.elasticbeanstalk_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.elasticbeanstalk[0].service_name",
											"data.aws_vpc_endpoint_service.elasticbeanstalk[0]",
											"data.aws_vpc_endpoint_service.elasticbeanstalk",
										],
									},
									"subnet_ids": {
										"references": [
											"var.elasticbeanstalk_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "elasticbeanstalk",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.elasticbeanstalk_health",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_elasticbeanstalk_health_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.elasticbeanstalk_health_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.elasticbeanstalk_health_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.elasticbeanstalk_health[0].service_name",
											"data.aws_vpc_endpoint_service.elasticbeanstalk_health[0]",
											"data.aws_vpc_endpoint_service.elasticbeanstalk_health",
										],
									},
									"subnet_ids": {
										"references": [
											"var.elasticbeanstalk_health_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "elasticbeanstalk_health",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.elasticloadbalancing",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_elasticloadbalancing_endpoint",
									],
								},
								"expressions": {
									"policy": {
										"references": [
											"var.elasticloadbalancing_endpoint_policy",
										],
									},
									"private_dns_enabled": {
										"references": [
											"var.elasticloadbalancing_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.elasticloadbalancing_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.elasticloadbalancing[0].service_name",
											"data.aws_vpc_endpoint_service.elasticloadbalancing[0]",
											"data.aws_vpc_endpoint_service.elasticloadbalancing",
										],
									},
									"subnet_ids": {
										"references": [
											"var.elasticloadbalancing_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "elasticloadbalancing",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.emr",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_emr_endpoint",
									],
								},
								"expressions": {
									"policy": {
										"references": [
											"var.emr_endpoint_policy",
										],
									},
									"private_dns_enabled": {
										"references": [
											"var.emr_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.emr_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.emr[0].service_name",
											"data.aws_vpc_endpoint_service.emr[0]",
											"data.aws_vpc_endpoint_service.emr",
										],
									},
									"subnet_ids": {
										"references": [
											"var.emr_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "emr",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.events",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_events_endpoint",
									],
								},
								"expressions": {
									"policy": {
										"references": [
											"var.events_endpoint_policy",
										],
									},
									"private_dns_enabled": {
										"references": [
											"var.events_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.events_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.events[0].service_name",
											"data.aws_vpc_endpoint_service.events[0]",
											"data.aws_vpc_endpoint_service.events",
										],
									},
									"subnet_ids": {
										"references": [
											"var.events_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "events",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.git_codecommit",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_git_codecommit_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.git_codecommit_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.git_codecommit_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.git_codecommit[0].service_name",
											"data.aws_vpc_endpoint_service.git_codecommit[0]",
											"data.aws_vpc_endpoint_service.git_codecommit",
										],
									},
									"subnet_ids": {
										"references": [
											"var.git_codecommit_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "git_codecommit",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.glue",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_glue_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.glue_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.glue_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.glue[0].service_name",
											"data.aws_vpc_endpoint_service.glue[0]",
											"data.aws_vpc_endpoint_service.glue",
										],
									},
									"subnet_ids": {
										"references": [
											"var.glue_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "glue",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.kinesis_firehose",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_kinesis_firehose_endpoint",
									],
								},
								"expressions": {
									"policy": {
										"references": [
											"var.kinesis_firehose_endpoint_policy",
										],
									},
									"private_dns_enabled": {
										"references": [
											"var.kinesis_firehose_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.kinesis_firehose_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.kinesis_firehose[0].service_name",
											"data.aws_vpc_endpoint_service.kinesis_firehose[0]",
											"data.aws_vpc_endpoint_service.kinesis_firehose",
										],
									},
									"subnet_ids": {
										"references": [
											"var.kinesis_firehose_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "kinesis_firehose",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.kinesis_streams",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_kinesis_streams_endpoint",
									],
								},
								"expressions": {
									"policy": {
										"references": [
											"var.kinesis_streams_endpoint_policy",
										],
									},
									"private_dns_enabled": {
										"references": [
											"var.kinesis_streams_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.kinesis_streams_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.kinesis_streams[0].service_name",
											"data.aws_vpc_endpoint_service.kinesis_streams[0]",
											"data.aws_vpc_endpoint_service.kinesis_streams",
										],
									},
									"subnet_ids": {
										"references": [
											"var.kinesis_streams_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "kinesis_streams",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.kms",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_kms_endpoint",
									],
								},
								"expressions": {
									"policy": {
										"references": [
											"var.kms_endpoint_policy",
										],
									},
									"private_dns_enabled": {
										"references": [
											"var.kms_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.kms_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.kms[0].service_name",
											"data.aws_vpc_endpoint_service.kms[0]",
											"data.aws_vpc_endpoint_service.kms",
										],
									},
									"subnet_ids": {
										"references": [
											"var.kms_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "kms",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.lambda",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_lambda_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.lambda_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.lambda_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.lambda[0].service_name",
											"data.aws_vpc_endpoint_service.lambda[0]",
											"data.aws_vpc_endpoint_service.lambda",
										],
									},
									"subnet_ids": {
										"references": [
											"var.lambda_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "lambda",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.logs",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_logs_endpoint",
									],
								},
								"expressions": {
									"policy": {
										"references": [
											"var.logs_endpoint_policy",
										],
									},
									"private_dns_enabled": {
										"references": [
											"var.logs_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.logs_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.logs[0].service_name",
											"data.aws_vpc_endpoint_service.logs[0]",
											"data.aws_vpc_endpoint_service.logs",
										],
									},
									"subnet_ids": {
										"references": [
											"var.logs_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "logs",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.monitoring",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_monitoring_endpoint",
									],
								},
								"expressions": {
									"policy": {
										"references": [
											"var.monitoring_endpoint_policy",
										],
									},
									"private_dns_enabled": {
										"references": [
											"var.monitoring_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.monitoring_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.monitoring[0].service_name",
											"data.aws_vpc_endpoint_service.monitoring[0]",
											"data.aws_vpc_endpoint_service.monitoring",
										],
									},
									"subnet_ids": {
										"references": [
											"var.monitoring_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "monitoring",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.qldb_session",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_qldb_session_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.qldb_session_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.qldb_session_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.qldb_session[0].service_name",
											"data.aws_vpc_endpoint_service.qldb_session[0]",
											"data.aws_vpc_endpoint_service.qldb_session",
										],
									},
									"subnet_ids": {
										"references": [
											"var.qldb_session_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "qldb_session",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.rds",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_rds_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.rds_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.rds_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.rds[0].service_name",
											"data.aws_vpc_endpoint_service.rds[0]",
											"data.aws_vpc_endpoint_service.rds",
										],
									},
									"subnet_ids": {
										"references": [
											"var.rds_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "rds",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.rekognition",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_rekognition_endpoint",
									],
								},
								"expressions": {
									"policy": {
										"references": [
											"var.rekognition_endpoint_policy",
										],
									},
									"private_dns_enabled": {
										"references": [
											"var.rekognition_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.rekognition_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.rekognition[0].service_name",
											"data.aws_vpc_endpoint_service.rekognition[0]",
											"data.aws_vpc_endpoint_service.rekognition",
										],
									},
									"subnet_ids": {
										"references": [
											"var.rekognition_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "rekognition",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.s3",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_s3_endpoint",
									],
								},
								"expressions": {
									"policy": {
										"references": [
											"var.s3_endpoint_policy",
										],
									},
									"private_dns_enabled": {
										"references": [
											"var.s3_endpoint_type",
											"var.s3_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.s3_endpoint_type",
											"var.s3_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.s3[0].service_name",
											"data.aws_vpc_endpoint_service.s3[0]",
											"data.aws_vpc_endpoint_service.s3",
										],
									},
									"subnet_ids": {
										"references": [
											"var.s3_endpoint_type",
											"var.s3_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"references": [
											"var.s3_endpoint_type",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "s3",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.sagemaker_api",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_sagemaker_api_endpoint",
									],
								},
								"expressions": {
									"policy": {
										"references": [
											"var.sagemaker_api_endpoint_policy",
										],
									},
									"private_dns_enabled": {
										"references": [
											"var.sagemaker_api_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.sagemaker_api_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.sagemaker_api[0].service_name",
											"data.aws_vpc_endpoint_service.sagemaker_api[0]",
											"data.aws_vpc_endpoint_service.sagemaker_api",
										],
									},
									"subnet_ids": {
										"references": [
											"var.sagemaker_api_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "sagemaker_api",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.sagemaker_notebook",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_sagemaker_notebook_endpoint",
									],
								},
								"expressions": {
									"policy": {
										"references": [
											"var.sagemaker_notebook_endpoint_policy",
										],
									},
									"private_dns_enabled": {
										"references": [
											"var.sagemaker_notebook_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.sagemaker_notebook_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.sagemaker_notebook[0].service_name",
											"data.aws_vpc_endpoint_service.sagemaker_notebook[0]",
											"data.aws_vpc_endpoint_service.sagemaker_notebook",
										],
									},
									"subnet_ids": {
										"references": [
											"var.sagemaker_notebook_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "sagemaker_notebook",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.sagemaker_runtime",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_sagemaker_runtime_endpoint",
									],
								},
								"expressions": {
									"policy": {
										"references": [
											"var.sagemaker_runtime_endpoint_policy",
										],
									},
									"private_dns_enabled": {
										"references": [
											"var.sagemaker_runtime_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.sagemaker_runtime_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.sagemaker_runtime[0].service_name",
											"data.aws_vpc_endpoint_service.sagemaker_runtime[0]",
											"data.aws_vpc_endpoint_service.sagemaker_runtime",
										],
									},
									"subnet_ids": {
										"references": [
											"var.sagemaker_runtime_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "sagemaker_runtime",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.secretsmanager",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_secretsmanager_endpoint",
									],
								},
								"expressions": {
									"policy": {
										"references": [
											"var.secretsmanager_endpoint_policy",
										],
									},
									"private_dns_enabled": {
										"references": [
											"var.secretsmanager_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.secretsmanager_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.secretsmanager[0].service_name",
											"data.aws_vpc_endpoint_service.secretsmanager[0]",
											"data.aws_vpc_endpoint_service.secretsmanager",
										],
									},
									"subnet_ids": {
										"references": [
											"var.secretsmanager_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "secretsmanager",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.servicecatalog",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_servicecatalog_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.servicecatalog_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.servicecatalog_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.servicecatalog[0].service_name",
											"data.aws_vpc_endpoint_service.servicecatalog[0]",
											"data.aws_vpc_endpoint_service.servicecatalog",
										],
									},
									"subnet_ids": {
										"references": [
											"var.servicecatalog_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "servicecatalog",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.ses",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_ses_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.ses_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.ses_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.ses[0].service_name",
											"data.aws_vpc_endpoint_service.ses[0]",
											"data.aws_vpc_endpoint_service.ses",
										],
									},
									"subnet_ids": {
										"references": [
											"var.ses_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "ses",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.sms",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_sms_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.sms_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.sms_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.sms[0].service_name",
											"data.aws_vpc_endpoint_service.sms[0]",
											"data.aws_vpc_endpoint_service.sms",
										],
									},
									"subnet_ids": {
										"references": [
											"var.sms_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "sms",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.sns",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_sns_endpoint",
									],
								},
								"expressions": {
									"policy": {
										"references": [
											"var.sns_endpoint_policy",
										],
									},
									"private_dns_enabled": {
										"references": [
											"var.sns_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.sns_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.sns[0].service_name",
											"data.aws_vpc_endpoint_service.sns[0]",
											"data.aws_vpc_endpoint_service.sns",
										],
									},
									"subnet_ids": {
										"references": [
											"var.sns_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "sns",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.sqs",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_sqs_endpoint",
									],
								},
								"expressions": {
									"policy": {
										"references": [
											"var.sqs_endpoint_policy",
										],
									},
									"private_dns_enabled": {
										"references": [
											"var.sqs_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.sqs_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.sqs[0].service_name",
											"data.aws_vpc_endpoint_service.sqs[0]",
											"data.aws_vpc_endpoint_service.sqs",
										],
									},
									"subnet_ids": {
										"references": [
											"var.sqs_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "sqs",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.ssm",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_ssm_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.ssm_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.ssm_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.ssm[0].service_name",
											"data.aws_vpc_endpoint_service.ssm[0]",
											"data.aws_vpc_endpoint_service.ssm",
										],
									},
									"subnet_ids": {
										"references": [
											"var.ssm_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "ssm",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.ssmmessages",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_ssmmessages_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.ssmmessages_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.ssmmessages_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.ssmmessages[0].service_name",
											"data.aws_vpc_endpoint_service.ssmmessages[0]",
											"data.aws_vpc_endpoint_service.ssmmessages",
										],
									},
									"subnet_ids": {
										"references": [
											"var.ssmmessages_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "ssmmessages",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.states",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_states_endpoint",
									],
								},
								"expressions": {
									"policy": {
										"references": [
											"var.states_endpoint_policy",
										],
									},
									"private_dns_enabled": {
										"references": [
											"var.states_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.states_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.states[0].service_name",
											"data.aws_vpc_endpoint_service.states[0]",
											"data.aws_vpc_endpoint_service.states",
										],
									},
									"subnet_ids": {
										"references": [
											"var.states_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "states",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.storagegateway",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_storagegateway_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.storagegateway_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.storagegateway_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.storagegateway[0].service_name",
											"data.aws_vpc_endpoint_service.storagegateway[0]",
											"data.aws_vpc_endpoint_service.storagegateway",
										],
									},
									"subnet_ids": {
										"references": [
											"var.storagegateway_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "storagegateway",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.sts",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_sts_endpoint",
									],
								},
								"expressions": {
									"policy": {
										"references": [
											"var.sts_endpoint_policy",
										],
									},
									"private_dns_enabled": {
										"references": [
											"var.sts_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.sts_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.sts[0].service_name",
											"data.aws_vpc_endpoint_service.sts[0]",
											"data.aws_vpc_endpoint_service.sts",
										],
									},
									"subnet_ids": {
										"references": [
											"var.sts_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "sts",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.textract",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_textract_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.textract_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.textract_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.textract[0].service_name",
											"data.aws_vpc_endpoint_service.textract[0]",
											"data.aws_vpc_endpoint_service.textract",
										],
									},
									"subnet_ids": {
										"references": [
											"var.textract_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "textract",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.transfer",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_transfer_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.transfer_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.transfer_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.transfer[0].service_name",
											"data.aws_vpc_endpoint_service.transfer[0]",
											"data.aws_vpc_endpoint_service.transfer",
										],
									},
									"subnet_ids": {
										"references": [
											"var.transfer_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "transfer",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.transferserver",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_transferserver_endpoint",
									],
								},
								"expressions": {
									"private_dns_enabled": {
										"references": [
											"var.transferserver_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.transferserver_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.transferserver[0].service_name",
											"data.aws_vpc_endpoint_service.transferserver[0]",
											"data.aws_vpc_endpoint_service.transferserver",
										],
									},
									"subnet_ids": {
										"references": [
											"var.transferserver_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "transferserver",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint.workspaces",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_workspaces_endpoint",
									],
								},
								"expressions": {
									"policy": {
										"references": [
											"var.workspaces_endpoint_policy",
										],
									},
									"private_dns_enabled": {
										"references": [
											"var.workspaces_endpoint_private_dns_enabled",
										],
									},
									"security_group_ids": {
										"references": [
											"var.workspaces_endpoint_security_group_ids",
										],
									},
									"service_name": {
										"references": [
											"data.aws_vpc_endpoint_service.workspaces[0].service_name",
											"data.aws_vpc_endpoint_service.workspaces[0]",
											"data.aws_vpc_endpoint_service.workspaces",
										],
									},
									"subnet_ids": {
										"references": [
											"var.workspaces_endpoint_subnet_ids",
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"local.vpce_tags",
										],
									},
									"vpc_endpoint_type": {
										"constant_value": "Interface",
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "workspaces",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint",
							},
							{
								"address": "aws_vpc_endpoint_route_table_association.intra_dynamodb",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_dynamodb_endpoint",
										"var.intra_subnets",
										"var.dynamodb_endpoint_type",
									],
								},
								"expressions": {
									"route_table_id": {
										"references": [
											"aws_route_table.intra",
										],
									},
									"vpc_endpoint_id": {
										"references": [
											"aws_vpc_endpoint.dynamodb[0].id",
											"aws_vpc_endpoint.dynamodb[0]",
											"aws_vpc_endpoint.dynamodb",
										],
									},
								},
								"mode":                "managed",
								"name":                "intra_dynamodb",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_route_table_association",
							},
							{
								"address": "aws_vpc_endpoint_route_table_association.intra_s3",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_s3_endpoint",
										"var.intra_subnets",
										"var.s3_endpoint_type",
									],
								},
								"expressions": {
									"route_table_id": {
										"references": [
											"aws_route_table.intra",
										],
									},
									"vpc_endpoint_id": {
										"references": [
											"aws_vpc_endpoint.s3[0].id",
											"aws_vpc_endpoint.s3[0]",
											"aws_vpc_endpoint.s3",
										],
									},
								},
								"mode":                "managed",
								"name":                "intra_s3",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_route_table_association",
							},
							{
								"address": "aws_vpc_endpoint_route_table_association.private_dynamodb",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_dynamodb_endpoint",
										"var.dynamodb_endpoint_type",
										"local.nat_gateway_count",
									],
								},
								"expressions": {
									"route_table_id": {
										"references": [
											"aws_route_table.private",
											"count.index",
										],
									},
									"vpc_endpoint_id": {
										"references": [
											"aws_vpc_endpoint.dynamodb[0].id",
											"aws_vpc_endpoint.dynamodb[0]",
											"aws_vpc_endpoint.dynamodb",
										],
									},
								},
								"mode":                "managed",
								"name":                "private_dynamodb",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_route_table_association",
							},
							{
								"address": "aws_vpc_endpoint_route_table_association.private_s3",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_s3_endpoint",
										"var.s3_endpoint_type",
										"local.nat_gateway_count",
									],
								},
								"expressions": {
									"route_table_id": {
										"references": [
											"aws_route_table.private",
											"count.index",
										],
									},
									"vpc_endpoint_id": {
										"references": [
											"aws_vpc_endpoint.s3[0].id",
											"aws_vpc_endpoint.s3[0]",
											"aws_vpc_endpoint.s3",
										],
									},
								},
								"mode":                "managed",
								"name":                "private_s3",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_route_table_association",
							},
							{
								"address": "aws_vpc_endpoint_route_table_association.public_dynamodb",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_dynamodb_endpoint",
										"var.public_subnets",
										"var.dynamodb_endpoint_type",
									],
								},
								"expressions": {
									"route_table_id": {
										"references": [
											"aws_route_table.public[0].id",
											"aws_route_table.public[0]",
											"aws_route_table.public",
										],
									},
									"vpc_endpoint_id": {
										"references": [
											"aws_vpc_endpoint.dynamodb[0].id",
											"aws_vpc_endpoint.dynamodb[0]",
											"aws_vpc_endpoint.dynamodb",
										],
									},
								},
								"mode":                "managed",
								"name":                "public_dynamodb",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_route_table_association",
							},
							{
								"address": "aws_vpc_endpoint_route_table_association.public_s3",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_s3_endpoint",
										"var.enable_public_s3_endpoint",
										"var.public_subnets",
										"var.s3_endpoint_type",
									],
								},
								"expressions": {
									"route_table_id": {
										"references": [
											"aws_route_table.public[0].id",
											"aws_route_table.public[0]",
											"aws_route_table.public",
										],
									},
									"vpc_endpoint_id": {
										"references": [
											"aws_vpc_endpoint.s3[0].id",
											"aws_vpc_endpoint.s3[0]",
											"aws_vpc_endpoint.s3",
										],
									},
								},
								"mode":                "managed",
								"name":                "public_s3",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_route_table_association",
							},
							{
								"address": "aws_vpc_ipv4_cidr_block_association.this",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.secondary_cidr_blocks",
										"var.secondary_cidr_blocks",
									],
								},
								"expressions": {
									"cidr_block": {
										"references": [
											"var.secondary_cidr_blocks",
											"count.index",
										],
									},
									"vpc_id": {
										"references": [
											"aws_vpc.this[0].id",
											"aws_vpc.this[0]",
											"aws_vpc.this",
										],
									},
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_ipv4_cidr_block_association",
							},
							{
								"address": "aws_vpn_gateway.this",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_vpn_gateway",
									],
								},
								"expressions": {
									"amazon_side_asn": {
										"references": [
											"var.amazon_side_asn",
										],
									},
									"availability_zone": {
										"references": [
											"var.vpn_gateway_az",
										],
									},
									"tags": {
										"references": [
											"var.name",
											"var.tags",
											"var.vpn_gateway_tags",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpn_gateway",
							},
							{
								"address": "aws_vpn_gateway_attachment.this",
								"count_expression": {
									"references": [
										"var.vpn_gateway_id",
									],
								},
								"expressions": {
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
									"vpn_gateway_id": {
										"references": [
											"var.vpn_gateway_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpn_gateway_attachment",
							},
							{
								"address": "aws_vpn_gateway_route_propagation.intra",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.propagate_intra_route_tables_vgw",
										"var.enable_vpn_gateway",
										"var.vpn_gateway_id",
										"var.intra_subnets",
									],
								},
								"expressions": {
									"route_table_id": {
										"references": [
											"aws_route_table.intra",
											"count.index",
										],
									},
									"vpn_gateway_id": {
										"references": [
											"aws_vpn_gateway.this",
											"aws_vpn_gateway_attachment.this",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "intra",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpn_gateway_route_propagation",
							},
							{
								"address": "aws_vpn_gateway_route_propagation.private",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.propagate_private_route_tables_vgw",
										"var.enable_vpn_gateway",
										"var.vpn_gateway_id",
										"var.private_subnets",
									],
								},
								"expressions": {
									"route_table_id": {
										"references": [
											"aws_route_table.private",
											"count.index",
										],
									},
									"vpn_gateway_id": {
										"references": [
											"aws_vpn_gateway.this",
											"aws_vpn_gateway_attachment.this",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "private",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpn_gateway_route_propagation",
							},
							{
								"address": "aws_vpn_gateway_route_propagation.public",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.propagate_public_route_tables_vgw",
										"var.enable_vpn_gateway",
										"var.vpn_gateway_id",
									],
								},
								"expressions": {
									"route_table_id": {
										"references": [
											"aws_route_table.public",
											"count.index",
										],
									},
									"vpn_gateway_id": {
										"references": [
											"aws_vpn_gateway.this",
											"aws_vpn_gateway_attachment.this",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "public",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpn_gateway_route_propagation",
							},
							{
								"address": "data.aws_iam_policy_document.flow_log_cloudwatch_assume_role",
								"count_expression": {
									"references": [
										"local.create_flow_log_cloudwatch_iam_role",
									],
								},
								"expressions": {
									"statement": [
										{
											"actions": {
												"constant_value": [
													"sts:AssumeRole",
												],
											},
											"effect": {
												"constant_value": "Allow",
											},
											"principals": [
												{
													"identifiers": {
														"constant_value": [
															"vpc-flow-logs.amazonaws.com",
														],
													},
													"type": {
														"constant_value": "Service",
													},
												},
											],
										},
									],
								},
								"mode":                "data",
								"name":                "flow_log_cloudwatch_assume_role",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_iam_policy_document",
							},
							{
								"address": "data.aws_iam_policy_document.vpc_flow_log_cloudwatch",
								"count_expression": {
									"references": [
										"local.create_flow_log_cloudwatch_iam_role",
									],
								},
								"expressions": {
									"statement": [
										{
											"actions": {
												"constant_value": [
													"logs:CreateLogStream",
													"logs:PutLogEvents",
													"logs:DescribeLogGroups",
													"logs:DescribeLogStreams",
												],
											},
											"effect": {
												"constant_value": "Allow",
											},
											"resources": {
												"constant_value": [
													"*",
												],
											},
											"sid": {
												"constant_value": "AWSVPCFlowLogsPushToCloudWatch",
											},
										},
									],
								},
								"mode":                "data",
								"name":                "vpc_flow_log_cloudwatch",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_iam_policy_document",
							},
							{
								"address": "data.aws_vpc_endpoint_service.access_analyzer",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_access_analyzer_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "access-analyzer",
									},
								},
								"mode":                "data",
								"name":                "access_analyzer",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.acm_pca",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_acm_pca_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "acm-pca",
									},
								},
								"mode":                "data",
								"name":                "acm_pca",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.apigw",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_apigw_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "execute-api",
									},
								},
								"mode":                "data",
								"name":                "apigw",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.appmesh_envoy_management",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_appmesh_envoy_management_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "appmesh-envoy-management",
									},
								},
								"mode":                "data",
								"name":                "appmesh_envoy_management",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.appstream_api",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_appstream_streaming_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "appstream.api",
									},
								},
								"mode":                "data",
								"name":                "appstream_api",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.appstream_streaming",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_appstream_streaming_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "appstream.streaming",
									},
								},
								"mode":                "data",
								"name":                "appstream_streaming",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.athena",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_athena_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "athena",
									},
								},
								"mode":                "data",
								"name":                "athena",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.auto_scaling_plans",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_auto_scaling_plans_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "autoscaling-plans",
									},
								},
								"mode":                "data",
								"name":                "auto_scaling_plans",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.cloud_directory",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_cloud_directory_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "clouddirectory",
									},
								},
								"mode":                "data",
								"name":                "cloud_directory",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.cloudformation",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_cloudformation_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "cloudformation",
									},
								},
								"mode":                "data",
								"name":                "cloudformation",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.cloudtrail",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_cloudtrail_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "cloudtrail",
									},
								},
								"mode":                "data",
								"name":                "cloudtrail",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.codeartifact_api",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_codeartifact_api_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "codeartifact.api",
									},
								},
								"mode":                "data",
								"name":                "codeartifact_api",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.codeartifact_repositories",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_codeartifact_repositories_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "codeartifact.repositories",
									},
								},
								"mode":                "data",
								"name":                "codeartifact_repositories",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.codebuild",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_codebuild_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "codebuild",
									},
								},
								"mode":                "data",
								"name":                "codebuild",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.codecommit",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_codecommit_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "codecommit",
									},
								},
								"mode":                "data",
								"name":                "codecommit",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.codedeploy",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_codedeploy_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "codedeploy",
									},
								},
								"mode":                "data",
								"name":                "codedeploy",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.codedeploy_commands_secure",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_codedeploy_commands_secure_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "codedeploy-commands-secure",
									},
								},
								"mode":                "data",
								"name":                "codedeploy_commands_secure",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.codepipeline",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_codepipeline_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "codepipeline",
									},
								},
								"mode":                "data",
								"name":                "codepipeline",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.config",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_config_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "config",
									},
								},
								"mode":                "data",
								"name":                "config",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.datasync",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_datasync_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "datasync",
									},
								},
								"mode":                "data",
								"name":                "datasync",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.dms",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_dms_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "dms",
									},
								},
								"mode":                "data",
								"name":                "dms",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.dynamodb",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_dynamodb_endpoint",
									],
								},
								"expressions": {
									"filter": [
										{
											"name": {
												"constant_value": "service-type",
											},
											"values": {
												"references": [
													"var.dynamodb_endpoint_type",
												],
											},
										},
									],
									"service": {
										"constant_value": "dynamodb",
									},
								},
								"mode":                "data",
								"name":                "dynamodb",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.ebs",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_ebs_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "ebs",
									},
								},
								"mode":                "data",
								"name":                "ebs",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.ec2",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_ec2_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "ec2",
									},
								},
								"mode":                "data",
								"name":                "ec2",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.ec2_autoscaling",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_ec2_autoscaling_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "autoscaling",
									},
								},
								"mode":                "data",
								"name":                "ec2_autoscaling",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.ec2messages",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_ec2messages_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "ec2messages",
									},
								},
								"mode":                "data",
								"name":                "ec2messages",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.ecr_api",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_ecr_api_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "ecr.api",
									},
								},
								"mode":                "data",
								"name":                "ecr_api",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.ecr_dkr",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_ecr_dkr_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "ecr.dkr",
									},
								},
								"mode":                "data",
								"name":                "ecr_dkr",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.ecs",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_ecs_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "ecs",
									},
								},
								"mode":                "data",
								"name":                "ecs",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.ecs_agent",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_ecs_agent_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "ecs-agent",
									},
								},
								"mode":                "data",
								"name":                "ecs_agent",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.ecs_telemetry",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_ecs_telemetry_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "ecs-telemetry",
									},
								},
								"mode":                "data",
								"name":                "ecs_telemetry",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.efs",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_efs_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "elasticfilesystem",
									},
								},
								"mode":                "data",
								"name":                "efs",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.elastic_inference_runtime",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_elastic_inference_runtime_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "elastic-inference.runtime",
									},
								},
								"mode":                "data",
								"name":                "elastic_inference_runtime",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.elasticbeanstalk",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_elasticbeanstalk_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "elasticbeanstalk",
									},
								},
								"mode":                "data",
								"name":                "elasticbeanstalk",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.elasticbeanstalk_health",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_elasticbeanstalk_health_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "elasticbeanstalk-health",
									},
								},
								"mode":                "data",
								"name":                "elasticbeanstalk_health",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.elasticloadbalancing",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_elasticloadbalancing_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "elasticloadbalancing",
									},
								},
								"mode":                "data",
								"name":                "elasticloadbalancing",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.emr",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_emr_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "elasticmapreduce",
									},
								},
								"mode":                "data",
								"name":                "emr",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.events",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_events_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "events",
									},
								},
								"mode":                "data",
								"name":                "events",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.git_codecommit",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_git_codecommit_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "git-codecommit",
									},
								},
								"mode":                "data",
								"name":                "git_codecommit",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.glue",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_glue_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "glue",
									},
								},
								"mode":                "data",
								"name":                "glue",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.kinesis_firehose",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_kinesis_firehose_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "kinesis-firehose",
									},
								},
								"mode":                "data",
								"name":                "kinesis_firehose",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.kinesis_streams",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_kinesis_streams_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "kinesis-streams",
									},
								},
								"mode":                "data",
								"name":                "kinesis_streams",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.kms",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_kms_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "kms",
									},
								},
								"mode":                "data",
								"name":                "kms",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.lambda",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_lambda_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "lambda",
									},
								},
								"mode":                "data",
								"name":                "lambda",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.logs",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_logs_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "logs",
									},
								},
								"mode":                "data",
								"name":                "logs",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.monitoring",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_monitoring_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "monitoring",
									},
								},
								"mode":                "data",
								"name":                "monitoring",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.qldb_session",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_qldb_session_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "qldb.session",
									},
								},
								"mode":                "data",
								"name":                "qldb_session",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.rds",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_rds_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "rds",
									},
								},
								"mode":                "data",
								"name":                "rds",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.rekognition",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_rekognition_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "rekognition",
									},
								},
								"mode":                "data",
								"name":                "rekognition",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.s3",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_s3_endpoint",
									],
								},
								"expressions": {
									"filter": [
										{
											"name": {
												"constant_value": "service-type",
											},
											"values": {
												"references": [
													"var.s3_endpoint_type",
												],
											},
										},
									],
									"service": {
										"constant_value": "s3",
									},
								},
								"mode":                "data",
								"name":                "s3",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.sagemaker_api",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_sagemaker_api_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "sagemaker.api",
									},
								},
								"mode":                "data",
								"name":                "sagemaker_api",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.sagemaker_notebook",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_sagemaker_notebook_endpoint",
									],
								},
								"expressions": {
									"service_name": {
										"references": [
											"var.sagemaker_notebook_endpoint_region",
										],
									},
								},
								"mode":                "data",
								"name":                "sagemaker_notebook",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.sagemaker_runtime",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_sagemaker_runtime_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "sagemaker.runtime",
									},
								},
								"mode":                "data",
								"name":                "sagemaker_runtime",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.secretsmanager",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_secretsmanager_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "secretsmanager",
									},
								},
								"mode":                "data",
								"name":                "secretsmanager",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.servicecatalog",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_servicecatalog_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "servicecatalog",
									},
								},
								"mode":                "data",
								"name":                "servicecatalog",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.ses",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_ses_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "email-smtp",
									},
								},
								"mode":                "data",
								"name":                "ses",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.sms",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_sms_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "sms",
									},
								},
								"mode":                "data",
								"name":                "sms",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.sns",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_sns_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "sns",
									},
								},
								"mode":                "data",
								"name":                "sns",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.sqs",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_sqs_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "sqs",
									},
								},
								"mode":                "data",
								"name":                "sqs",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.ssm",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_ssm_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "ssm",
									},
								},
								"mode":                "data",
								"name":                "ssm",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.ssmmessages",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_ssmmessages_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "ssmmessages",
									},
								},
								"mode":                "data",
								"name":                "ssmmessages",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.states",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_states_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "states",
									},
								},
								"mode":                "data",
								"name":                "states",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.storagegateway",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_storagegateway_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "storagegateway",
									},
								},
								"mode":                "data",
								"name":                "storagegateway",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.sts",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_sts_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "sts",
									},
								},
								"mode":                "data",
								"name":                "sts",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.textract",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_textract_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "textract",
									},
								},
								"mode":                "data",
								"name":                "textract",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.transfer",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_transfer_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "transfer",
									},
								},
								"mode":                "data",
								"name":                "transfer",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.transferserver",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_transferserver_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "transfer.server",
									},
								},
								"mode":                "data",
								"name":                "transferserver",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
							{
								"address": "data.aws_vpc_endpoint_service.workspaces",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_workspaces_endpoint",
									],
								},
								"expressions": {
									"service": {
										"constant_value": "workspaces",
									},
								},
								"mode":                "data",
								"name":                "workspaces",
								"provider_config_key": "vpc:aws",
								"schema_version":      0,
								"type":                "aws_vpc_endpoint_service",
							},
						],
						"variables": {
							"access_analyzer_endpoint_policy": {
								"description": "A policy to attach to the endpoint that controls access to the service. Defaults to full access",
							},
							"access_analyzer_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for Access Analyzer endpoint",
							},
							"access_analyzer_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for Access Analyzer endpoint",
							},
							"access_analyzer_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for Access Analyzer endpoint. Only a single subnet within an AZ is supported. Ifomitted, private subnets will be used.",
							},
							"acm_pca_endpoint_policy": {
								"description": "A policy to attach to the endpoint that controls access to the service. Defaults to full access",
							},
							"acm_pca_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for ACM PCA endpoint",
							},
							"acm_pca_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for ACM PCA endpoint",
							},
							"acm_pca_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for ACM PCA endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"amazon_side_asn": {
								"default":     "64512",
								"description": "The Autonomous System Number (ASN) for the Amazon side of the gateway. By default the virtual private gateway is created with the current default Amazon ASN.",
							},
							"apigw_endpoint_policy": {
								"description": "A policy to attach to the endpoint that controls access to the service. Defaults to full access",
							},
							"apigw_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for API GW endpoint",
							},
							"apigw_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for API GW  endpoint",
							},
							"apigw_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for API GW endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"appmesh_envoy_management_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for AppMesh endpoint",
							},
							"appmesh_envoy_management_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for AppMesh endpoint",
							},
							"appmesh_envoy_management_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for AppMesh endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"appstream_api_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for AppStream API endpoint",
							},
							"appstream_api_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for AppStream API endpoint",
							},
							"appstream_api_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for AppStream API endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"appstream_streaming_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for AppStream Streaming endpoint",
							},
							"appstream_streaming_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for AppStream Streaming endpoint",
							},
							"appstream_streaming_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for AppStream Streaming endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"assign_ipv6_address_on_creation": {
								"default":     false,
								"description": "Assign IPv6 address on subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch",
							},
							"athena_endpoint_policy": {
								"description": "A policy to attach to the endpoint that controls access to the service. Defaults to full access",
							},
							"athena_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for Athena endpoint",
							},
							"athena_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for Athena endpoint",
							},
							"athena_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for Athena endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"auto_scaling_plans_endpoint_policy": {
								"description": "A policy to attach to the endpoint that controls access to the service. Defaults to full access",
							},
							"auto_scaling_plans_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for Auto Scaling Plans endpoint",
							},
							"auto_scaling_plans_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for Auto Scaling Plans endpoint",
							},
							"auto_scaling_plans_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for Auto Scaling Plans endpoint. Only a single subnet within an AZ is supported. Ifomitted, private subnets will be used.",
							},
							"azs": {
								"default":     [],
								"description": "A list of availability zones names or ids in the region",
							},
							"cidr": {
								"default":     "0.0.0.0/0",
								"description": "The CIDR block for the VPC. Default value is a valid CIDR, but not acceptable by AWS and should be overridden",
							},
							"cloud_directory_endpoint_policy": {
								"description": "A policy to attach to the endpoint that controls access to the service. Defaults to full access",
							},
							"cloud_directory_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for Cloud Directory endpoint",
							},
							"cloud_directory_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for Cloud Directory endpoint",
							},
							"cloud_directory_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for Cloud Directory endpoint. Only a single subnet within an AZ is supported. Ifomitted, private subnets will be used.",
							},
							"cloudformation_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for Cloudformation endpoint",
							},
							"cloudformation_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for Cloudformation endpoint",
							},
							"cloudformation_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for Cloudformation endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"cloudtrail_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for CloudTrail endpoint",
							},
							"cloudtrail_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for CloudTrail endpoint",
							},
							"cloudtrail_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for CloudTrail endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"codeartifact_api_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for Codeartifact API endpoint",
							},
							"codeartifact_api_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for Codeartifact API endpoint",
							},
							"codeartifact_api_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for Codeartifact API endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"codeartifact_repositories_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for Codeartifact repositories endpoint",
							},
							"codeartifact_repositories_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for Codeartifact repositories endpoint",
							},
							"codeartifact_repositories_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for Codeartifact repositories endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"codebuild_endpoint_policy": {
								"description": "A policy to attach to the endpoint that controls access to the service. Defaults to full access",
							},
							"codebuild_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for Codebuild endpoint",
							},
							"codebuild_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for Codebuild endpoint",
							},
							"codebuild_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for Codebuilt endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"codecommit_endpoint_policy": {
								"description": "A policy to attach to the endpoint that controls access to the service. Defaults to full access",
							},
							"codecommit_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for Codecommit endpoint",
							},
							"codecommit_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for Codecommit endpoint",
							},
							"codecommit_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for Codecommit endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"codedeploy_commands_secure_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for CodeDeploy Commands Secure endpoint",
							},
							"codedeploy_commands_secure_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for CodeDeploy Commands Secure endpoint",
							},
							"codedeploy_commands_secure_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for CodeDeploy Commands Secure endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"codedeploy_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for CodeDeploy endpoint",
							},
							"codedeploy_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for CodeDeploy endpoint",
							},
							"codedeploy_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for CodeDeploy endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"codepipeline_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for CodePipeline endpoint",
							},
							"codepipeline_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for CodePipeline endpoint",
							},
							"codepipeline_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for CodePipeline endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"config_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for config endpoint",
							},
							"config_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for config endpoint",
							},
							"config_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for config endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"create_database_internet_gateway_route": {
								"default":     false,
								"description": "Controls if an internet gateway route for public database access should be created",
							},
							"create_database_nat_gateway_route": {
								"default":     false,
								"description": "Controls if a nat gateway route should be created to give internet access to the database subnets",
							},
							"create_database_subnet_group": {
								"default":     true,
								"description": "Controls if database subnet group should be created (n.b. database_subnets must also be set)",
							},
							"create_database_subnet_route_table": {
								"default":     false,
								"description": "Controls if separate route table for database should be created",
							},
							"create_egress_only_igw": {
								"default":     true,
								"description": "Controls if an Egress Only Internet Gateway is created and its related routes.",
							},
							"create_elasticache_subnet_group": {
								"default":     true,
								"description": "Controls if elasticache subnet group should be created",
							},
							"create_elasticache_subnet_route_table": {
								"default":     false,
								"description": "Controls if separate route table for elasticache should be created",
							},
							"create_flow_log_cloudwatch_iam_role": {
								"default":     false,
								"description": "Whether to create IAM role for VPC Flow Logs",
							},
							"create_flow_log_cloudwatch_log_group": {
								"default":     false,
								"description": "Whether to create CloudWatch log group for VPC Flow Logs",
							},
							"create_igw": {
								"default":     true,
								"description": "Controls if an Internet Gateway is created for public subnets and the related routes that connect them.",
							},
							"create_redshift_subnet_group": {
								"default":     true,
								"description": "Controls if redshift subnet group should be created",
							},
							"create_redshift_subnet_route_table": {
								"default":     false,
								"description": "Controls if separate route table for redshift should be created",
							},
							"create_vpc": {
								"default":     true,
								"description": "Controls if VPC should be created (it affects almost all resources)",
							},
							"customer_gateway_tags": {
								"default":     {},
								"description": "Additional tags for the Customer Gateway",
							},
							"customer_gateways": {
								"default":     {},
								"description": "Maps of Customer Gateway's attributes (BGP ASN and Gateway's Internet-routable external IP address)",
							},
							"database_acl_tags": {
								"default":     {},
								"description": "Additional tags for the database subnets network ACL",
							},
							"database_dedicated_network_acl": {
								"default":     false,
								"description": "Whether to use dedicated network ACL (not default) and custom rules for database subnets",
							},
							"database_inbound_acl_rules": {
								"default": [
									{
										"cidr_block":  "0.0.0.0/0",
										"from_port":   "0",
										"protocol":    "-1",
										"rule_action": "allow",
										"rule_number": "100",
										"to_port":     "0",
									},
								],
								"description": "Database subnets inbound network ACL rules",
							},
							"database_outbound_acl_rules": {
								"default": [
									{
										"cidr_block":  "0.0.0.0/0",
										"from_port":   "0",
										"protocol":    "-1",
										"rule_action": "allow",
										"rule_number": "100",
										"to_port":     "0",
									},
								],
								"description": "Database subnets outbound network ACL rules",
							},
							"database_route_table_tags": {
								"default":     {},
								"description": "Additional tags for the database route tables",
							},
							"database_subnet_assign_ipv6_address_on_creation": {
								"description": "Assign IPv6 address on database subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch",
							},
							"database_subnet_group_tags": {
								"default":     {},
								"description": "Additional tags for the database subnet group",
							},
							"database_subnet_ipv6_prefixes": {
								"default":     [],
								"description": "Assigns IPv6 database subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list",
							},
							"database_subnet_suffix": {
								"default":     "db",
								"description": "Suffix to append to database subnets name",
							},
							"database_subnet_tags": {
								"default":     {},
								"description": "Additional tags for the database subnets",
							},
							"database_subnets": {
								"default":     [],
								"description": "A list of database subnets",
							},
							"datasync_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for Data Sync endpoint",
							},
							"datasync_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for Data Sync endpoint",
							},
							"datasync_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for Data Sync endpoint. Only a single subnet within an AZ is supported. Ifomitted, private subnets will be used.",
							},
							"default_network_acl_egress": {
								"default": [
									{
										"action":     "allow",
										"cidr_block": "0.0.0.0/0",
										"from_port":  "0",
										"protocol":   "-1",
										"rule_no":    "100",
										"to_port":    "0",
									},
									{
										"action":          "allow",
										"from_port":       "0",
										"ipv6_cidr_block": "::/0",
										"protocol":        "-1",
										"rule_no":         "101",
										"to_port":         "0",
									},
								],
								"description": "List of maps of egress rules to set on the Default Network ACL",
							},
							"default_network_acl_ingress": {
								"default": [
									{
										"action":     "allow",
										"cidr_block": "0.0.0.0/0",
										"from_port":  "0",
										"protocol":   "-1",
										"rule_no":    "100",
										"to_port":    "0",
									},
									{
										"action":          "allow",
										"from_port":       "0",
										"ipv6_cidr_block": "::/0",
										"protocol":        "-1",
										"rule_no":         "101",
										"to_port":         "0",
									},
								],
								"description": "List of maps of ingress rules to set on the Default Network ACL",
							},
							"default_network_acl_name": {
								"default":     "",
								"description": "Name to be used on the Default Network ACL",
							},
							"default_network_acl_tags": {
								"default":     {},
								"description": "Additional tags for the Default Network ACL",
							},
							"default_route_table_propagating_vgws": {
								"default":     [],
								"description": "List of virtual gateways for propagation",
							},
							"default_route_table_routes": {
								"default":     [],
								"description": "Configuration block of routes. See https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/default_route_table#route",
							},
							"default_route_table_tags": {
								"default":     {},
								"description": "Additional tags for the default route table",
							},
							"default_security_group_egress": {
								"description": "List of maps of egress rules to set on the default security group",
							},
							"default_security_group_ingress": {
								"description": "List of maps of ingress rules to set on the default security group",
							},
							"default_security_group_name": {
								"default":     "default",
								"description": "Name to be used on the default security group",
							},
							"default_security_group_tags": {
								"default":     {},
								"description": "Additional tags for the default security group",
							},
							"default_vpc_enable_classiclink": {
								"default":     false,
								"description": "Should be true to enable ClassicLink in the Default VPC",
							},
							"default_vpc_enable_dns_hostnames": {
								"default":     false,
								"description": "Should be true to enable DNS hostnames in the Default VPC",
							},
							"default_vpc_enable_dns_support": {
								"default":     true,
								"description": "Should be true to enable DNS support in the Default VPC",
							},
							"default_vpc_name": {
								"default":     "",
								"description": "Name to be used on the Default VPC",
							},
							"default_vpc_tags": {
								"default":     {},
								"description": "Additional tags for the Default VPC",
							},
							"dhcp_options_domain_name": {
								"default":     "",
								"description": "Specifies DNS name for DHCP options set (requires enable_dhcp_options set to true)",
							},
							"dhcp_options_domain_name_servers": {
								"default": [
									"AmazonProvidedDNS",
								],
								"description": "Specify a list of DNS server addresses for DHCP options set, default to AWS provided (requires enable_dhcp_options set to true)",
							},
							"dhcp_options_netbios_name_servers": {
								"default":     [],
								"description": "Specify a list of netbios servers for DHCP options set (requires enable_dhcp_options set to true)",
							},
							"dhcp_options_netbios_node_type": {
								"default":     "",
								"description": "Specify netbios node_type for DHCP options set (requires enable_dhcp_options set to true)",
							},
							"dhcp_options_ntp_servers": {
								"default":     [],
								"description": "Specify a list of NTP servers for DHCP options set (requires enable_dhcp_options set to true)",
							},
							"dhcp_options_tags": {
								"default":     {},
								"description": "Additional tags for the DHCP option set (requires enable_dhcp_options set to true)",
							},
							"dms_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for DMS endpoint",
							},
							"dms_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for DMS endpoint",
							},
							"dms_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for DMS endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"dynamodb_endpoint_policy": {
								"description": "A policy to attach to the endpoint that controls access to the service. Defaults to full access",
							},
							"dynamodb_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for DynamoDB interface endpoint",
							},
							"dynamodb_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for DynamoDB interface endpoint",
							},
							"dynamodb_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for DynamoDB interface endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"dynamodb_endpoint_type": {
								"default":     "Gateway",
								"description": "DynamoDB VPC endpoint type. Note - DynamoDB Interface type support is not yet available",
							},
							"ebs_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for EBS endpoint",
							},
							"ebs_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for EBS endpoint",
							},
							"ebs_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for EBS endpoint. Only a single subnet within an AZ is supported. Ifomitted, private subnets will be used.",
							},
							"ec2_autoscaling_endpoint_policy": {
								"description": "A policy to attach to the endpoint that controls access to the service. Defaults to full access",
							},
							"ec2_autoscaling_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for EC2 Autoscaling endpoint",
							},
							"ec2_autoscaling_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for EC2 Autoscaling endpoint",
							},
							"ec2_autoscaling_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for EC2 Autoscaling endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"ec2_endpoint_policy": {
								"description": "A policy to attach to the endpoint that controls access to the service. Defaults to full access",
							},
							"ec2_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for EC2 endpoint",
							},
							"ec2_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for EC2 endpoint",
							},
							"ec2_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for EC2 endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"ec2messages_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for EC2MESSAGES endpoint",
							},
							"ec2messages_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for EC2MESSAGES endpoint",
							},
							"ec2messages_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for EC2MESSAGES endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"ecr_api_endpoint_policy": {
								"description": "A policy to attach to the endpoint that controls access to the service. Defaults to full access",
							},
							"ecr_api_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for ECR API endpoint",
							},
							"ecr_api_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for ECR API endpoint",
							},
							"ecr_api_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for ECR api endpoint. If omitted, private subnets will be used.",
							},
							"ecr_dkr_endpoint_policy": {
								"description": "A policy to attach to the endpoint that controls access to the service. Defaults to full access",
							},
							"ecr_dkr_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for ECR DKR endpoint",
							},
							"ecr_dkr_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for ECR DKR endpoint",
							},
							"ecr_dkr_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for ECR dkr endpoint. If omitted, private subnets will be used.",
							},
							"ecs_agent_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for ECS Agent endpoint",
							},
							"ecs_agent_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for ECS Agent endpoint",
							},
							"ecs_agent_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for ECS Agent endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"ecs_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for ECS endpoint",
							},
							"ecs_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for ECS endpoint",
							},
							"ecs_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for ECS endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"ecs_telemetry_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for ECS Telemetry endpoint",
							},
							"ecs_telemetry_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for ECS Telemetry endpoint",
							},
							"ecs_telemetry_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for ECS Telemetry endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"efs_endpoint_policy": {
								"description": "A policy to attach to the endpoint that controls access to the service. Defaults to full access",
							},
							"efs_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for EFS endpoint",
							},
							"efs_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for EFS endpoint",
							},
							"efs_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for EFS endpoint. Only a single subnet within an AZ is supported. Ifomitted, private subnets will be used.",
							},
							"elastic_inference_runtime_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for Elastic Inference Runtime endpoint",
							},
							"elastic_inference_runtime_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for Elastic Inference Runtime endpoint",
							},
							"elastic_inference_runtime_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for Elastic Inference Runtime endpoint. Only a single subnet within an AZ is supported. Ifomitted, private subnets will be used.",
							},
							"elasticache_acl_tags": {
								"default":     {},
								"description": "Additional tags for the elasticache subnets network ACL",
							},
							"elasticache_dedicated_network_acl": {
								"default":     false,
								"description": "Whether to use dedicated network ACL (not default) and custom rules for elasticache subnets",
							},
							"elasticache_inbound_acl_rules": {
								"default": [
									{
										"cidr_block":  "0.0.0.0/0",
										"from_port":   "0",
										"protocol":    "-1",
										"rule_action": "allow",
										"rule_number": "100",
										"to_port":     "0",
									},
								],
								"description": "Elasticache subnets inbound network ACL rules",
							},
							"elasticache_outbound_acl_rules": {
								"default": [
									{
										"cidr_block":  "0.0.0.0/0",
										"from_port":   "0",
										"protocol":    "-1",
										"rule_action": "allow",
										"rule_number": "100",
										"to_port":     "0",
									},
								],
								"description": "Elasticache subnets outbound network ACL rules",
							},
							"elasticache_route_table_tags": {
								"default":     {},
								"description": "Additional tags for the elasticache route tables",
							},
							"elasticache_subnet_assign_ipv6_address_on_creation": {
								"description": "Assign IPv6 address on elasticache subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch",
							},
							"elasticache_subnet_ipv6_prefixes": {
								"default":     [],
								"description": "Assigns IPv6 elasticache subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list",
							},
							"elasticache_subnet_suffix": {
								"default":     "elasticache",
								"description": "Suffix to append to elasticache subnets name",
							},
							"elasticache_subnet_tags": {
								"default":     {},
								"description": "Additional tags for the elasticache subnets",
							},
							"elasticache_subnets": {
								"default":     [],
								"description": "A list of elasticache subnets",
							},
							"elasticbeanstalk_endpoint_policy": {
								"description": "A policy to attach to the endpoint that controls access to the service. Defaults to full access",
							},
							"elasticbeanstalk_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for Elastic Beanstalk endpoint",
							},
							"elasticbeanstalk_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for Elastic Beanstalk endpoint",
							},
							"elasticbeanstalk_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for Elastic Beanstalk endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"elasticbeanstalk_health_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for Elastic Beanstalk Health endpoint",
							},
							"elasticbeanstalk_health_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for Elastic Beanstalk Health endpoint",
							},
							"elasticbeanstalk_health_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for Elastic Beanstalk Health endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"elasticloadbalancing_endpoint_policy": {
								"description": "A policy to attach to the endpoint that controls access to the service. Defaults to full access",
							},
							"elasticloadbalancing_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for Elastic Load Balancing endpoint",
							},
							"elasticloadbalancing_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for Elastic Load Balancing endpoint",
							},
							"elasticloadbalancing_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for Elastic Load Balancing endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"emr_endpoint_policy": {
								"description": "A policy to attach to the endpoint that controls access to the service. Defaults to full access",
							},
							"emr_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for EMR endpoint",
							},
							"emr_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for EMR endpoint",
							},
							"emr_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for EMR endpoint. Only a single subnet within an AZ is supported. Ifomitted, private subnets will be used.",
							},
							"enable_access_analyzer_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision an Access Analyzer endpoint to the VPC",
							},
							"enable_acm_pca_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision an ACM PCA endpoint to the VPC",
							},
							"enable_apigw_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision an api gateway endpoint to the VPC",
							},
							"enable_appmesh_envoy_management_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision a AppMesh endpoint to the VPC",
							},
							"enable_appstream_api_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision a AppStream API endpoint to the VPC",
							},
							"enable_appstream_streaming_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision a AppStream Streaming endpoint to the VPC",
							},
							"enable_athena_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision a Athena endpoint to the VPC",
							},
							"enable_auto_scaling_plans_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision an Auto Scaling Plans endpoint to the VPC",
							},
							"enable_classiclink": {
								"description": "Should be true to enable ClassicLink for the VPC. Only valid in regions and accounts that support EC2 Classic.",
							},
							"enable_classiclink_dns_support": {
								"description": "Should be true to enable ClassicLink DNS Support for the VPC. Only valid in regions and accounts that support EC2 Classic.",
							},
							"enable_cloud_directory_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision an Cloud Directory endpoint to the VPC",
							},
							"enable_cloudformation_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision a Cloudformation endpoint to the VPC",
							},
							"enable_cloudtrail_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision a CloudTrail endpoint to the VPC",
							},
							"enable_codeartifact_api_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision an Codeartifact API endpoint to the VPC",
							},
							"enable_codeartifact_repositories_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision an Codeartifact repositories endpoint to the VPC",
							},
							"enable_codebuild_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision an Codebuild endpoint to the VPC",
							},
							"enable_codecommit_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision an Codecommit endpoint to the VPC",
							},
							"enable_codedeploy_commands_secure_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision an CodeDeploy Commands Secure endpoint to the VPC",
							},
							"enable_codedeploy_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision an CodeDeploy endpoint to the VPC",
							},
							"enable_codepipeline_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision a CodePipeline endpoint to the VPC",
							},
							"enable_config_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision an config endpoint to the VPC",
							},
							"enable_datasync_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision an Data Sync endpoint to the VPC",
							},
							"enable_dhcp_options": {
								"default":     false,
								"description": "Should be true if you want to specify a DHCP options set with a custom domain name, DNS servers, NTP servers, netbios servers, and/or netbios server type",
							},
							"enable_dms_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision a DMS endpoint to the VPC",
							},
							"enable_dns_hostnames": {
								"default":     false,
								"description": "Should be true to enable DNS hostnames in the VPC",
							},
							"enable_dns_support": {
								"default":     true,
								"description": "Should be true to enable DNS support in the VPC",
							},
							"enable_dynamodb_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision a DynamoDB endpoint to the VPC",
							},
							"enable_ebs_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision an EBS endpoint to the VPC",
							},
							"enable_ec2_autoscaling_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision an EC2 Autoscaling endpoint to the VPC",
							},
							"enable_ec2_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision an EC2 endpoint to the VPC",
							},
							"enable_ec2messages_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision an EC2MESSAGES endpoint to the VPC",
							},
							"enable_ecr_api_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision an ecr api endpoint to the VPC",
							},
							"enable_ecr_dkr_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision an ecr dkr endpoint to the VPC",
							},
							"enable_ecs_agent_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision a ECS Agent endpoint to the VPC",
							},
							"enable_ecs_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision a ECS endpoint to the VPC",
							},
							"enable_ecs_telemetry_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision a ECS Telemetry endpoint to the VPC",
							},
							"enable_efs_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision an EFS endpoint to the VPC",
							},
							"enable_elastic_inference_runtime_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision an Elastic Inference Runtime endpoint to the VPC",
							},
							"enable_elasticbeanstalk_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision a Elastic Beanstalk endpoint to the VPC",
							},
							"enable_elasticbeanstalk_health_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision a Elastic Beanstalk Health endpoint to the VPC",
							},
							"enable_elasticloadbalancing_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision a Elastic Load Balancing endpoint to the VPC",
							},
							"enable_emr_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision an EMR endpoint to the VPC",
							},
							"enable_events_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision a CloudWatch Events endpoint to the VPC",
							},
							"enable_flow_log": {
								"default":     false,
								"description": "Whether or not to enable VPC Flow Logs",
							},
							"enable_git_codecommit_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision an Git Codecommit endpoint to the VPC",
							},
							"enable_glue_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision a Glue endpoint to the VPC",
							},
							"enable_ipv6": {
								"default":     false,
								"description": "Requests an Amazon-provided IPv6 CIDR block with a /56 prefix length for the VPC. You cannot specify the range of IP addresses, or the size of the CIDR block.",
							},
							"enable_kinesis_firehose_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision a Kinesis Firehose endpoint to the VPC",
							},
							"enable_kinesis_streams_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision a Kinesis Streams endpoint to the VPC",
							},
							"enable_kms_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision a KMS endpoint to the VPC",
							},
							"enable_lambda_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision a Lambda endpoint to the VPC",
							},
							"enable_logs_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision a CloudWatch Logs endpoint to the VPC",
							},
							"enable_monitoring_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision a CloudWatch Monitoring endpoint to the VPC",
							},
							"enable_nat_gateway": {
								"default":     false,
								"description": "Should be true if you want to provision NAT Gateways for each of your private networks",
							},
							"enable_public_redshift": {
								"default":     false,
								"description": "Controls if redshift should have public routing table",
							},
							"enable_public_s3_endpoint": {
								"default":     true,
								"description": "Whether to enable S3 VPC Endpoint for public subnets",
							},
							"enable_qldb_session_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision an QLDB Session endpoint to the VPC",
							},
							"enable_rds_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision an RDS endpoint to the VPC",
							},
							"enable_rekognition_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision a Rekognition endpoint to the VPC",
							},
							"enable_s3_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision an S3 endpoint to the VPC",
							},
							"enable_sagemaker_api_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision a SageMaker API endpoint to the VPC",
							},
							"enable_sagemaker_notebook_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision a Sagemaker Notebook endpoint to the VPC",
							},
							"enable_sagemaker_runtime_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision a SageMaker Runtime endpoint to the VPC",
							},
							"enable_secretsmanager_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision an Secrets Manager endpoint to the VPC",
							},
							"enable_servicecatalog_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision a Service Catalog endpoint to the VPC",
							},
							"enable_ses_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision an SES endpoint to the VPC",
							},
							"enable_sms_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision an SMS endpoint to the VPC",
							},
							"enable_sns_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision a SNS endpoint to the VPC",
							},
							"enable_sqs_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision an SQS endpoint to the VPC",
							},
							"enable_ssm_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision an SSM endpoint to the VPC",
							},
							"enable_ssmmessages_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision a SSMMESSAGES endpoint to the VPC",
							},
							"enable_states_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision a Step Function endpoint to the VPC",
							},
							"enable_storagegateway_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision a Storage Gateway endpoint to the VPC",
							},
							"enable_sts_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision a STS endpoint to the VPC",
							},
							"enable_textract_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision an Textract endpoint to the VPC",
							},
							"enable_transfer_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision a Transfer endpoint to the VPC",
							},
							"enable_transferserver_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision a Transfer Server endpoint to the VPC",
							},
							"enable_vpn_gateway": {
								"default":     false,
								"description": "Should be true if you want to create a new VPN Gateway resource and attach it to the VPC",
							},
							"enable_workspaces_endpoint": {
								"default":     false,
								"description": "Should be true if you want to provision an Workspaces endpoint to the VPC",
							},
							"events_endpoint_policy": {
								"description": "A policy to attach to the endpoint that controls access to the service. Defaults to full access",
							},
							"events_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for CloudWatch Events endpoint",
							},
							"events_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for CloudWatch Events endpoint",
							},
							"events_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for CloudWatch Events endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"external_nat_ip_ids": {
								"default":     [],
								"description": "List of EIP IDs to be assigned to the NAT Gateways (used in combination with reuse_nat_ips)",
							},
							"external_nat_ips": {
								"default":     [],
								"description": "List of EIPs to be used for `nat_public_ips` output (used in combination with reuse_nat_ips and external_nat_ip_ids)",
							},
							"flow_log_cloudwatch_iam_role_arn": {
								"default":     "",
								"description": "The ARN for the IAM role that's used to post flow logs to a CloudWatch Logs log group. When flow_log_destination_arn is set to ARN of Cloudwatch Logs, this argument needs to be provided.",
							},
							"flow_log_cloudwatch_log_group_kms_key_id": {
								"description": "The ARN of the KMS Key to use when encrypting log data for VPC flow logs.",
							},
							"flow_log_cloudwatch_log_group_name_prefix": {
								"default":     "/aws/vpc-flow-log/",
								"description": "Specifies the name prefix of CloudWatch Log Group for VPC flow logs.",
							},
							"flow_log_cloudwatch_log_group_retention_in_days": {
								"description": "Specifies the number of days you want to retain log events in the specified log group for VPC flow logs.",
							},
							"flow_log_destination_arn": {
								"default":     "",
								"description": "The ARN of the CloudWatch log group or S3 bucket where VPC Flow Logs will be pushed. If this ARN is a S3 bucket the appropriate permissions need to be set on that bucket's policy. When create_flow_log_cloudwatch_log_group is set to false this argument must be provided.",
							},
							"flow_log_destination_type": {
								"default":     "cloud-watch-logs",
								"description": "Type of flow log destination. Can be s3 or cloud-watch-logs.",
							},
							"flow_log_log_format": {
								"description": "The fields to include in the flow log record, in the order in which they should appear.",
							},
							"flow_log_max_aggregation_interval": {
								"default":     600,
								"description": "The maximum interval of time during which a flow of packets is captured and aggregated into a flow log record. Valid Values: `60` seconds or `600` seconds.",
							},
							"flow_log_traffic_type": {
								"default":     "ALL",
								"description": "The type of traffic to capture. Valid values: ACCEPT, REJECT, ALL.",
							},
							"git_codecommit_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for Git Codecommit endpoint",
							},
							"git_codecommit_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for Git Codecommit endpoint",
							},
							"git_codecommit_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for Git Codecommit endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"glue_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for Glue endpoint",
							},
							"glue_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for Glue endpoint",
							},
							"glue_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for Glue endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"igw_tags": {
								"default":     {},
								"description": "Additional tags for the internet gateway",
							},
							"instance_tenancy": {
								"default":     "default",
								"description": "A tenancy option for instances launched into the VPC",
							},
							"intra_acl_tags": {
								"default":     {},
								"description": "Additional tags for the intra subnets network ACL",
							},
							"intra_dedicated_network_acl": {
								"default":     false,
								"description": "Whether to use dedicated network ACL (not default) and custom rules for intra subnets",
							},
							"intra_inbound_acl_rules": {
								"default": [
									{
										"cidr_block":  "0.0.0.0/0",
										"from_port":   "0",
										"protocol":    "-1",
										"rule_action": "allow",
										"rule_number": "100",
										"to_port":     "0",
									},
								],
								"description": "Intra subnets inbound network ACLs",
							},
							"intra_outbound_acl_rules": {
								"default": [
									{
										"cidr_block":  "0.0.0.0/0",
										"from_port":   "0",
										"protocol":    "-1",
										"rule_action": "allow",
										"rule_number": "100",
										"to_port":     "0",
									},
								],
								"description": "Intra subnets outbound network ACLs",
							},
							"intra_route_table_tags": {
								"default":     {},
								"description": "Additional tags for the intra route tables",
							},
							"intra_subnet_assign_ipv6_address_on_creation": {
								"description": "Assign IPv6 address on intra subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch",
							},
							"intra_subnet_ipv6_prefixes": {
								"default":     [],
								"description": "Assigns IPv6 intra subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list",
							},
							"intra_subnet_suffix": {
								"default":     "intra",
								"description": "Suffix to append to intra subnets name",
							},
							"intra_subnet_tags": {
								"default":     {},
								"description": "Additional tags for the intra subnets",
							},
							"intra_subnets": {
								"default":     [],
								"description": "A list of intra subnets",
							},
							"kinesis_firehose_endpoint_policy": {
								"description": "A policy to attach to the endpoint that controls access to the service. Defaults to full access",
							},
							"kinesis_firehose_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for Kinesis Firehose endpoint",
							},
							"kinesis_firehose_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for Kinesis Firehose endpoint",
							},
							"kinesis_firehose_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for Kinesis Firehose endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"kinesis_streams_endpoint_policy": {
								"description": "A policy to attach to the endpoint that controls access to the service. Defaults to full access",
							},
							"kinesis_streams_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for Kinesis Streams endpoint",
							},
							"kinesis_streams_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for Kinesis Streams endpoint",
							},
							"kinesis_streams_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for Kinesis Streams endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"kms_endpoint_policy": {
								"description": "A policy to attach to the endpoint that controls access to the service. Defaults to full access",
							},
							"kms_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for KMS endpoint",
							},
							"kms_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for KMS endpoint",
							},
							"kms_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for KMS endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"lambda_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for Lambda endpoint",
							},
							"lambda_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for Lambda endpoint",
							},
							"lambda_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for Lambda endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"logs_endpoint_policy": {
								"description": "A policy to attach to the endpoint that controls access to the service. Defaults to full access",
							},
							"logs_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for CloudWatch Logs endpoint",
							},
							"logs_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for CloudWatch Logs endpoint",
							},
							"logs_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for CloudWatch Logs endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"manage_default_network_acl": {
								"default":     false,
								"description": "Should be true to adopt and manage Default Network ACL",
							},
							"manage_default_route_table": {
								"default":     false,
								"description": "Should be true to manage default route table",
							},
							"manage_default_security_group": {
								"default":     false,
								"description": "Should be true to adopt and manage default security group",
							},
							"manage_default_vpc": {
								"default":     false,
								"description": "Should be true to adopt and manage Default VPC",
							},
							"map_public_ip_on_launch": {
								"default":     true,
								"description": "Should be false if you do not want to auto-assign public IP on launch",
							},
							"monitoring_endpoint_policy": {
								"description": "A policy to attach to the endpoint that controls access to the service. Defaults to full access",
							},
							"monitoring_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for CloudWatch Monitoring endpoint",
							},
							"monitoring_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for CloudWatch Monitoring endpoint",
							},
							"monitoring_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for CloudWatch Monitoring endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"name": {
								"default":     "",
								"description": "Name to be used on all the resources as identifier",
							},
							"nat_eip_tags": {
								"default":     {},
								"description": "Additional tags for the NAT EIP",
							},
							"nat_gateway_tags": {
								"default":     {},
								"description": "Additional tags for the NAT gateways",
							},
							"one_nat_gateway_per_az": {
								"default":     false,
								"description": "Should be true if you want only one NAT Gateway per availability zone. Requires `var.azs` to be set, and the number of `public_subnets` created to be greater than or equal to the number of availability zones specified in `var.azs`.",
							},
							"private_acl_tags": {
								"default":     {},
								"description": "Additional tags for the private subnets network ACL",
							},
							"private_dedicated_network_acl": {
								"default":     false,
								"description": "Whether to use dedicated network ACL (not default) and custom rules for private subnets",
							},
							"private_inbound_acl_rules": {
								"default": [
									{
										"cidr_block":  "0.0.0.0/0",
										"from_port":   "0",
										"protocol":    "-1",
										"rule_action": "allow",
										"rule_number": "100",
										"to_port":     "0",
									},
								],
								"description": "Private subnets inbound network ACLs",
							},
							"private_outbound_acl_rules": {
								"default": [
									{
										"cidr_block":  "0.0.0.0/0",
										"from_port":   "0",
										"protocol":    "-1",
										"rule_action": "allow",
										"rule_number": "100",
										"to_port":     "0",
									},
								],
								"description": "Private subnets outbound network ACLs",
							},
							"private_route_table_tags": {
								"default":     {},
								"description": "Additional tags for the private route tables",
							},
							"private_subnet_assign_ipv6_address_on_creation": {
								"description": "Assign IPv6 address on private subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch",
							},
							"private_subnet_ipv6_prefixes": {
								"default":     [],
								"description": "Assigns IPv6 private subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list",
							},
							"private_subnet_suffix": {
								"default":     "private",
								"description": "Suffix to append to private subnets name",
							},
							"private_subnet_tags": {
								"default":     {},
								"description": "Additional tags for the private subnets",
							},
							"private_subnets": {
								"default":     [],
								"description": "A list of private subnets inside the VPC",
							},
							"propagate_intra_route_tables_vgw": {
								"default":     false,
								"description": "Should be true if you want route table propagation",
							},
							"propagate_private_route_tables_vgw": {
								"default":     false,
								"description": "Should be true if you want route table propagation",
							},
							"propagate_public_route_tables_vgw": {
								"default":     false,
								"description": "Should be true if you want route table propagation",
							},
							"public_acl_tags": {
								"default":     {},
								"description": "Additional tags for the public subnets network ACL",
							},
							"public_dedicated_network_acl": {
								"default":     false,
								"description": "Whether to use dedicated network ACL (not default) and custom rules for public subnets",
							},
							"public_inbound_acl_rules": {
								"default": [
									{
										"cidr_block":  "0.0.0.0/0",
										"from_port":   "0",
										"protocol":    "-1",
										"rule_action": "allow",
										"rule_number": "100",
										"to_port":     "0",
									},
								],
								"description": "Public subnets inbound network ACLs",
							},
							"public_outbound_acl_rules": {
								"default": [
									{
										"cidr_block":  "0.0.0.0/0",
										"from_port":   "0",
										"protocol":    "-1",
										"rule_action": "allow",
										"rule_number": "100",
										"to_port":     "0",
									},
								],
								"description": "Public subnets outbound network ACLs",
							},
							"public_route_table_tags": {
								"default":     {},
								"description": "Additional tags for the public route tables",
							},
							"public_subnet_assign_ipv6_address_on_creation": {
								"description": "Assign IPv6 address on public subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch",
							},
							"public_subnet_ipv6_prefixes": {
								"default":     [],
								"description": "Assigns IPv6 public subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list",
							},
							"public_subnet_suffix": {
								"default":     "public",
								"description": "Suffix to append to public subnets name",
							},
							"public_subnet_tags": {
								"default":     {},
								"description": "Additional tags for the public subnets",
							},
							"public_subnets": {
								"default":     [],
								"description": "A list of public subnets inside the VPC",
							},
							"qldb_session_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for QLDB Session endpoint",
							},
							"qldb_session_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for QLDB Session endpoint",
							},
							"qldb_session_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for QLDB Session endpoint. Only a single subnet within an AZ is supported. Ifomitted, private subnets will be used.",
							},
							"rds_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for RDS endpoint",
							},
							"rds_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for RDS endpoint",
							},
							"rds_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for RDS endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"redshift_acl_tags": {
								"default":     {},
								"description": "Additional tags for the redshift subnets network ACL",
							},
							"redshift_dedicated_network_acl": {
								"default":     false,
								"description": "Whether to use dedicated network ACL (not default) and custom rules for redshift subnets",
							},
							"redshift_inbound_acl_rules": {
								"default": [
									{
										"cidr_block":  "0.0.0.0/0",
										"from_port":   "0",
										"protocol":    "-1",
										"rule_action": "allow",
										"rule_number": "100",
										"to_port":     "0",
									},
								],
								"description": "Redshift subnets inbound network ACL rules",
							},
							"redshift_outbound_acl_rules": {
								"default": [
									{
										"cidr_block":  "0.0.0.0/0",
										"from_port":   "0",
										"protocol":    "-1",
										"rule_action": "allow",
										"rule_number": "100",
										"to_port":     "0",
									},
								],
								"description": "Redshift subnets outbound network ACL rules",
							},
							"redshift_route_table_tags": {
								"default":     {},
								"description": "Additional tags for the redshift route tables",
							},
							"redshift_subnet_assign_ipv6_address_on_creation": {
								"description": "Assign IPv6 address on redshift subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch",
							},
							"redshift_subnet_group_tags": {
								"default":     {},
								"description": "Additional tags for the redshift subnet group",
							},
							"redshift_subnet_ipv6_prefixes": {
								"default":     [],
								"description": "Assigns IPv6 redshift subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list",
							},
							"redshift_subnet_suffix": {
								"default":     "redshift",
								"description": "Suffix to append to redshift subnets name",
							},
							"redshift_subnet_tags": {
								"default":     {},
								"description": "Additional tags for the redshift subnets",
							},
							"redshift_subnets": {
								"default":     [],
								"description": "A list of redshift subnets",
							},
							"rekognition_endpoint_policy": {
								"description": "A policy to attach to the endpoint that controls access to the service. Defaults to full access",
							},
							"rekognition_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for Rekognition endpoint",
							},
							"rekognition_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for Rekognition endpoint",
							},
							"rekognition_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for Rekognition endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"reuse_nat_ips": {
								"default":     false,
								"description": "Should be true if you don't want EIPs to be created for your NAT Gateways and will instead pass them in via the 'external_nat_ip_ids' variable",
							},
							"s3_endpoint_policy": {
								"description": "A policy to attach to the endpoint that controls access to the service. Defaults to full access",
							},
							"s3_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for S3 interface endpoint",
							},
							"s3_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for S3 interface endpoint",
							},
							"s3_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for S3 interface endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"s3_endpoint_type": {
								"default":     "Gateway",
								"description": "S3 VPC endpoint type. Note - S3 Interface type support is only available on AWS provider 3.10 and later",
							},
							"sagemaker_api_endpoint_policy": {
								"description": "A policy to attach to the endpoint that controls access to the service. Defaults to full access",
							},
							"sagemaker_api_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for SageMaker API endpoint",
							},
							"sagemaker_api_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for SageMaker API endpoint",
							},
							"sagemaker_api_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for SageMaker API endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"sagemaker_notebook_endpoint_policy": {
								"description": "A policy to attach to the endpoint that controls access to the service. Defaults to full access",
							},
							"sagemaker_notebook_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for Sagemaker Notebook endpoint",
							},
							"sagemaker_notebook_endpoint_region": {
								"default":     "",
								"description": "Region to use for Sagemaker Notebook endpoint",
							},
							"sagemaker_notebook_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for Sagemaker Notebook endpoint",
							},
							"sagemaker_notebook_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for Sagemaker Notebook endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"sagemaker_runtime_endpoint_policy": {
								"description": "A policy to attach to the endpoint that controls access to the service. Defaults to full access",
							},
							"sagemaker_runtime_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for SageMaker Runtime endpoint",
							},
							"sagemaker_runtime_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for SageMaker Runtime endpoint",
							},
							"sagemaker_runtime_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for SageMaker Runtime endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"secondary_cidr_blocks": {
								"default":     [],
								"description": "List of secondary CIDR blocks to associate with the VPC to extend the IP Address pool",
							},
							"secretsmanager_endpoint_policy": {
								"description": "A policy to attach to the endpoint that controls access to the service. Defaults to full access",
							},
							"secretsmanager_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for Secrets Manager endpoint",
							},
							"secretsmanager_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for Secrets Manager endpoint",
							},
							"secretsmanager_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for Secrets Manager endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"servicecatalog_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for Service Catalog endpoint",
							},
							"servicecatalog_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for Service Catalog endpoint",
							},
							"servicecatalog_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for Service Catalog endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"ses_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for SES endpoint",
							},
							"ses_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for SES endpoint",
							},
							"ses_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for SES endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"single_nat_gateway": {
								"default":     false,
								"description": "Should be true if you want to provision a single shared NAT Gateway across all of your private networks",
							},
							"sms_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for SMS endpoint",
							},
							"sms_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for SMS endpoint",
							},
							"sms_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for SMS endpoint. Only a single subnet within an AZ is supported. Ifomitted, private subnets will be used.",
							},
							"sns_endpoint_policy": {
								"description": "A policy to attach to the endpoint that controls access to the service. Defaults to full access",
							},
							"sns_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for SNS endpoint",
							},
							"sns_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for SNS endpoint",
							},
							"sns_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for SNS endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"sqs_endpoint_policy": {
								"description": "A policy to attach to the endpoint that controls access to the service. Defaults to full access",
							},
							"sqs_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for SQS endpoint",
							},
							"sqs_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for SQS endpoint",
							},
							"sqs_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for SQS endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"ssm_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for SSM endpoint",
							},
							"ssm_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for SSM endpoint",
							},
							"ssm_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for SSM endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"ssmmessages_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for SSMMESSAGES endpoint",
							},
							"ssmmessages_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for SSMMESSAGES endpoint",
							},
							"ssmmessages_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for SSMMESSAGES endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"states_endpoint_policy": {
								"description": "A policy to attach to the endpoint that controls access to the service. Defaults to full access",
							},
							"states_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for Step Function endpoint",
							},
							"states_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for Step Function endpoint",
							},
							"states_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for Step Function endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"storagegateway_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for Storage Gateway endpoint",
							},
							"storagegateway_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for Storage Gateway endpoint",
							},
							"storagegateway_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for Storage Gateway endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"sts_endpoint_policy": {
								"description": "A policy to attach to the endpoint that controls access to the service. Defaults to full access",
							},
							"sts_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for STS endpoint",
							},
							"sts_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for STS endpoint",
							},
							"sts_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for STS endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"tags": {
								"default":     {},
								"description": "A map of tags to add to all resources",
							},
							"textract_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for Textract endpoint",
							},
							"textract_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for Textract endpoint",
							},
							"textract_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for Textract endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"transfer_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for Transfer endpoint",
							},
							"transfer_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for Transfer endpoint",
							},
							"transfer_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for Transfer endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"transferserver_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for Transfer Server endpoint",
							},
							"transferserver_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for Transfer Server endpoint",
							},
							"transferserver_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for Transfer Server endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used.",
							},
							"vpc_endpoint_tags": {
								"default":     {},
								"description": "Additional tags for the VPC Endpoints",
							},
							"vpc_flow_log_permissions_boundary": {
								"description": "The ARN of the Permissions Boundary for the VPC Flow Log IAM Role",
							},
							"vpc_flow_log_tags": {
								"default":     {},
								"description": "Additional tags for the VPC Flow Logs",
							},
							"vpc_tags": {
								"default":     {},
								"description": "Additional tags for the VPC",
							},
							"vpn_gateway_az": {
								"description": "The Availability Zone for the VPN Gateway",
							},
							"vpn_gateway_id": {
								"default":     "",
								"description": "ID of VPN Gateway to attach to the VPC",
							},
							"vpn_gateway_tags": {
								"default":     {},
								"description": "Additional tags for the VPN gateway",
							},
							"workspaces_endpoint_policy": {
								"description": "A policy to attach to the endpoint that controls access to the service. Defaults to full access",
							},
							"workspaces_endpoint_private_dns_enabled": {
								"default":     false,
								"description": "Whether or not to associate a private hosted zone with the specified VPC for Workspaces endpoint",
							},
							"workspaces_endpoint_security_group_ids": {
								"default":     [],
								"description": "The ID of one or more security groups to associate with the network interface for Workspaces endpoint",
							},
							"workspaces_endpoint_subnet_ids": {
								"default":     [],
								"description": "The ID of one or more subnets in which to create a network interface for Workspaces endpoint. Only a single subnet within an AZ is supported. Ifomitted, private subnets will be used.",
							},
						},
					},
					"source":             "terraform-aws-modules/vpc/aws",
					"version_constraint": "2.77.0",
				},
			},
			"outputs": {
				"rds_hostname": {
					"description": "RDS instance hostname",
					"expression": {
						"references": [
							"aws_db_instance.education.address",
							"aws_db_instance.education",
						],
					},
					"sensitive": true,
				},
				"rds_port": {
					"description": "RDS instance port",
					"expression": {
						"references": [
							"aws_db_instance.education.port",
							"aws_db_instance.education",
						],
					},
					"sensitive": true,
				},
				"rds_username": {
					"description": "RDS instance root username",
					"expression": {
						"references": [
							"aws_db_instance.education.username",
							"aws_db_instance.education",
						],
					},
					"sensitive": true,
				},
			},
			"resources": [
				{
					"address": "aws_db_instance.education",
					"expressions": {
						"allocated_storage": {
							"constant_value": 5,
						},
						"db_subnet_group_name": {
							"references": [
								"aws_db_subnet_group.education.name",
								"aws_db_subnet_group.education",
							],
						},
						"engine": {
							"constant_value": "postgres",
						},
						"engine_version": {
							"constant_value": "13.3",
						},
						"identifier": {
							"constant_value": "education",
						},
						"instance_class": {
							"constant_value": "db.t3.micro",
						},
						"parameter_group_name": {
							"references": [
								"aws_db_parameter_group.education.name",
								"aws_db_parameter_group.education",
							],
						},
						"password": {
							"references": [
								"var.db_password",
							],
						},
						"publicly_accessible": {
							"constant_value": true,
						},
						"skip_final_snapshot": {
							"constant_value": true,
						},
						"storage_encrypted": {
							"constant_value": null,
						},
						"username": {
							"constant_value": "edu",
						},
						"vpc_security_group_ids": {
							"references": [
								"aws_security_group.rds.id",
								"aws_security_group.rds",
							],
						},
					},
					"mode":                "managed",
					"name":                "education",
					"provider_config_key": "aws",
					"schema_version":      1,
					"type":                "aws_db_instance",
				},
				{
					"address": "aws_db_parameter_group.education",
					"expressions": {
						"family": {
							"constant_value": "postgres13",
						},
						"name": {
							"constant_value": "education",
						},
						"parameter": [
							{
								"name": {
									"constant_value": "log_connections",
								},
								"value": {
									"constant_value": "1",
								},
							},
						],
					},
					"mode":                "managed",
					"name":                "education",
					"provider_config_key": "aws",
					"schema_version":      0,
					"type":                "aws_db_parameter_group",
				},
				{
					"address": "aws_db_subnet_group.education",
					"expressions": {
						"name": {
							"constant_value": "education",
						},
						"subnet_ids": {
							"references": [
								"module.vpc.public_subnets",
								"module.vpc",
							],
						},
						"tags": {
							"constant_value": {
								"Name": "Education",
							},
						},
					},
					"mode":                "managed",
					"name":                "education",
					"provider_config_key": "aws",
					"schema_version":      0,
					"type":                "aws_db_subnet_group",
				},
				{
					"address": "aws_security_group.rds",
					"expressions": {
						"egress": {
							"constant_value": [
								{
									"cidr_blocks": [
										"0.0.0.0/0",
									],
									"description":      null,
									"from_port":        5432,
									"ipv6_cidr_blocks": null,
									"prefix_list_ids":  null,
									"protocol":         "tcp",
									"security_groups":  null,
									"self":             null,
									"to_port":          5432,
								},
							],
						},
						"ingress": {
							"constant_value": [
								{
									"cidr_blocks": [
										"0.0.0.0/0",
									],
									"description":      null,
									"from_port":        5432,
									"ipv6_cidr_blocks": null,
									"prefix_list_ids":  null,
									"protocol":         "tcp",
									"security_groups":  null,
									"self":             null,
									"to_port":          5432,
								},
							],
						},
						"name": {
							"constant_value": "education_rds",
						},
						"tags": {
							"constant_value": {
								"Name": "education_rds",
							},
						},
						"vpc_id": {
							"references": [
								"module.vpc.vpc_id",
								"module.vpc",
							],
						},
					},
					"mode":                "managed",
					"name":                "rds",
					"provider_config_key": "aws",
					"schema_version":      1,
					"type":                "aws_security_group",
				},
				{
					"address":             "data.aws_availability_zones.available",
					"mode":                "data",
					"name":                "available",
					"provider_config_key": "aws",
					"schema_version":      0,
					"type":                "aws_availability_zones",
				},
			],
			"variables": {
				"db_password": {
					"description": "RDS root user password",
					"sensitive":   true,
				},
				"region": {
					"default":     "us-east-2",
					"description": "AWS region",
				},
			},
		},
	},
	"format_version": "1.0",
	"output_changes": {
		"rds_hostname": {
			"actions": [
				"create",
			],
			"after":            "REDACTED_SENSITIVE",
			"after_sensitive":  true,
			"after_unknown":    true,
			"before":           "REDACTED_SENSITIVE",
			"before_sensitive": true,
		},
		"rds_port": {
			"actions": [
				"create",
			],
			"after":            "REDACTED_SENSITIVE",
			"after_sensitive":  true,
			"after_unknown":    true,
			"before":           "REDACTED_SENSITIVE",
			"before_sensitive": true,
		},
		"rds_username": {
			"actions": [
				"create",
			],
			"after":            "REDACTED_SENSITIVE",
			"after_sensitive":  true,
			"after_unknown":    false,
			"before":           "REDACTED_SENSITIVE",
			"before_sensitive": true,
		},
	},
	"planned_values": {
		"outputs": {
			"rds_hostname": {
				"sensitive": true,
				"value":     "REDACTED_SENSITIVE",
			},
			"rds_port": {
				"sensitive": true,
				"value":     "REDACTED_SENSITIVE",
			},
			"rds_username": {
				"sensitive": true,
				"value":     "REDACTED_SENSITIVE",
			},
		},
		"root_module": {
			"child_modules": [
				{
					"address": "module.vpc",
					"resources": [
						{
							"address":        "module.vpc.aws_internet_gateway.this[0]",
							"index":          0,
							"mode":           "managed",
							"name":           "this",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 0,
							"sensitive_values": {
								"tags": {},
							},
							"type": "aws_internet_gateway",
							"values": {
								"tags": {
									"Name": "education",
								},
							},
						},
						{
							"address":        "module.vpc.aws_route.public_internet_gateway[0]",
							"index":          0,
							"mode":           "managed",
							"name":           "public_internet_gateway",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 0,
							"sensitive_values": {
								"timeouts": {},
							},
							"type": "aws_route",
							"values": {
								"destination_cidr_block":      "0.0.0.0/0",
								"destination_ipv6_cidr_block": null,
								"timeouts": {
									"create": "5m",
									"delete": null,
								},
								"transit_gateway_id":        null,
								"vpc_endpoint_id":           null,
								"vpc_peering_connection_id": null,
							},
						},
						{
							"address":        "module.vpc.aws_route_table.public[0]",
							"index":          0,
							"mode":           "managed",
							"name":           "public",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 0,
							"sensitive_values": {
								"propagating_vgws": [],
								"route":            [],
								"tags":             {},
							},
							"type": "aws_route_table",
							"values": {
								"tags": {
									"Name": "education-public",
								},
							},
						},
						{
							"address":          "module.vpc.aws_route_table_association.public[0]",
							"index":            0,
							"mode":             "managed",
							"name":             "public",
							"provider_name":    "registry.terraform.io/hashicorp/aws",
							"schema_version":   0,
							"sensitive_values": {},
							"type":             "aws_route_table_association",
							"values": {
								"gateway_id": null,
							},
						},
						{
							"address":          "module.vpc.aws_route_table_association.public[1]",
							"index":            1,
							"mode":             "managed",
							"name":             "public",
							"provider_name":    "registry.terraform.io/hashicorp/aws",
							"schema_version":   0,
							"sensitive_values": {},
							"type":             "aws_route_table_association",
							"values": {
								"gateway_id": null,
							},
						},
						{
							"address":          "module.vpc.aws_route_table_association.public[2]",
							"index":            2,
							"mode":             "managed",
							"name":             "public",
							"provider_name":    "registry.terraform.io/hashicorp/aws",
							"schema_version":   0,
							"sensitive_values": {},
							"type":             "aws_route_table_association",
							"values": {
								"gateway_id": null,
							},
						},
						{
							"address":        "module.vpc.aws_subnet.public[0]",
							"index":          0,
							"mode":           "managed",
							"name":           "public",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 1,
							"sensitive_values": {
								"tags": {},
							},
							"type": "aws_subnet",
							"values": {
								"assign_ipv6_address_on_creation": false,
								"availability_zone":               "us-east-2a",
								"cidr_block":                      "10.122.4.0/24",
								"customer_owned_ipv4_pool":        null,
								"ipv6_cidr_block":                 null,
								"map_customer_owned_ip_on_launch": null,
								"map_public_ip_on_launch":         true,
								"outpost_arn":                     null,
								"tags": {
									"Name": "education-public-us-east-2a",
								},
								"timeouts": null,
							},
						},
						{
							"address":        "module.vpc.aws_subnet.public[1]",
							"index":          1,
							"mode":           "managed",
							"name":           "public",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 1,
							"sensitive_values": {
								"tags": {},
							},
							"type": "aws_subnet",
							"values": {
								"assign_ipv6_address_on_creation": false,
								"availability_zone":               "us-east-2b",
								"cidr_block":                      "10.122.5.0/24",
								"customer_owned_ipv4_pool":        null,
								"ipv6_cidr_block":                 null,
								"map_customer_owned_ip_on_launch": null,
								"map_public_ip_on_launch":         true,
								"outpost_arn":                     null,
								"tags": {
									"Name": "education-public-us-east-2b",
								},
								"timeouts": null,
							},
						},
						{
							"address":        "module.vpc.aws_subnet.public[2]",
							"index":          2,
							"mode":           "managed",
							"name":           "public",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 1,
							"sensitive_values": {
								"tags": {},
							},
							"type": "aws_subnet",
							"values": {
								"assign_ipv6_address_on_creation": false,
								"availability_zone":               "us-east-2c",
								"cidr_block":                      "10.122.6.0/24",
								"customer_owned_ipv4_pool":        null,
								"ipv6_cidr_block":                 null,
								"map_customer_owned_ip_on_launch": null,
								"map_public_ip_on_launch":         true,
								"outpost_arn":                     null,
								"tags": {
									"Name": "education-public-us-east-2c",
								},
								"timeouts": null,
							},
						},
						{
							"address":        "module.vpc.aws_vpc.this[0]",
							"index":          0,
							"mode":           "managed",
							"name":           "this",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 1,
							"sensitive_values": {
								"tags": {},
							},
							"type": "aws_vpc",
							"values": {
								"assign_generated_ipv6_cidr_block": false,
								"cidr_block":                       "10.122.0.0/16",
								"enable_dns_hostnames":             true,
								"enable_dns_support":               true,
								"instance_tenancy":                 "default",
								"tags": {
									"Name": "education",
								},
							},
						},
					],
				},
			],
			"resources": [
				{
					"address":        "aws_db_instance.education",
					"mode":           "managed",
					"name":           "education",
					"provider_name":  "registry.terraform.io/hashicorp/aws",
					"schema_version": 1,
					"sensitive_values": {
						"password":                 true,
						"replicas":                 [],
						"restore_to_point_in_time": [],
						"s3_import":                [],
						"vpc_security_group_ids":   [],
					},
					"type": "aws_db_instance",
					"values": {
						"allocated_storage":               5,
						"allow_major_version_upgrade":     null,
						"auto_minor_version_upgrade":      true,
						"copy_tags_to_snapshot":           false,
						"db_subnet_group_name":            "education",
						"delete_automated_backups":        true,
						"deletion_protection":             null,
						"domain":                          null,
						"domain_iam_role_name":            null,
						"enabled_cloudwatch_logs_exports": null,
						"engine":                              "postgres",
						"engine_version":                      "13.3",
						"final_snapshot_identifier":           null,
						"iam_database_authentication_enabled": null,
						"identifier":                          "education",
						"instance_class":                      "db.t3.micro",
						"iops":                                null,
						"max_allocated_storage":               null,
						"monitoring_interval":                 0,
						"parameter_group_name":                "education",
						"password":                            "REDACTED_SENSITIVE",
						"performance_insights_enabled":        false,
						"publicly_accessible":                 true,
						"replicate_source_db":                 null,
						"restore_to_point_in_time":            [],
						"s3_import":                           [],
						"security_group_names":                null,
						"skip_final_snapshot":                 true,
						"storage_encrypted":                   null,
						"tags":                                null,
						"timeouts":                            null,
						"username":                            "edu",
					},
				},
				{
					"address":        "aws_db_parameter_group.education",
					"mode":           "managed",
					"name":           "education",
					"provider_name":  "registry.terraform.io/hashicorp/aws",
					"schema_version": 0,
					"sensitive_values": {
						"parameter": [
							{},
						],
					},
					"type": "aws_db_parameter_group",
					"values": {
						"description": "Managed by Terraform",
						"family":      "postgres13",
						"name":        "education",
						"parameter": [
							{
								"apply_method": "immediate",
								"name":         "log_connections",
								"value":        "1",
							},
						],
						"tags": null,
					},
				},
				{
					"address":        "aws_db_subnet_group.education",
					"mode":           "managed",
					"name":           "education",
					"provider_name":  "registry.terraform.io/hashicorp/aws",
					"schema_version": 0,
					"sensitive_values": {
						"subnet_ids": [],
						"tags":       {},
					},
					"type": "aws_db_subnet_group",
					"values": {
						"description": "Managed by Terraform",
						"name":        "education",
						"tags": {
							"Name": "Education",
						},
					},
				},
				{
					"address":        "aws_security_group.rds",
					"mode":           "managed",
					"name":           "rds",
					"provider_name":  "registry.terraform.io/hashicorp/aws",
					"schema_version": 1,
					"sensitive_values": {
						"egress": [
							{
								"cidr_blocks": [
									false,
								],
								"ipv6_cidr_blocks": [],
								"prefix_list_ids":  [],
								"security_groups":  [],
							},
						],
						"ingress": [
							{
								"cidr_blocks": [
									false,
								],
								"ipv6_cidr_blocks": [],
								"prefix_list_ids":  [],
								"security_groups":  [],
							},
						],
						"tags": {},
					},
					"type": "aws_security_group",
					"values": {
						"description": "Managed by Terraform",
						"egress": [
							{
								"cidr_blocks": [
									"0.0.0.0/0",
								],
								"description":      "",
								"from_port":        5432,
								"ipv6_cidr_blocks": [],
								"prefix_list_ids":  [],
								"protocol":         "tcp",
								"security_groups":  [],
								"self":             false,
								"to_port":          5432,
							},
						],
						"ingress": [
							{
								"cidr_blocks": [
									"0.0.0.0/0",
								],
								"description":      "",
								"from_port":        5432,
								"ipv6_cidr_blocks": [],
								"prefix_list_ids":  [],
								"protocol":         "tcp",
								"security_groups":  [],
								"self":             false,
								"to_port":          5432,
							},
						],
						"name": "education_rds",
						"revoke_rules_on_delete": false,
						"tags": {
							"Name": "education_rds",
						},
						"timeouts": null,
					},
				},
			],
		},
	},
	"prior_state": {
		"format_version":    "1.0",
		"terraform_version": "1.1.9",
		"values": {
			"outputs": {
				"rds_username": {
					"sensitive": true,
					"value":     "REDACTED_SENSITIVE",
				},
			},
			"root_module": {
				"resources": [
					{
						"address":        "data.aws_availability_zones.available",
						"mode":           "data",
						"name":           "available",
						"provider_name":  "registry.terraform.io/hashicorp/aws",
						"schema_version": 0,
						"sensitive_values": {
							"group_names": [
								false,
							],
							"names": [
								false,
								false,
								false,
							],
							"zone_ids": [
								false,
								false,
								false,
							],
						},
						"type": "aws_availability_zones",
						"values": {
							"all_availability_zones": null,
							"exclude_names":          null,
							"exclude_zone_ids":       null,
							"filter":                 null,
							"group_names": [
								"us-east-2",
							],
							"id": "us-east-2",
							"names": [
								"us-east-2a",
								"us-east-2b",
								"us-east-2c",
							],
							"state": null,
							"zone_ids": [
								"use2-az1",
								"use2-az2",
								"use2-az3",
							],
						},
					},
				],
			},
		},
	},
	"resource_changes": [
		{
			"address": "aws_db_instance.education",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"allocated_storage":               5,
					"allow_major_version_upgrade":     null,
					"auto_minor_version_upgrade":      true,
					"copy_tags_to_snapshot":           false,
					"db_subnet_group_name":            "education",
					"delete_automated_backups":        true,
					"deletion_protection":             null,
					"domain":                          null,
					"domain_iam_role_name":            null,
					"enabled_cloudwatch_logs_exports": null,
					"engine":                              "postgres",
					"engine_version":                      "13.3",
					"final_snapshot_identifier":           null,
					"iam_database_authentication_enabled": null,
					"identifier":                          "education",
					"instance_class":                      "db.t3.micro",
					"iops":                                null,
					"max_allocated_storage":               null,
					"monitoring_interval":                 0,
					"parameter_group_name":                "education",
					"password":                            "REDACTED_SENSITIVE",
					"performance_insights_enabled":        false,
					"publicly_accessible":                 true,
					"replicate_source_db":                 null,
					"restore_to_point_in_time":            [],
					"s3_import":                           [],
					"security_group_names":                null,
					"skip_final_snapshot":                 true,
					"storage_encrypted":                   null,
					"tags":                                null,
					"timeouts":                            null,
					"username":                            "edu",
				},
				"after_sensitive": {
					"password":                 true,
					"replicas":                 [],
					"restore_to_point_in_time": [],
					"s3_import":                [],
					"vpc_security_group_ids":   [],
				},
				"after_unknown": {
					"address":                               true,
					"apply_immediately":                     true,
					"arn":                                   true,
					"availability_zone":                     true,
					"backup_retention_period":               true,
					"backup_window":                         true,
					"ca_cert_identifier":                    true,
					"character_set_name":                    true,
					"endpoint":                              true,
					"hosted_zone_id":                        true,
					"id":                                    true,
					"identifier_prefix":                     true,
					"kms_key_id":                            true,
					"latest_restorable_time":                true,
					"license_model":                         true,
					"maintenance_window":                    true,
					"monitoring_role_arn":                   true,
					"multi_az":                              true,
					"name":                                  true,
					"option_group_name":                     true,
					"performance_insights_kms_key_id":       true,
					"performance_insights_retention_period": true,
					"port":                     true,
					"replicas":                 true,
					"resource_id":              true,
					"restore_to_point_in_time": [],
					"s3_import":                [],
					"snapshot_identifier":      true,
					"status":                   true,
					"storage_type":             true,
					"timezone":                 true,
					"vpc_security_group_ids":   true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"mode":          "managed",
			"name":          "education",
			"provider_name": "registry.terraform.io/hashicorp/aws",
			"type":          "aws_db_instance",
		},
		{
			"address": "aws_db_parameter_group.education",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"description": "Managed by Terraform",
					"family":      "postgres13",
					"name":        "education",
					"parameter": [
						{
							"apply_method": "immediate",
							"name":         "log_connections",
							"value":        "1",
						},
					],
					"tags": null,
				},
				"after_sensitive": {
					"parameter": [
						{},
					],
				},
				"after_unknown": {
					"arn":         true,
					"id":          true,
					"name_prefix": true,
					"parameter": [
						{},
					],
				},
				"before":           null,
				"before_sensitive": false,
			},
			"mode":          "managed",
			"name":          "education",
			"provider_name": "registry.terraform.io/hashicorp/aws",
			"type":          "aws_db_parameter_group",
		},
		{
			"address": "aws_db_subnet_group.education",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"description": "Managed by Terraform",
					"name":        "education",
					"tags": {
						"Name": "Education",
					},
				},
				"after_sensitive": {
					"subnet_ids": [],
					"tags":       {},
				},
				"after_unknown": {
					"arn":         true,
					"id":          true,
					"name_prefix": true,
					"subnet_ids":  true,
					"tags":        {},
				},
				"before":           null,
				"before_sensitive": false,
			},
			"mode":          "managed",
			"name":          "education",
			"provider_name": "registry.terraform.io/hashicorp/aws",
			"type":          "aws_db_subnet_group",
		},
		{
			"address": "aws_security_group.rds",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"description": "Managed by Terraform",
					"egress": [
						{
							"cidr_blocks": [
								"0.0.0.0/0",
							],
							"description":      "",
							"from_port":        5432,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "tcp",
							"security_groups":  [],
							"self":             false,
							"to_port":          5432,
						},
					],
					"ingress": [
						{
							"cidr_blocks": [
								"0.0.0.0/0",
							],
							"description":      "",
							"from_port":        5432,
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"protocol":         "tcp",
							"security_groups":  [],
							"self":             false,
							"to_port":          5432,
						},
					],
					"name": "education_rds",
					"revoke_rules_on_delete": false,
					"tags": {
						"Name": "education_rds",
					},
					"timeouts": null,
				},
				"after_sensitive": {
					"egress": [
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
					],
					"ingress": [
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
					],
					"tags": {},
				},
				"after_unknown": {
					"arn": true,
					"egress": [
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
					],
					"id": true,
					"ingress": [
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [],
							"prefix_list_ids":  [],
							"security_groups":  [],
						},
					],
					"name_prefix": true,
					"owner_id":    true,
					"tags":        {},
					"vpc_id":      true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"mode":          "managed",
			"name":          "rds",
			"provider_name": "registry.terraform.io/hashicorp/aws",
			"type":          "aws_security_group",
		},
		{
			"address": "module.vpc.aws_internet_gateway.this[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"tags": {
						"Name": "education",
					},
				},
				"after_sensitive": {
					"tags": {},
				},
				"after_unknown": {
					"arn":      true,
					"id":       true,
					"owner_id": true,
					"tags":     {},
					"vpc_id":   true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "this",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_internet_gateway",
		},
		{
			"address": "module.vpc.aws_route.public_internet_gateway[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"destination_cidr_block":      "0.0.0.0/0",
					"destination_ipv6_cidr_block": null,
					"timeouts": {
						"create": "5m",
						"delete": null,
					},
					"transit_gateway_id":        null,
					"vpc_endpoint_id":           null,
					"vpc_peering_connection_id": null,
				},
				"after_sensitive": {
					"timeouts": {},
				},
				"after_unknown": {
					"destination_prefix_list_id": true,
					"egress_only_gateway_id":     true,
					"gateway_id":                 true,
					"id":                         true,
					"instance_id":                true,
					"instance_owner_id":          true,
					"local_gateway_id":           true,
					"nat_gateway_id":             true,
					"network_interface_id":       true,
					"origin":                     true,
					"route_table_id":             true,
					"state":                      true,
					"timeouts":                   {},
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "public_internet_gateway",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_route",
		},
		{
			"address": "module.vpc.aws_route_table.public[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"tags": {
						"Name": "education-public",
					},
				},
				"after_sensitive": {
					"propagating_vgws": [],
					"route":            [],
					"tags":             {},
				},
				"after_unknown": {
					"id":               true,
					"owner_id":         true,
					"propagating_vgws": true,
					"route":            true,
					"tags":             {},
					"vpc_id":           true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "public",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_route_table",
		},
		{
			"address": "module.vpc.aws_route_table_association.public[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"gateway_id": null,
				},
				"after_sensitive": {},
				"after_unknown": {
					"id":             true,
					"route_table_id": true,
					"subnet_id":      true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "public",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_route_table_association",
		},
		{
			"address": "module.vpc.aws_route_table_association.public[1]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"gateway_id": null,
				},
				"after_sensitive": {},
				"after_unknown": {
					"id":             true,
					"route_table_id": true,
					"subnet_id":      true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          1,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "public",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_route_table_association",
		},
		{
			"address": "module.vpc.aws_route_table_association.public[2]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"gateway_id": null,
				},
				"after_sensitive": {},
				"after_unknown": {
					"id":             true,
					"route_table_id": true,
					"subnet_id":      true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          2,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "public",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_route_table_association",
		},
		{
			"address": "module.vpc.aws_subnet.public[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"assign_ipv6_address_on_creation": false,
					"availability_zone":               "us-east-2a",
					"cidr_block":                      "10.122.4.0/24",
					"customer_owned_ipv4_pool":        null,
					"ipv6_cidr_block":                 null,
					"map_customer_owned_ip_on_launch": null,
					"map_public_ip_on_launch":         true,
					"outpost_arn":                     null,
					"tags": {
						"Name": "education-public-us-east-2a",
					},
					"timeouts": null,
				},
				"after_sensitive": {
					"tags": {},
				},
				"after_unknown": {
					"arn": true,
					"availability_zone_id": true,
					"id": true,
					"ipv6_cidr_block_association_id": true,
					"owner_id":                       true,
					"tags":                           {},
					"vpc_id":                         true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "public",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_subnet",
		},
		{
			"address": "module.vpc.aws_subnet.public[1]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"assign_ipv6_address_on_creation": false,
					"availability_zone":               "us-east-2b",
					"cidr_block":                      "10.122.5.0/24",
					"customer_owned_ipv4_pool":        null,
					"ipv6_cidr_block":                 null,
					"map_customer_owned_ip_on_launch": null,
					"map_public_ip_on_launch":         true,
					"outpost_arn":                     null,
					"tags": {
						"Name": "education-public-us-east-2b",
					},
					"timeouts": null,
				},
				"after_sensitive": {
					"tags": {},
				},
				"after_unknown": {
					"arn": true,
					"availability_zone_id": true,
					"id": true,
					"ipv6_cidr_block_association_id": true,
					"owner_id":                       true,
					"tags":                           {},
					"vpc_id":                         true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          1,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "public",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_subnet",
		},
		{
			"address": "module.vpc.aws_subnet.public[2]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"assign_ipv6_address_on_creation": false,
					"availability_zone":               "us-east-2c",
					"cidr_block":                      "10.122.6.0/24",
					"customer_owned_ipv4_pool":        null,
					"ipv6_cidr_block":                 null,
					"map_customer_owned_ip_on_launch": null,
					"map_public_ip_on_launch":         true,
					"outpost_arn":                     null,
					"tags": {
						"Name": "education-public-us-east-2c",
					},
					"timeouts": null,
				},
				"after_sensitive": {
					"tags": {},
				},
				"after_unknown": {
					"arn": true,
					"availability_zone_id": true,
					"id": true,
					"ipv6_cidr_block_association_id": true,
					"owner_id":                       true,
					"tags":                           {},
					"vpc_id":                         true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          2,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "public",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_subnet",
		},
		{
			"address": "module.vpc.aws_vpc.this[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"assign_generated_ipv6_cidr_block": false,
					"cidr_block":                       "10.122.0.0/16",
					"enable_dns_hostnames":             true,
					"enable_dns_support":               true,
					"instance_tenancy":                 "default",
					"tags": {
						"Name": "education",
					},
				},
				"after_sensitive": {
					"tags": {},
				},
				"after_unknown": {
					"arn": true,
					"default_network_acl_id":         true,
					"default_route_table_id":         true,
					"default_security_group_id":      true,
					"dhcp_options_id":                true,
					"enable_classiclink":             true,
					"enable_classiclink_dns_support": true,
					"id": true,
					"ipv6_association_id": true,
					"ipv6_cidr_block":     true,
					"main_route_table_id": true,
					"owner_id":            true,
					"tags":                {},
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "this",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_vpc",
		},
	],
	"terraform_version": "1.1.9",
	"variables": {
		"db_password": {
			"value": "REDACTED_SENSITIVE",
		},
		"region": {
			"value": "us-east-2",
		},
	},
}
